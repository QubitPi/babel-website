"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1440],{35318:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return b}});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=s(a),h=r,b=m["".concat(l,".").concat(h)]||m[h]||c[h]||o;return a?n.createElement(b,i(i({ref:t},u),{},{components:a})):n.createElement(b,i({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},57402:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return m}});var n=a(25773),r=a(30808),o=(a(27378),a(35318)),i=["components"],p={layout:"post",title:"7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines",author:"Nicol\xf2 Ribaudo",authorURL:"https://twitter.com/NicoloRibaudo",date:new Date("2019-01-21T16:00:00.000Z"),categories:"announcements",share_text:"Babel 7.3.0 Released"},l=void 0,s={permalink:"/babel-website/blog/2019/01/21/7.3.0",source:"@site/blog/2019-01-21-7.3.0.md",title:"7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines",description:"After over 80 commits, the latest Babel minor release is here!",date:"2019-01-21T16:00:00.000Z",formattedDate:"January 21, 2019",tags:[],readingTime:3.915,hasTruncateMarker:!0,authors:[{name:"Nicol\xf2 Ribaudo",url:"https://twitter.com/NicoloRibaudo"}],frontMatter:{layout:"post",title:"7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines",author:"Nicol\xf2 Ribaudo",authorURL:"https://twitter.com/NicoloRibaudo",date:"2019-01-21T16:00:00.000Z",categories:"announcements",share_text:"Babel 7.3.0 Released"},prevItem:{title:"7.4.0 Released: core-js 3, static private methods and partial application",permalink:"/babel-website/blog/2019/03/19/7.4.0"},nextItem:{title:"7.2.0 Released: Private Instance Methods",permalink:"/babel-website/blog/2018/12/03/7.2.0"}},u={authorsImageUrls:[void 0]},m=[{value:"Private instance accessors (getters and setters) (#9101)",id:"private-instance-accessors-getters-and-setters-9101",level:2},{value:"Smart pipeline operator (#9179)",id:"smart-pipeline-operator-9179",level:2},{value:"Named capturing groups (#7105)",id:"named-capturing-groups-7105",level:2},{value:"TypeScript updates (#9302, #9309)",id:"typescript-updates-9302-9309",level:2},{value:"<code>babel-eslint</code> v11.0.0-beta.0: Automatic Syntax Detection by Reading Config (babel/babel-eslint#711)",id:"babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711",level:2}],c={toc:m};function h(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"After over 80 commits, the latest Babel minor release is here!"),(0,o.kt)("p",null,"This release includes support for named capturing groups in regular expressions, private instance accessors, the smart pipeline operator and a bunch of improvements to TypeScript parsing. You can read the whole changelog ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/releases/tag/v7.3.0"},"on GitHub"),"."),(0,o.kt)("p",null,"Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/jamesgeorge007"},"@jamesgeorge007")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/armano2"},"@armano2")," for their first PR!"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/bloomberg"},(0,o.kt)("strong",{parentName:"a"},"Bloomberg"))," is continuing to sponsor the implementation of new class features in Babel: after giving us ",(0,o.kt)("a",{parentName:"p",href:"https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3"},"static private fields")," and ",(0,o.kt)("a",{parentName:"p",href:"https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654"},"private instance methods"),", they've just implemented private instance getters and setters."),(0,o.kt)("p",null,"Another shout out goes to the ",(0,o.kt)("a",{parentName:"p",href:"https://www.ampproject.org"},"AMP Project"),", which increased their ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/left_pad/status/1084955653389590533"},"support of Babel")," to $24k/year becoming a Base Support Sponsor."),(0,o.kt)("p",null,"If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on ",(0,o.kt)("a",{parentName:"p",href:"https://opencollective.com/babel"},"OpenCollective")," and, better yet, work with us on the implementation of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/babel/proposals"},"new ECMAScript proposals")," directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code."),(0,o.kt)("h2",{id:"private-instance-accessors-getters-and-setters-9101"},"Private instance accessors (getters and setters) (",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel/pull/9101"},"#9101"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'class Person {\n  #firstname = "Babel";\n  #lastname = "JS";\n\n  get #name() {\n    return this.#firstname + " " + this.#lastname;\n  }\n\n  sayHi() {\n    alert(`Hi, ${this.#name}!`);\n  }\n}\n')),(0,o.kt)("p",null,"Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tim-mc"},"Tim")," (Bloomberg) for implementing this proposal!"),(0,o.kt)("p",null,"You can test this new feature by adding ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/plugin-proposal-private-methods")," to your config, if you haven't already added it from Babel 7.2.0, or by enabling the ",(0,o.kt)("inlineCode",{parentName:"p"},"stage-3")," preset in the online ",(0,o.kt)("a",{parentName:"p",href:"https://babeljs.io/repl/build/main#?code_lz=MYGwhgzhAEAKCmAnCB7AdtA3gKGtAxAGYCWyALmmALbzQC80ARAEJgBG8IjA3LgeBArVaDRgCkAyjz58A5vDIFKNABQBKLHzyIFAV0QYyAC2IQAdEVKDltANRMH946YsChNXngC-MvBDAAngASxOqaeHhgIEhkKgAGIQA00AAkmM7m-DZeAIRxap7QPl5AA&presets=stage-3"},"repl"),"."),(0,o.kt)("p",null,"Class private features support is almost complete!"),(0,o.kt)("div",{style:{margin:"auto",width:"fit-content"}},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Class Private"),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Instance")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Static")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Fields")," ",(0,o.kt)("br",null)," ",(0,o.kt)("inlineCode",{parentName:"td"},"class A { #a = 1}")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://babeljs.io/blog/2018/08/27/7.0.0#tc39-proposals-https-githubcom-tc39-proposals-support"},"7.0.0")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3"},"7.1.0"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Methods")," ",(0,o.kt)("br",null)," ",(0,o.kt)("inlineCode",{parentName:"td"},"class A { #a() {} }")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654"},"7.2.0")),(0,o.kt)("td",{parentName:"tr",align:null},"\u2716")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Accessors")," ",(0,o.kt)("br",null)," ",(0,o.kt)("inlineCode",{parentName:"td"},"class A { get #a() {} }")),(0,o.kt)("td",{parentName:"tr",align:null},"7.3.0"),(0,o.kt)("td",{parentName:"tr",align:null},"\u2716"))))),(0,o.kt)("h2",{id:"smart-pipeline-operator-9179"},"Smart pipeline operator (",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel/pull/9179"},"#9179"),")"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Babel implements multiple variants of this ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-pipeline-operator/wiki#proposal-1-f-sharp-only"},"proposal")," to help TC39 test and gather feedback from the community. As with all proposals, expect changes in the future.")),(0,o.kt)("p",null,"In ",(0,o.kt)("a",{parentName:"p",href:"https://babeljs.io/blog/2018/12/03/7.2.0#smart-pipeline-operator-parsing-8289-https-githubcom-babel-babel-pull-8289"},"Babel 7.2.0")," we landed parsing support for the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/js-choi/proposal-smart-pipelines/"},"Smart Pipeline Operator")," proposal. Thanks to the work of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/thiagoarrais"},"Thiago Arrais"),", you can now transpile it down to standard ECMAScript and try it out!"),(0,o.kt)("p",null,"We currently only support the main proposal, and none of the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/js-choi/proposal-smart-pipelines#additional-features"},"additional features"),". Also, we don't support ",(0,o.kt)("inlineCode",{parentName:"p"},"yield")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"await")," in pipelines yet."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"name\n  |> # || throw new TypeError()\n  |> doubleSay(#, ', ')\n  |> capitalize\n  |> # + '!'\n  |> new User.Message(#)\n  |> stream.write(#, { sync: true })\n  |> console.log;\n")),(0,o.kt)("p",null,"You can enable it in your project using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/plugin-proposal-pipeline-operator")," plugin with the ",(0,o.kt)("inlineCode",{parentName:"p"},'proposal: "smart"')," option:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": [\n    ["@babel/plugin-proposal-pipeline-operator", { "proposal": "smart" }]\n  ]\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},'Previously, the "minimal" proposal was added in back in ',"[v7.0.0-beta.3]"," via ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/6335"},"#6335"))),(0,o.kt)("h2",{id:"named-capturing-groups-7105"},"Named capturing groups (",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel/pull/7105"},"#7105"),")"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'let stringRe = /(?<quote>"|\')(?<contents>.*?)\\k<quote>/;\n\nlet { contents } = `"foo bar"`.match(stringRe);\n')),(0,o.kt)("p",null,"Support for the biggest ECMAScript 2018 feature missing in Babel is now here! Previously, partial support for named groups was available via the awesome ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/DmitrySoshnikov/babel-plugin-transform-modern-regexp"},"babel-plugin-transform-modern-regexp")," community plugin by ",(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/DmitrySoshnikov"},"Dmitry Soshnikov"),". We also coordinated efforts with ",(0,o.kt)("inlineCode",{parentName:"p"},"core-js")," to provide full support with the new ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/plugin-transform-named-capturing-groups-regex")," package."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"@babel/preset-env")," has also been updated to include this, so many of you will be able to use it without making any changes!"),(0,o.kt)("p",null,"Note that the runtime features (i.e. the ",(0,o.kt)("inlineCode",{parentName:"p"},"groups")," property) only work in browsers with proper support for ES6 regular expressions. If you need to support older environments, you can include a polyfill for ",(0,o.kt)("inlineCode",{parentName:"p"},"RegExp"),"'s methods."),(0,o.kt)("h2",{id:"typescript-updates-9302-9309"},"TypeScript updates (",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel/pull/9302"},"#9302"),", ",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel/pull/9309"},"#9309"),")"),(0,o.kt)("p",null,"Thanks to the work by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/armano2"},"Armano")," on ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/parser")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/hzoo"},"Henry"),"/",(0,o.kt)("a",{parentName:"p",href:"https://github.com/existentialism"},"Brian")," on ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/generator")," (have you seen the ",(0,o.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=L-PxPBDUf6w&t=4s"},"live stream"),"?), we now support ",(0,o.kt)("inlineCode",{parentName:"p"},"let x: typeof import('./x');"),", added in ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html"},"TypeScript 2.9"),". We now also support the ",(0,o.kt)("inlineCode",{parentName:"p"},"bigint")," type keyword, added in ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-2.html"},"TypeScript 3.2"),"."),(0,o.kt)("h2",{id:"babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711"},(0,o.kt)("inlineCode",{parentName:"h2"},"babel-eslint")," v11.0.0-beta.0: Automatic Syntax Detection by Reading Config (",(0,o.kt)("a",{parentName:"h2",href:"https://github.com/babel/babel-eslint/pull/711"},"babel/babel-eslint#711"),")"),(0,o.kt)("p",null,"Thanks to ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kaicataldo"},"Kai")," (also on the ESLint TSC) for finishing this work!"),(0,o.kt)("p",null,"Up until now, ",(0,o.kt)("inlineCode",{parentName:"p"},"babel-eslint")," has manually enabled all syntax plugins (with the list falling out of date frequently). It also meant that it could parse syntax that a configured instance of Babel itself didn't allow at compile time. We now require ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/core")," as a peerDependency and assume that a Babel config exists when using ",(0,o.kt)("inlineCode",{parentName:"p"},"babel-eslint")," and use that same config to modify itself (making this a breaking change). This change will hopefully make maintaining the module itself more manageable as well as re-using Babel's config which is a reasonable assumption for a user making use of ",(0,o.kt)("inlineCode",{parentName:"p"},"babel-eslint"),"."),(0,o.kt)("p",null,"You can help us by checking if this beta release works for your project \ud83d\ude42"),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://twitter.com/search?q=https%3A%2F%2Fbabeljs.io%2Fblog%2F2019%2F01%2F21%2F7.3.0"},"Discuss on Twitter")))}h.isMDXComponent=!0}}]);