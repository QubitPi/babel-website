"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["61085"],{57775:function(e,n,s){s.r(n),s.d(n,{assets:function(){return o},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return t},toc:function(){return c}});var t=s(34702),r=s(24246),a=s(80980);let i={layout:"post",title:"5.0.0 Released",authors:"sebastian",date:new Date("2015-03-31T10:00:00.000Z"),categories:"announcements",share_text:"5.0.0 Released"},l=void 0,o={authorsImageUrls:[void 0]},c=[{value:"TC39 Process",id:"tc39-process",level:3},{value:"New Proposals",id:"new-proposals",level:2},{value:"Stage 0: Class Properties",id:"stage-0-class-properties",level:3},{value:"Stage 1: Decorators",id:"stage-1-decorators",level:3},{value:"Stage 1: Export Extensions",id:"stage-1-export-extensions",level:3},{value:"React Optimisations",id:"react-optimisations",level:2},{value:"Constant Elements",id:"constant-elements",level:3},{value:"Inline Elements",id:"inline-elements",level:3},{value:".babelrc",id:"babelrc",level:2},{value:"Plugin API",id:"plugin-api",level:2},{value:"Experimental Option",id:"experimental-option",level:3},{value:"<code>returnUsedHelpers</code> option",id:"returnusedhelpers-option",level:3},{value:"Class Changes",id:"class-changes",level:3},{value:"Removed Features",id:"removed-features",level:2},{value:"Imports are now hoisted",id:"imports-are-now-hoisted",level:2}];function d(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In the past few months Babel has been welcomed into several major communities\nsuch as Node, React, Ember, Backbone, Angular, Rails, and many others. We\nlaunched the ",(0,r.jsx)(n.a,{href:"/users",children:"Users page"})," only a few weeks ago and it's really cool to\nsee everyone that is using it. Companies like CloudFlare, Netflix, Mozilla, and\nYahoo!. Projects like Ghost, Atom, Mapbox, and so many more."]}),"\n",(0,r.jsx)(n.p,{children:"We've seen tons of blog posts, talks, events, courses all about ES6+ using\nBabel, and official Babel tools have been downloaded nearly 2 million times."}),"\n",(0,r.jsx)(n.p,{children:"Today we are making by far the largest release of Babel ever."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["If you're upgrading from Babel 4.x please see the\n",(0,r.jsx)(n.a,{href:"#breaking-changes",children:"breaking changes"})]}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This release includes the new ES7 proposals:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/wycats/javascript-decorators",children:"Decorators"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://gist.github.com/jeffmo/054df782c05639da2adb",children:"Class properties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/leebyron/ecmascript-more-export-from",children:"Export extensions"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The entire internal traversal and transformation pipeline has undergone a\nrewrite that substantially increases flexibility and will allow many future\npipeline performance optimisations."}),"\n",(0,r.jsx)(n.p,{children:"This release also brings a plugin API, this allows consumers to plug in their\nown custom transformers to utilise the powerful transformation mechanisms that\nBabel has to offer."}),"\n",(0,r.jsxs)(n.p,{children:["You can view the complete CHANGELOG\n",(0,r.jsx)(n.a,{href:"https://github.com/babel/babel/blob/main/.github/CHANGELOG-v5.md#500",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["And as usual ",(0,r.jsx)(n.strong,{children:"if you run into any regressions please report them immediately"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"tc39-process",children:"TC39 Process"}),"\n",(0,r.jsxs)(n.p,{children:["In this release you'll start to see us aligned with the\n",(0,r.jsx)(n.a,{href:"https://docs.google.com/document/d/1QbEE0BsO4lvl7NFTn5WXWeiEIBfaVUF7Dk0hpPpPDzU",children:"TC39 process"}),".\nThe TC39 is the technical committee from ECMA that writes the ECMAScript\nstandard. Their process is categorised into 5 stages:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Stage 0 - Strawman"}),"\n",(0,r.jsx)(n.li,{children:"Stage 1 - Proposal"}),"\n",(0,r.jsx)(n.li,{children:"Stage 2 - Draft"}),"\n",(0,r.jsx)(n.li,{children:"Stage 3 - Candidate"}),"\n",(0,r.jsx)(n.li,{children:"Stage 4 - Finished"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Proposals that are ",(0,r.jsx)(n.strong,{children:"stage 2 or above"})," are enabled in Babel by default. Now\nthis does not mean that they're guaranteed to be included in future ECMAScript\nspecifications or even Babel itself. Stage 2 is considered a good point for\ninclusion by default in Babel due to their relative maturity and need for\ncritical proposal feedback."]}),"\n",(0,r.jsx)(n.p,{children:"Now let's dive into the changes we made to 5.0."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Contents:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#new-features",children:"New Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#new-proposals",children:"New Proposals"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#stage-0:-class-properties",children:"Stage 0: Class Properties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#stage-1:-decorators",children:"Stage 1: Decorators"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#stage-1:-export-extensions",children:"Stage 1: Export Extensions"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#react-optimisations",children:"React Optimisations"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#constant-elements",children:"Constant Elements"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#inline-elements",children:"Inline Elements"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#babelrc",children:".babelrc"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#plugin-api",children:"Plugin API"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#breaking-changes",children:"Breaking Changes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#experimental-option",children:"Experimental Option"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#class-changes",children:"Class Changes"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#removed-features",children:"Removed Features"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#imports-are-now-hoisted",children:"imports are now hoisted"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("h1",{id:"new-features",class:"babel-blog-section-title",children:"New Features"}),"\n",(0,r.jsx)(n.h2,{id:"new-proposals",children:"New Proposals"}),"\n",(0,r.jsx)(n.h3,{id:"stage-0-class-properties",children:"Stage 0: Class Properties"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jeffmo",children:"Jeff Morrison's"})," stage 0\n",(0,r.jsx)(n.a,{href:"https://gist.github.com/jeffmo/054df782c05639da2adb",children:"class property initializers proposal"}),"\nfills the void of property composition on classes. These are analogous with the\nclass properties example listed in the\n",(0,r.jsx)(n.a,{href:"https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html#es7-property-initializers",children:"React 0.13 beta announcement"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'class Person {\n  firstName = "Sebastian";\n  static lastName = "McKenzie";\n}\n\nassert(new Person().firstName, "Sebastian");\nassert(Person.lastName, "McKenzie");\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("babel").transform("code", {\n  optional: ["es7.classProperties"]\n});\n// or\nrequire("babel").transform("code", { stage: 0 });\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"$ babel --optional es7.classProperties script.js\n# or\n$ babel --stage 0 script.js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"stage-1-decorators",children:"Stage 1: Decorators"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/wycats",children:"Yehuda Katz'"})," stage 1\n",(0,r.jsx)(n.a,{href:"https://github.com/wycats/javascript-decorators",children:"decorators proposal"})," allows\nyou to elegantly compose property descriptors and metadata decoration. In the\nfuture this will allow the powerful\n",(0,r.jsx)(n.a,{href:"http://guides.emberjs.com/v1.10.0/object-model/classes-and-instances/",children:"Ember Object Model"}),"\nto easily be represented with native classes."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'function concat(...args) {\n  let sep = args.pop();\n\n  return function(target, key, descriptor) {\n    descriptor.initializer = function() {\n      return args.map(arg => this[arg]).join(sep);\n    }\n  }\n}\n\nfunction autobind(target, key, descriptor) {\n  var fn = descriptor.value;\n  delete descriptor.value;\n  delete descriptor.writable;\n  descriptor.get = function () {\n    var bound = fn.bind(this);\n    Object.defineProperty(this, key, {\n      configurable: true,\n      writable: true,\n      value: bound\n    });\n    return bound;\n  };\n}\n\nclass Person {\n  firstName = "Sebastian";\n  lastName = "McKenzie";\n\n  @concat("firstName", "lastName", " ") fullName;\n  @concat("lastName", "firstName", ", ") formalName;\n\n  @autobind\n  getFullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n}\n\nassert(new Person().fullName, "Sebastian McKenzie");\nassert(new Person().formalName, "McKenzie, Sebastian");\nassert(new Person().getFullName.call(null), "Sebastian McKenzie");\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("babel").transform("code", {\n  optional: ["es7.decorators"]\n});\n// or\nrequire("babel").transform("code", { stage: 1 });\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"$ babel --optional es7.decorators script.js\n# or\n$ babel --stage 1 script.js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"stage-1-export-extensions",children:"Stage 1: Export Extensions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/leebyron",children:"Lee Byron's"})," stage 1\n",(0,r.jsx)(n.a,{href:"https://github.com/leebyron/ecmascript-more-export-from",children:"additional export-from statements proposal"}),"\ncompletes the symmetry between import and export statement, allowing you to\neasily export namespaces and defaults from external modules without\nmodifying the local scope."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exporting a default"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'export foo from "bar";\n'})}),"\n",(0,r.jsx)(n.p,{children:"equivalent to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'import _foo from "bar";\nexport { _foo as foo };\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exporting a namespace"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'export * as ns from "mod";\n'})}),"\n",(0,r.jsx)(n.p,{children:"equivalent to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'import * as _ns from "mod";\nexport { _ns as ns };\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("babel").transform("code", {\n  optional: ["es7.exportExtensions"]\n});\n// or\nrequire("babel").transform("code", { stage: 1 });\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"$ babel --optional es7.exportExtensions script.js\n# or\n$ babel --stage 1 script.js\n"})}),"\n",(0,r.jsx)(n.h2,{id:"react-optimisations",children:"React Optimisations"}),"\n",(0,r.jsx)(n.p,{children:"In preparation for React 0.14, Babel supports some optimisation transformers for\nJSX."}),"\n",(0,r.jsx)(n.h3,{id:"constant-elements",children:(0,r.jsx)(n.a,{href:"https://github.com/facebook/react/issues/3226",children:"Constant Elements"})}),"\n",(0,r.jsx)(n.p,{children:"Starting with 0.14 ReactElements and their props objects can be treated as\nvalue types. i.e. any instance is conceptually equivalent if all their values\nare the same."}),"\n",(0,r.jsx)(n.p,{children:"Take this function for example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'import React from "react";\n\nfunction render() {\n  return <div className="foo" />;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"This can be optimized by moving the JSX out of the function body so that each\ntime it is called the same instance is returned:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'import React from "react";\n\nvar _ref = <div className="foo" />;\n\nfunction render() {\n  return _ref;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Not only does it allow us to reuse the same objects, React will automatically\nbail out any reconciliation of constant components - without a manual\n",(0,r.jsx)(n.code,{children:"shouldComponentUpdate"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("babel").transform("code", {\n  optional: ["optimisation.react.constantElements"]\n});\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"$ babel --optional optimisation.react.constantElements script.js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"inline-elements",children:(0,r.jsx)(n.a,{href:"https://github.com/facebook/react/issues/3228",children:"Inline Elements"})}),"\n",(0,r.jsx)(n.admonition,{title:"Production only",type:"caution",children:(0,r.jsxs)(n.p,{children:["Inline Elements should ",(0,r.jsx)("strong",{children:"only"})," be enabled in production as\nmultiple React warning messages are suppressed which is extremely risky\nin development."]})}),"\n",(0,r.jsx)(n.p,{children:"Starting with React 0.14 ReactElements can be inlined:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'<div className="foo">{bar}<Baz key="baz" /></div>\n'})}),"\n",(0,r.jsx)(n.p,{children:"as objects:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"{ type: 'div', props: { className: 'foo', children:\n  [ bar, { type: Baz, props: { }, key: 'baz', ref: null } ]\n}, key: null, ref: null }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This improves performance over the existing ",(0,r.jsx)(n.code,{children:"React.createElement"})," call by\ninlining the result of it."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("babel").transform("code", {\n  optional: ["optimisation.react.inlineElements"]\n});\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"$ babel --optional optimisation.react.inlineElements script.js\n"})}),"\n",(0,r.jsx)(n.h2,{id:"babelrc",children:".babelrc"}),"\n",(0,r.jsxs)(n.p,{children:["Babel 5.0.0 has support for ",(0,r.jsx)(n.code,{children:".babelrc"})," out of the box across its ",(0,r.jsx)(n.strong,{children:"entire"}),"\nrange of integrations. This means that it will work across\n",(0,r.jsx)(n.a,{href:"/docs/babel-register",children:(0,r.jsx)(n.code,{children:"babel/register"})}),",\n",(0,r.jsx)(n.a,{href:"/docs/babel-node",children:(0,r.jsx)(n.code,{children:"babel-node"})})," as well as across the entire range\nof build system plugins and module loaders such as\n",(0,r.jsx)(n.a,{href:"https://github.com/babel/babel-loader",children:(0,r.jsx)(n.code,{children:"babel-loader"})}),",\n",(0,r.jsx)(n.a,{href:"https://github.com/babel/babelify",children:(0,r.jsx)(n.code,{children:"babelify"})}),", and others."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:".babelrc"})," is equivalent to JSHint's ",(0,r.jsx)(n.a,{href:"http://jshint.com/docs/",children:(0,r.jsx)(n.code,{children:".jshintrc"})})," and\nJSCS' ",(0,r.jsx)(n.a,{href:"http://jscs.info/overview.html",children:(0,r.jsx)(n.code,{children:".jscsrc"})}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="JSON"',children:'{\n  "stage": 1,\n  "ignore": [\n    "foo.js",\n    "bar/**/*.js"\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"/docs/options",children:"docs"})," for more info."]}),"\n",(0,r.jsx)(n.h2,{id:"plugin-api",children:"Plugin API"}),"\n",(0,r.jsxs)(n.p,{children:["5.0.0 also introduces the long anticipated plugin API. This allows you to hook\ninto the powerful traversal and transformation internals of Babel. See the\n",(0,r.jsx)(n.a,{href:"/docs/plugins",children:"docs"})," for more info."]}),"\n",(0,r.jsx)("h1",{id:"breaking-changes",class:"babel-blog-section-title",children:"Breaking Changes"}),"\n",(0,r.jsx)(n.h3,{id:"experimental-option",children:"Experimental Option"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"experimental"})," option has been ",(0,r.jsx)(n.strong,{children:"removed"}),". Fear not though, there is a\nreplacement. Babel now categories the ES7 transformers by\n",(0,r.jsx)(n.a,{href:"#tc39-changes",children:"TC39 stages"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["tl;dr If you're using the ",(0,r.jsx)(n.code,{children:"experimental"})," option, simply change it to\n",(0,r.jsx)(n.code,{children:"$ babel --stage 0"})," or ",(0,r.jsx)(n.code,{children:"{ stage: 0 }"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Reminder:"})," Proposals that are ",(0,r.jsx)(n.strong,{children:"stage 2 or above"})," are enabled by default."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Stage 0"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.classProperties"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.comprehensions"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Stage 1"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.asyncFunctions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.decorators"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.exportExtensions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.objectRestSpread"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Stage 2"})," (Stage 2 and above are enabled by default)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"es7.exponentiationOperator"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For a list of all current ES7 proposals please see the\n",(0,r.jsx)(n.a,{href:"https://github.com/tc39/ecma262",children:"tc39/ecma262 repo"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"returnusedhelpers-option",children:[(0,r.jsx)(n.code,{children:"returnUsedHelpers"})," option"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"returnUsedHelpers"})," option has been renamed to ",(0,r.jsx)(n.code,{children:"metadataUsedHelpers"})," and the returning result\nobject has been changed from ",(0,r.jsx)(n.code,{children:"usedHelpers"})," to ",(0,r.jsx)(n.code,{children:"metadata.usedHelpers"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"class-changes",children:"Class Changes"}),"\n",(0,r.jsx)(n.p,{children:"5.0.0 introduces some updated derived class semantics that are long overdue."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"super()"})," ",(0,r.jsx)(n.strong,{children:"must"})," be called in a derived class constructor."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"class Foo extends Bar {\n  constructor() {\n    // no `super();`\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Access to ",(0,r.jsx)(n.code,{children:"this"})," before ",(0,r.jsx)(n.code,{children:"super()"})," in a derived class constructor is ",(0,r.jsx)(n.strong,{children:"not"}),"\nallowed."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"class Foo extends Bar {\n  constructor() {\n    this.foo; // `this` access before `super();`\n    super();\n  }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"super()"})," is ",(0,r.jsx)(n.strong,{children:"only"})," allowed in derived class constructors."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"class Foo {\n  constructor() {\n    super(); // not in a derived constructor\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"removed-features",children:"Removed Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The playground has been removed so development can be focussed on mainstream\nES features and proposals. This also reduces the risk of syntactic conflicts\npreventing certain official features from being implemented."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/zenparsing/es-abstract-refs",children:"Abstract references"})," have\nbeen removed as the proposal has been superseded. Support for one or more of the\nsuperseding proposals may be implemented in the future."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"In closing, we hope that you are now as excited about this release as we are.\nThere's a lot that went into it, and we believe this will set us up for a long\ntime into the future."}),"\n",(0,r.jsx)("p",{class:"text-right",children:"\u2014 The Babel team"}),"\n",(0,r.jsx)(n.h2,{id:"imports-are-now-hoisted",children:"Imports are now hoisted"}),"\n",(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.code,{children:"4.x"}),", imports were inlined as where they appeared in the code. Which means that this code:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"global.test = 'test'\nimport './test'\n"})}),"\n",(0,r.jsx)(n.p,{children:"would compile to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"'use strict';\n\nglobal.test = 'test';\nrequire('./test');\n"})}),"\n",(0,r.jsxs)(n.p,{children:["However, from ",(0,r.jsx)(n.code,{children:"5.x"})," on, this behaviour has been changed in order to comply with the ES6 spec and ",(0,r.jsxs)(n.em,{children:[(0,r.jsx)(n.a,{href:"https://gitter.im/babel/babel?at=5525474d80f7bb0315a369ce",children:"imports will"})," ",(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/29329662/are-es6-module-imports-hoisted",children:"now be hoisted"})]}),". What this means in practical code is that the snippet above will get converted to something like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"'use strict';\n\nrequire('./test');\nglobal.test = 'test';\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If your code required certain bits and pieces to be executed in between a specific module being imported -which might be the case while testing code and you need to fake some ",(0,r.jsx)(n.code,{children:"window"})," properties :)- you may want to extract that away into its own file and import it before the code that needs it."]})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},80980:function(e,n,s){s.d(n,{Z:function(){return l},a:function(){return i}});var t=s(27378);let r={},a=t.createContext(r);function i(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},34702:function(e){e.exports=JSON.parse('{"permalink":"/blog/2015/03/31/5.0.0","source":"@site/blog/2015-03-31-5.0.0.md","title":"5.0.0 Released","description":"In the past few months Babel has been welcomed into several major communities","date":"2015-03-31T10:00:00.000Z","tags":[],"readingTime":7.985,"hasTruncateMarker":true,"authors":[{"name":"Sebastian McKenzie","url":"https://twitter.com/sebmck","key":"sebastian","page":null}],"frontMatter":{"layout":"post","title":"5.0.0 Released","authors":"sebastian","date":"2015-03-31T10:00:00.000Z","categories":"announcements","share_text":"5.0.0 Released"},"unlisted":false,"prevItem":{"title":"Function Bind Syntax","permalink":"/blog/2015/05/14/function-bind"},"nextItem":{"title":"Babel <3 React","permalink":"/blog/2015/02/23/babel-loves-react"}}')}}]);