"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5990],{35318:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return b}});var r=t(27378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(t),m=a,b=c["".concat(s,".").concat(m)]||c[m]||g[m]||l;return t?r.createElement(b,o(o({ref:n},u),{},{components:t})):r.createElement(b,o({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},39848:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var r=t(25773),a=t(30808),l=(t(27378),t(35318)),o=["components"],i={id:"plugins",title:"Plugins"},s=void 0,p={unversionedId:"plugins",id:"plugins",title:"Plugins",description:"Babel's code transformations are enabled by applying plugins (or presets) to your configuration file.",source:"@site/../docs/plugins.md",sourceDirName:".",slug:"/plugins",permalink:"/babel-website/docs/plugins",draft:!1,editUrl:"https://github.com/babel/website/edit/main/docs/../docs/plugins.md",tags:[],version:"current",frontMatter:{id:"plugins",title:"Plugins"},sidebar:"docs",previous:{title:"Presets",permalink:"/babel-website/docs/presets"},next:{title:"Plugins List",permalink:"/babel-website/docs/plugins-list"}},u={},c=[{value:"Using a Plugin",id:"using-a-plugin",level:2},{value:"Transform Plugins",id:"transform-plugins",level:2},{value:"Syntax Plugins",id:"syntax-plugins",level:2},{value:"Plugin Ordering",id:"plugin-ordering",level:2},{value:"Plugin Options",id:"plugin-options",level:2},{value:"Plugin Development",id:"plugin-development",level:2}],g={toc:c},m="wrapper";function b(e){var n=e.components,t=(0,a.Z)(e,o);return(0,l.kt)(m,(0,r.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Babel's code transformations are enabled by applying plugins (or ",(0,l.kt)("a",{parentName:"p",href:"/babel-website/docs/presets"},"presets"),") to your ",(0,l.kt)("a",{parentName:"p",href:"/babel-website/docs/config-files"},"configuration file"),"."),(0,l.kt)("div",{id:"pluginpreset-paths"}),(0,l.kt)("h2",{id:"using-a-plugin"},"Using a Plugin"),(0,l.kt)("p",null,"If the plugin is on ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/search?q=babel-plugin"},"npm"),", you can pass in the name of the plugin and Babel will check that it's installed in ",(0,l.kt)("inlineCode",{parentName:"p"},"node_modules"),". This is added to the ",(0,l.kt)("a",{parentName:"p",href:"/babel-website/docs/options#presets"},"plugins")," config option, which takes an array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": ["babel-plugin-myPlugin", "@babel/plugin-transform-runtime"]\n}\n')),(0,l.kt)("p",null,"You can also specify an relative/absolute path to your plugin."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": ["./node_modules/asdf/plugin"]\n}\n')),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/babel-website/docs/options#name-normalization"},"name normalization")," for more specifics on configuring the path of a plugin or preset."),(0,l.kt)("h2",{id:"transform-plugins"},"Transform Plugins"),(0,l.kt)("p",null,"These plugins apply transformations to your code."),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("p",null,"Transform plugins will enable the corresponding syntax plugin so you don't have to specify both.")),(0,l.kt)("h2",{id:"syntax-plugins"},"Syntax Plugins"),(0,l.kt)("p",null,"Most syntax is transformable by Babel. In rarer cases (if the transform isn't implemented yet, or there isn't a default way to do so), you can use plugins such as ",(0,l.kt)("inlineCode",{parentName:"p"},"@babel/plugin-syntax-bigint")," to only allow Babel to ",(0,l.kt)("strong",{parentName:"p"},"parse")," specific types of syntax. Or you want to preserve the source code because you only want Babel to do code analysis or codemods."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"NOTE: You don't need to specify the syntax plugin if the corresponding transform plugin is used already, since it enables it automatically.")),(0,l.kt)("p",null,"Alternatively, you can also provide any ",(0,l.kt)("a",{parentName:"p",href:"/babel-website/docs/babel-parser#plugins"},(0,l.kt)("inlineCode",{parentName:"a"},"plugins")," option")," from the Babel parser:"),(0,l.kt)("p",null,"Your ",(0,l.kt)("inlineCode",{parentName:"p"},".babelrc"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="JSON"',title:'"JSON"'},'{\n  "parserOpts": {\n    "plugins": ["jsx", "flow"]\n  }\n}\n')),(0,l.kt)("h2",{id:"plugin-ordering"},"Plugin Ordering"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Ordering matters for each visitor in the plugin.")),(0,l.kt)("p",null,'This means if two transforms both visit the "Program" node, the transforms will run in either plugin or preset order.'),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Plugins run before Presets."),(0,l.kt)("li",{parentName:"ul"},"Plugin ordering is first to last."),(0,l.kt)("li",{parentName:"ul"},"Preset ordering is reversed (last to first).")),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": ["transform-decorators-legacy", "transform-class-properties"]\n}\n')),(0,l.kt)("p",null,"Will run ",(0,l.kt)("inlineCode",{parentName:"p"},"transform-decorators-legacy")," then ",(0,l.kt)("inlineCode",{parentName:"p"},"transform-class-properties"),"."),(0,l.kt)("p",null,"It is important to remember that with presets, the order is ",(0,l.kt)("em",{parentName:"p"},"reversed"),". The following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "presets": ["@babel/preset-env", "@babel/preset-react"]\n}\n')),(0,l.kt)("p",null,"Will run in the following order: ",(0,l.kt)("inlineCode",{parentName:"p"},"@babel/preset-react")," then ",(0,l.kt)("inlineCode",{parentName:"p"},"@babel/preset-env"),"."),(0,l.kt)("h2",{id:"plugin-options"},"Plugin Options"),(0,l.kt)("p",null,"Both plugins and presets can have options specified by wrapping the name and an options object in an array inside your config."),(0,l.kt)("p",null,"For specifying no options, these are all equivalent:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": ["pluginA", ["pluginA"], ["pluginA", {}]]\n}\n')),(0,l.kt)("p",null,"To specify an option, pass an object with the keys as the option names."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": [\n    [\n      "transform-async-to-module-method",\n      {\n        "module": "bluebird",\n        "method": "coroutine"\n      }\n    ]\n  ]\n}\n')),(0,l.kt)("p",null,"Settings options for presets works exactly the same:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "presets": [\n    [\n      "env",\n      {\n        "loose": true,\n        "modules": false\n      }\n    ]\n  ]\n}\n')),(0,l.kt)("h2",{id:"plugin-development"},"Plugin Development"),(0,l.kt)("p",null,"Please refer to the excellent ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/thejameskyle/babel-handbook"},"babel-handbook"),"\nto learn how to create your own plugins."),(0,l.kt)("p",null,"The simple plugin that reverses names (from the homepage):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'export default function() {\n  return {\n    visitor: {\n      Identifier(path) {\n        const name = path.node.name;\n        // reverse the name: JavaScript -> tpircSavaJ\n        path.node.name = name\n          .split("")\n          .reverse()\n          .join("");\n      },\n    },\n  };\n}\n')))}b.isMDXComponent=!0}}]);