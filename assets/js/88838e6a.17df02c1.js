"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["2962"],{1874:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>t,default:()=>h,assets:()=>c,toc:()=>a,frontMatter:()=>o});var i=JSON.parse('{"id":"v8-migration","title":"Upgrade to Babel 8","description":"Refer users to this document when upgrading to Babel 8 from Babel 7. If you are a plugin developer or integration developer, please also check migration guide for integration.","source":"@site/../docs/v8-migration.md","sourceDirName":".","slug":"/v8-migration","permalink":"/docs/v8-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/v8-migration.md","tags":[],"version":"current","frontMatter":{"title":"Upgrade to Babel 8","id":"v8-migration"}}'),l=s("24246"),r=s("80980");let o={title:"Upgrade to Babel 8",id:"v8-migration"},t=void 0,c={},a=[{value:"All of Babel",id:"all-of-babel",level:2},{value:"Node.js support",id:"nodejs-support",level:3},{value:"ESM only",id:"esm-only",level:3},{value:"<code>@babel/core</code> requirements",id:"babelcore-requirements",level:3},{value:"<code>@babel/eslint-parser</code> and <code>@babel/eslint-plugin</code>",id:"babeleslint-parser-and-babeleslint-plugin",level:3},{value:"Package Renames",id:"package-renames",level:2},{value:"Package Discontinued",id:"package-discontinued",level:2},{value:"<code>@babel/runtime-corejs2</code>",id:"babelruntime-corejs2",level:3},{value:"<code>@babel/plugin-syntax-import-assertions</code>",id:"babelplugin-syntax-import-assertions",level:3},{value:"Syntax plugins",id:"syntax-plugins",level:3},{value:"Configuration Changes",id:"configuration-changes",level:2},{value:"<code>@babel/core</code>",id:"configuration-change-preset-core",level:3},{value:"<code>@babel/preset-env</code>",id:"configuration-change-preset-env",level:3},{value:"<code>@babel/preset-react</code>",id:"configuration-change-preset-react",level:3},{value:"<code>@babel/preset-typescript</code>",id:"configuration-change-preset-ts",level:3},{value:"<code>@babel/plugin-transform-typescript</code>",id:"configuration-change-transform-ts",level:3},{value:"<code>@babel/plugin-syntax-typescript</code>",id:"configuration-change-syntax-ts",level:3},{value:"<code>@babel/preset-flow</code>",id:"configuration-change-preset-flow",level:3},{value:"<code>@babel/plugin-transform-flow-strip-types</code>",id:"configuration-change-transform-flow",level:3},{value:"<code>@babel/parser</code>",id:"configuration-change-parser",level:3},{value:"<code>@babel/generator</code>",id:"configuration-change-generator",level:3},{value:"<code>@babel/eslint-parser</code>",id:"configuration-change-eslint-parser",level:3},{value:"<code>@babel/plugin-transform-modules-systemjs</code>",id:"configuration-change-transform-systemjs",level:3},{value:"<code>@babel/plugin-proposal-decorators</code>",id:"configuration-change-transform-decorators",level:3},{value:"<code>@babel/plugin-transform-runtime</code>",id:"babelplugin-transform-runtime",level:3},{value:"<code>@babel/node</code>",id:"babelnode",level:3},{value:"Compilation Changes",id:"compilation-changes",level:2},{value:"Default target",id:"default-target",level:3},{value:"<code>@babel/preset-env</code>",id:"babelpreset-env",level:3},{value:"JSX",id:"compilation-change-jsx",level:3},{value:"TypeScript",id:"compilation-change-ts",level:3},{value:"Flow",id:"compilation-change-flow",level:3},{value:"Misc",id:"misc",level:3}];function d(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Refer users to this document when upgrading to Babel 8 from Babel 7. If you are a plugin developer or integration developer, please also check ",(0,l.jsx)(n.a,{href:"/docs/v8-migration-api",children:"migration guide for integration"}),"."]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["If you are upgrading from Babel 6, please check ",(0,l.jsx)(n.a,{href:"/docs/v7-migration",children:"here"})," for Babel 7 migration guide."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"all-of-babel",children:"All of Babel"}),"\n",(0,l.jsx)(n.h3,{id:"nodejs-support",children:"Node.js support"}),"\n",(0,l.jsxs)(n.p,{children:["All Babel 8 packages require Node.js ",(0,l.jsx)(n.code,{children:"^18.20.0 || ^20.17.0 || >=22.8.0"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["We highly encourage you to use a newer version of Node.js (LTS v20) since the previous versions are not maintained.\nSee ",(0,l.jsx)(n.a,{href:"https://github.com/nodejs/Release",children:"nodejs/Release"})," for more information."]}),"\n",(0,l.jsxs)(n.p,{children:["This just means Babel ",(0,l.jsx)(n.em,{children:"itself"})," won't run on older versions of Node. It can still ",(0,l.jsx)(n.em,{children:"output"})," code that runs on old Node versions."]}),"\n",(0,l.jsx)(n.h3,{id:"esm-only",children:"ESM only"}),"\n",(0,l.jsxs)(n.p,{children:["Babel is now shipped in native ECMAScript modules. (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/11701",children:"#11701"}),")"]}),"\n",(0,l.jsxs)(n.h3,{id:"babelcore-requirements",children:[(0,l.jsx)(n.code,{children:"@babel/core"})," requirements"]}),"\n",(0,l.jsxs)(n.p,{children:["All presets and plugins require ",(0,l.jsx)(n.code,{children:"@babel/core@^8.0.0"})," as peer dependency."]}),"\n",(0,l.jsxs)(n.h3,{id:"babeleslint-parser-and-babeleslint-plugin",children:[(0,l.jsx)(n.code,{children:"@babel/eslint-parser"})," and ",(0,l.jsx)(n.code,{children:"@babel/eslint-plugin"})]}),"\n",(0,l.jsxs)(n.p,{children:["The parser and plugin require ",(0,l.jsx)(n.code,{children:"eslint@^8.9.0"})," as peer dependency. (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/15563",children:"#15563"}),")"]}),"\n",(0,l.jsx)(n.h2,{id:"package-renames",children:"Package Renames"}),"\n",(0,l.jsxs)(n.p,{children:["The following packages has been renamed to ",(0,l.jsx)(n.code,{children:"-transform"})," as they have reached Stage 4 (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15614",children:"#15614"}),"). The rename process has been landed in Babel 7.22 so you can start the migration prior to the upgrade."]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Babel 7"}),(0,l.jsx)(n.th,{children:"Babel 8"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-async-generator-functions"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-async-generator-functions"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-class-properties"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-class-properties"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-class-static-block"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-class-static-block"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-duplicate-named-capturing-groups-regex"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-duplicate-named-capturing-groups-regex"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-dynamic-import"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-dynamic-import"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-export-namespace-from"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-export-namespace-from"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-json-strings"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-json-strings"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-logical-assignment-operators"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-logical-assignment-operators"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-nullish-coalescing-operator"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-nullish-coalescing-operator"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-numeric-separator"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-numeric-separator"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-object-rest-spread"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-object-rest-spread"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-optional-catch-binding"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-optional-catch-binding"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-optional-chaining"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-optional-chaining"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-private-methods"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-private-methods"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-private-property-in-object"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-private-property-in-object"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-unicode-property-regex"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-unicode-property-regex"})})]})]})]}),"\n",(0,l.jsx)(n.h2,{id:"package-discontinued",children:"Package Discontinued"}),"\n",(0,l.jsx)(n.h3,{id:"babelruntime-corejs2",children:(0,l.jsx)(n.code,{children:"@babel/runtime-corejs2"})}),"\n",(0,l.jsxs)(n.p,{children:["Please upgrade to ",(0,l.jsx)(n.code,{children:"@babel/runtime-corejs3"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/10746#issuecomment-573402372",children:"#11751"}),"). After\nyou install the new runtime, please set the ",(0,l.jsxs)(n.a,{href:"https://babel.dev/docs/babel-plugin-transform-runtime#corejs",children:[(0,l.jsx)(n.code,{children:"corejs"})," version"]})," to 3."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.json"',children:'{\n  "plugins": ["@babel/transform-runtime", {\n-   corejs: 2\n+   corejs: 3\n  }]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-syntax-import-assertions",children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-import-assertions"})}),"\n",(0,l.jsxs)(n.p,{children:["The proposal evolved into ",(0,l.jsx)(n.a,{href:"https://github.com/tc39/proposal-import-attributes",children:"import attributes"}),", which now Babel supports parsing by default. You can remove ",(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-import-assertions"})," from your config, and  replace the following patterns in your codebase:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="input.js"',children:'- import value from "module" assert { type: "json" };\n+ import value from "module" with { type: "json" };\n'})}),"\n",(0,l.jsx)(n.h3,{id:"syntax-plugins",children:"Syntax plugins"}),"\n",(0,l.jsx)(n.p,{children:"The following syntax plugins are no longer needed, you can safely remove them from your config and node modules:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-async-functions"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-async-generators"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-bigint"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-class-properties"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-class-static-block"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-dynamic-import"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-exponentiation-operator"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-export-extensions"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-export-namespace-from"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-import-meta"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-json-strings"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-logical-assignment-operators"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-module-string-names"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-nullish-coalescing-operator"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-numeric-separator"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-object-rest-spread"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-optional-catch-binding"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-optional-chaining"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-private-property-in-object"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-top-level-await"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-trailing-function-commas"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-unicode-sets-regex"})}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"The following plugins are discontinued and their functionality is not available anymore:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-import-assertions"}),". Use ",(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-import-attributes"})," instead, and see the ",(0,l.jsx)(n.a,{href:"#configuration-change-parser",children:(0,l.jsx)(n.code,{children:"@babel/parser"})})," section for more information."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"configuration-changes",children:"Configuration Changes"}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-preset-core",children:(0,l.jsx)(n.code,{children:"@babel/core"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The root AMD/UMD/SystemJS options, namely ",(0,l.jsx)(n.a,{href:"/docs/options#moduleids",children:(0,l.jsx)(n.code,{children:"moduleIds"})}),", ",(0,l.jsx)(n.a,{href:"/docs/options#getmoduleid",children:(0,l.jsx)(n.code,{children:"getModuleId"})}),", ",(0,l.jsx)(n.a,{href:"/docs/options#moduleroot",children:(0,l.jsx)(n.code,{children:"moduleRoot"})}),", ",(0,l.jsx)(n.a,{href:"/docs/options#moduleid",children:(0,l.jsx)(n.code,{children:"moduleId"})})," and ",(0,l.jsx)(n.a,{href:"/docs/options#filenamerelative",children:(0,l.jsx)(n.code,{children:"filenameRelative"})})," are moved to plugin options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/5473",children:"#5473"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12724",children:"#12724"}),")."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Move these options to the module plugin, for example, if you are using\n",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-modules-systemjs"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="babel.config.js"',children:"module.exports = {\n  plugins: [\n    ['@babel/plugin-transform-modules-systemjs', {\n      // highlight-start\n      moduleIds: true,\n      moduleRoot: 'myApp',\n      getModuleId (name) {\n        return name + \"suffix\";\n      },\n      // highlight-end\n    }],\n  ],\n};\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Adapt the example above if you are using ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-modules-amd"})," or ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-modules-umd"}),". You can start the migration prior to Babel 8.0."]}),"\n",(0,l.jsxs)(n.p,{children:["If you are using ",(0,l.jsx)(n.code,{children:"@babel/cli"})," and passing ",(0,l.jsx)(n.code,{children:"--module-ids"}),", ",(0,l.jsx)(n.code,{children:"--module-root"})," and ",(0,l.jsx)(n.code,{children:"--module-id"})," from command line, please create a Babel config ",(0,l.jsx)(n.code,{children:"babel.config.js"})," and specify options there."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-preset-env",children:(0,l.jsx)(n.code,{children:"@babel/preset-env"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"loose"})," and ",(0,l.jsx)(n.code,{children:"spec"})," options have been removed (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16043",children:"#16043"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": You can use the ",(0,l.jsx)(n.a,{href:"https://babeljs.io/docs/assumptions",children:(0,l.jsx)(n.code,{children:"assumptions"})})," top-level option instead. See ",(0,l.jsx)(n.a,{href:"https://babeljs.io/docs/assumptions#migrating-from-babelpreset-envs-loose-and-spec-modes",children:'"Migrating from @babel/preset-env\'s "loose" and "spec" modes"'})," for the ready-to-copy equivalent configuration."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"includes"})," and ",(0,l.jsx)(n.code,{children:"excludes"})," respect renamed package names (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15576",children:"#15576"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If ",(0,l.jsx)(n.code,{children:"includes"})," or ",(0,l.jsx)(n.code,{children:"excludes"})," contain any plugins mentioned in the ",(0,l.jsx)(n.a,{href:"/docs/v8-migration#package-renames",children:"Packages Renames section"}),", change it to the new name. For example,"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.json"',children:'{\n  "presets": [[\n    "@babel/preset-env",\n    {\n-     "includes": ["proposal-optional-chaining"]\n+     "includes": ["transform-optional-chaining"]\n    }\n  ]]\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"uglify"})," target (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12594",children:"#12594"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": The ",(0,l.jsx)(n.code,{children:"uglify"})," target had been deprecated since 7.0.0, if you still need this, use the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-env#forcealltransforms",children:(0,l.jsx)(n.code,{children:"forceAllTransforms"})})," option."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Removed syntax plugins can not be used in ",(0,l.jsx)(n.code,{children:"includes"})," and ",(0,l.jsx)(n.code,{children:"excludes"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15810",children:"#15810"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": You can safely remove them if you are using any of ",(0,l.jsx)(n.a,{href:"#syntax-plugins",children:"syntax plugins listed above"})," in the ",(0,l.jsx)(n.code,{children:"includes"})," and ",(0,l.jsx)(n.code,{children:"excludes"})," options."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-preset-react",children:(0,l.jsx)(n.code,{children:"@babel/preset-react"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Make the ",(0,l.jsx)(n.code,{children:"development"})," option default to the configured env (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16927",children:"#16927"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["Note that Babel's env, set through ",(0,l.jsxs)(n.a,{href:"/docs/options#envname",children:[(0,l.jsx)(n.code,{children:"envName"})," option"]}),", defaults to\n",(0,l.jsx)(n.code,{children:'process.env.BABEL_ENV || process.env.NODE_ENV || "development"'}),": if you don't specify neither the ",(0,l.jsx)(n.code,{children:"envName"})," option\nnor the ",(0,l.jsx)(n.code,{children:"BABEL_ENV"})," or ",(0,l.jsx)(n.code,{children:"NODE_ENV"})," environment variables, it will default to ",(0,l.jsx)(n.code,{children:"development"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": In production builds, set the ",(0,l.jsx)(n.code,{children:"BABEL_ENV"})," or ",(0,l.jsx)(n.code,{children:"NODE_ENV"})," environment variables, or the ",(0,l.jsx)(n.code,{children:"envName"})," Babel\noption, to ",(0,l.jsx)(n.code,{children:'"production"'}),". If you want to run ",(0,l.jsx)(n.em,{children:"only this preset"})," in production mode, then you can explicitly set the\n",(0,l.jsx)(n.code,{children:"development"})," option to ",(0,l.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"useSpread"})," and ",(0,l.jsx)(n.code,{children:"useBuiltIns"})," options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12593",children:"#12593"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Babel 8 always compiles JSX spread elements to object spread:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:'title="input.jsx"',children:'<div {...props}></div>\n// transforms to\njsx("div", { ...props })\n'})}),"\n",(0,l.jsx)(n.p,{children:"If your app targets to modern browsers released after 2019, you can safely remove these options as object spread has less code footprint."}),"\n",(0,l.jsxs)(n.p,{children:["If your code needs to run in an environment which doesn't support object spread, you can either use ",(0,l.jsx)(n.code,{children:"@babel/preset-env"})," (recommended) or ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-object-rest-spread"}),". If you want to transpile ",(0,l.jsx)(n.code,{children:"Object.assign"})," down, you also need to enable ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-object-assign"}),".\nIn Babel 7.7.0, you can opt-in this behavior by using the ",(0,l.jsx)(n.code,{children:"useSpread"})," option."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Type check input options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12460",children:"#12460"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": The preset will also report invalid option names. Refer to the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-react#options",children:"docs"})," and ensure valid usage."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Disallow ",(0,l.jsx)(n.code,{children:"filter"})," option in automatic runtime (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15068/commits/e2dd3be6e38b0254bc69a8e52c265214235829c6",children:"#15068"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": The ",(0,l.jsx)(n.code,{children:"filter"})," option can only be used with the ",(0,l.jsx)(n.code,{children:"classic"})," runtime. If you have switched to ",(0,l.jsx)(n.code,{children:"automatic"})," runtime, you can safely remove this option. Otherwise please specify ",(0,l.jsx)(n.code,{children:'runtime: "classic"'}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-preset-ts",children:(0,l.jsx)(n.code,{children:"@babel/preset-typescript"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"isTSX"})," and ",(0,l.jsx)(n.code,{children:"allExtensions"})," options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/14955",children:"#14955"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"isTSX: true"})," and ",(0,l.jsx)(n.code,{children:"allExtensions: true"})]}),"\n",(0,l.jsxs)(n.p,{children:["If you are already using ",(0,l.jsx)(n.code,{children:"@babel/preset-react"}),", ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-react-jsx"})," or any other third-party jsx presets such as ",(0,l.jsx)(n.code,{children:"@vue/babel-preset-jsx"}),", and you want to transpile ",(0,l.jsx)(n.code,{children:".tsx"})," files, you can safely remove these two options. Babel 8 will automatically handle ",(0,l.jsx)(n.code,{children:".tsx"})," files using this preset and the other JSX plugin."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.json"',children:'{\n  "presets": [\n    ["@babel/preset-react", { "runtime": "automatic" }],\n-   ["@babel/preset-typescript", { "allExtensions": true, "isTSX": true }]\n+   ["@babel/preset-typescript"]\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If you want to transpile files other than ",(0,l.jsx)(n.code,{children:".tsx"}),", such as ",(0,l.jsx)(n.code,{children:".vue"}),", use ",(0,l.jsx)(n.code,{children:"ignoreExtensions: true"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.js"',children:"{\n  overrides: [{\n    include: /\\.vue$/,\n    presets: [\n      ['@babel/preset-typescript', {\n-       allExtensions: true, isTSX: true\n+       ignoreExtensions: true\n      }]\n    ]\n  }]\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["If you want to preserve the JSX format but transpile the TypeScript part, use ",(0,l.jsx)(n.code,{children:"ignoreExtensions: true"})," and add ",(0,l.jsx)(n.a,{href:"/docs/babel-plugin-syntax-jsx",children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-jsx"})})," to ",(0,l.jsx)(n.code,{children:"plugins"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"isTSX: false"})," and ",(0,l.jsx)(n.code,{children:"allExtensions: true"})]}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"ignoreExtensions: true"}),", see the example above."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"isTSX: false"})," and ",(0,l.jsx)(n.code,{children:"allExtensions: false"})]}),"\n",(0,l.jsx)(n.p,{children:"You can safely remove them."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12461",children:"#12461"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config, since it's now enabled by default.  Previously ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," enables transforming the ",(0,l.jsx)(n.code,{children:"declare"})," syntax introduced in TypeScript 3.7, in Babel 8 we support the syntax without such a flag. See also the ",(0,l.jsx)(n.a,{href:"#compilation-change-jsx",children:"compilation changes"})," section."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Type check input options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12460",children:"#12460"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": The preset will also report invalid option names. Refer to the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-typescript#options",children:"docs"})," and ensure valid usage. For example, ",(0,l.jsx)(n.code,{children:"runtime"})," is not a valid ",(0,l.jsx)(n.code,{children:"preset-typescript"})," option and thus should be removed."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-transform-ts",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-typescript"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12461",children:"#12461"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-syntax-ts",children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-typescript"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"isTSX"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/14955",children:"#14955"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If you are using ",(0,l.jsx)(n.code,{children:"isTSX: true"}),", remove this option and add ",(0,l.jsx)(n.a,{href:"/docs/babel-plugin-syntax-jsx",children:(0,l.jsx)(n.code,{children:"@babel/plugin-syntax-jsx"})})," to ",(0,l.jsx)(n.code,{children:"plugins"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.json',children:'{\n  "plugins": [\n-   ["@babel/plugin-syntax-typescript", { "isTSX": true }]\n+   ["@babel/plugin-syntax-typescript"]\n+   ["@babel/plugin-syntax-jsx"]\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If you are using ",(0,l.jsx)(n.code,{children:"isTSX: false"}),", you can safely remove them."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-preset-flow",children:(0,l.jsx)(n.code,{children:"@babel/preset-flow"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12457",children:"#12457"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config, since it's now enabled by default. Previously ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," enables transforming the ",(0,l.jsx)(n.code,{children:"declare"})," syntax introduced in Flow 0.120.0, in Babel 8 we support the syntax without such a flag. See also the ",(0,l.jsx)(n.a,{href:"#compilation-change-flow",children:"compilation changes"})," section."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"enums"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16792",children:"#16792"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config. The ",(0,l.jsx)(n.code,{children:"enums"})," option was used to enable Flow enums, which are now supported by default."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Type check input options (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12460",children:"#12460"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": The preset will also report invalid option names. Refer to the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-flow#options",children:"docs"})," and ensure valid usage."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-transform-flow",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-flow-strip-types"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"allowDeclareFields"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12457",children:"#12457"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config. You will probably be fine with the new behaviour."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"enums"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16792",children:"#16792"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config. The ",(0,l.jsx)(n.code,{children:"enums"})," option was used to enable Flow enums, which are now supported by default."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-parser",children:(0,l.jsx)(n.code,{children:"@babel/parser"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"estree"})," plugin option ",(0,l.jsx)(n.code,{children:"classFeatures"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/13752",children:"#13752"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Remove the option from your config, since it's now enabled by default. Previously the ",(0,l.jsx)(n.code,{children:"classFeatures"})," plugin enables ",(0,l.jsx)(n.code,{children:"@babel/parser"})," to produce class properties AST compatible with ESLint 8, following the ESTree specification. In Babel 8 the ",(0,l.jsx)(n.code,{children:"eslint-parser"})," only works with ESLint 8 and above."]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Remove ",(0,l.jsx)(n.code,{children:"decimal"})," plugin option ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16741",children:"#16741"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Migrate your project to the latest proposal and remove the plugin from your config since the latest proposal doesn't have syntax anymore."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="example.js"',children:'- 1.03m\n+ new Decimal("1.03")\n- decimal1 + decimal2\n+ decimal1.add(decimal2)\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"importAssertions"})," parser plugin (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16770",children:"#16770"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["This plugin was for an old version of the import attributes proposal, using the ",(0,l.jsx)(n.code,{children:"assert"})," keyword instead of ",(0,l.jsx)(n.code,{children:"with"}),". The proposal moved ahead without the ",(0,l.jsx)(n.code,{children:"assert"})," keyword."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Replace the plugin with ",(0,l.jsx)(n.code,{children:"importAttributes"}),". If you are still using the ",(0,l.jsx)(n.code,{children:"assert"})," keyword it's recommended that you migrate to ",(0,l.jsx)(n.code,{children:"with"}),": if it's not possible to do so, you can use the ",(0,l.jsx)(n.code,{children:'["importAttributes", { deprecatedAssertSyntax: true }]'})," option.`"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"importReflection"})," parser plugin (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16808",children:"#16808"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:['The "import reflection" proposal does not exist anymore, and it was superseeded by the "source phase imports" proposal, which uses the ',(0,l.jsx)(n.code,{children:"source"})," modifier for imports instead of ",(0,l.jsx)(n.code,{children:"module"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Replace the plugin with ",(0,l.jsx)(n.code,{children:"sourcePhaseImports"}),", and migrate your code to use ",(0,l.jsx)(n.code,{children:"source"})," instead of ",(0,l.jsx)(n.code,{children:"module"})," in import declarations."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-generator",children:(0,l.jsx)(n.code,{children:"@babel/generator"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"jsonCompatibleStrings"})," generator option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/9943",children:"#9943"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12477",children:"#12477"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": ",(0,l.jsx)(n.code,{children:"@babel/generator"})," allows to specify options for ",(0,l.jsx)(n.a,{href:"https://github.com/mathiasbynens/jsesc",children:"jsesc"}),", a library used to escape printed values. If you are using the ",(0,l.jsx)(n.code,{children:"jsonCompatibleStrings"})," option, you can replace it with ",(0,l.jsx)(n.code,{children:"jsescOption: { json: true }"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-eslint-parser",children:(0,l.jsx)(n.code,{children:"@babel/eslint-parser"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"allowImportExportEverywhere"})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/13921",children:"#13921"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Use ",(0,l.jsx)(n.code,{children:"babelOptions.parserOpts.allowImportExportEverywhere"})," instead."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title=".eslintrc"',children:'{\n  "parser": "@babel/eslint-parser",\n  "parserOptions": {\n-   "allowImportExportEverywhere": true,\n+   "babelOptions": {\n+     "parserOpts": {\n+       "allowImportExportEverywhere": true\n+     }\n+   }\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"parserOpts.allowSuperOutsideMethod"})," defaults to ",(0,l.jsx)(n.code,{children:"false"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/13921",children:"#13921"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If you want to restore to Babel 7 behaviour, set ",(0,l.jsx)(n.code,{children:"babelOptions.parserOpts.allowSuperOutsideMethod"})," to ",(0,l.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"allowReturnOutsideFunction"})," is inferred from ",(0,l.jsx)(n.code,{children:"ecmaFeatures.globalReturn"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/13921",children:"#13921"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If you want to enable ",(0,l.jsx)(n.code,{children:"allowReturnOutsideFunction"}),", set ",(0,l.jsx)(n.a,{href:"https://eslint.org/docs/latest/use/configure/language-options#specifying-parser-options",children:(0,l.jsx)(n.code,{children:"ecmaFeatures.globalReturn"})})," to ",(0,l.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",metastring:'title=".eslintrc"',children:'{\n  "parser": "@babel/eslint-parser",\n  "parserOptions": {\n    "ecmaFeatures": {\n      "globalReturn": true\n    }\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-transform-systemjs",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-modules-systemjs"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.a,{href:"https://github.com/babel/babel/blob/78cd63d9cfcd96e6a151c58fed392c3ee757d861/packages/babel-plugin-transform-modules-systemjs/src/index.js#L183-L185",children:["Require ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-dynamic-import"})," when transforming ",(0,l.jsx)(n.code,{children:"import()"})," to SystemJS"]})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12700",children:"#12700"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Add ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-dynamic-import"})," to your config: you can already do it in Babel 7. If you are using ",(0,l.jsx)(n.code,{children:"@babel/preset-env"}),", you don't need to do anything."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.js.diff"',children:'{\n  "plugins": [\n+   "@babel/plugin-transform-dynamic-import",\n    "@babel/plugin-transform-modules-systemjs",\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Notes"}),": All the other plugins which support dynamic import (",(0,l.jsx)(n.code,{children:"transform-modules-commonjs"})," and ",(0,l.jsx)(n.code,{children:"transform-modules-amd"}),") require the separate plugin since it was introduced. We couldn't change it for ",(0,l.jsx)(n.code,{children:"transform-modules-systemjs"})," because that package did already support dynamic import."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"configuration-change-transform-decorators",children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-decorators"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Only support ",(0,l.jsx)(n.code,{children:"legacy"})," and ",(0,l.jsx)(n.code,{children:"2023-11"}),". The plugin now requires a ",(0,l.jsx)(n.a,{href:"/docs/babel-plugin-proposal-decorators#version",children:(0,l.jsx)(n.code,{children:"version"})})," option (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12712",children:"#12712"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15676",children:"#15676"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": You should migrate to the ",(0,l.jsx)(n.a,{href:"https://github.com/tc39/proposal-decorators/",children:"latest version of the proposal"})," ",(0,l.jsx)(n.code,{children:'"2023-11"'}),", if you are using the ",(0,l.jsx)(n.code,{children:'"2018-09"'})," or you have not specified a ",(0,l.jsx)(n.code,{children:"version"})," option."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="babel.config.json"',children:'{\n  "plugins": [\n    ["@babel/plugin-proposal-decorators", {\n-     "decoratorsBeforeExport": true,\n-     "version": "2018-09",\n+     "version": "2023-11"\n    }]\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.p,{children:["The syntax is the same, but you will need to rewrite your decorator functions. The spec repo provides ",(0,l.jsxs)(n.a,{href:"https://github.com/tc39/proposal-decorators#comparison-with-the-previous-stage-2-decorators-proposal",children:["comparison between the latest version and the ",(0,l.jsx)(n.code,{children:"2018-09"})," version"]}),". You can already migrate since Babel 7.22.0, using the ",(0,l.jsx)(n.code,{children:'"version": "2023-05"'})," option of ",(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-decorators"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Although Babel 8 still supports the ",(0,l.jsx)(n.code,{children:"legacy"})," version, it is advisable to migrate to the ",(0,l.jsx)(n.code,{children:"2023-05"})," version regardless: both Babel 8 and TypeScript 5.0 support the ",(0,l.jsx)(n.code,{children:"2023-05"})," version, while there are ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/8864#issuecomment-688535867",children:"a few behaviour differences"})," in the ",(0,l.jsx)(n.code,{children:"legacy"})," version between Babel and ",(0,l.jsx)(n.code,{children:"tsc"}),"'s implementation."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-transform-runtime",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-runtime"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"corejs"})," option has been removed (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16311",children:"#16311"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": To inject polyfills, you can use ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-corejs3/README.md",children:(0,l.jsx)(n.code,{children:"babel-plugin-polyfill-corejs3"})})," or ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-corejs2/README.md",children:"babel-plugin-polyfill-corejs2"})," directly."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"useESModules"})," option has been removed (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16141",children:"#16141"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Delete it from your configuration. ",(0,l.jsx)(n.code,{children:"@babel/runtime"})," will now automatically expose ES modules when needed, using ",(0,l.jsx)(n.code,{children:"package.json#exports"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"runtime"})," and ",(0,l.jsx)(n.code,{children:"helpers"})," options have been removed (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16311",children:"#16311"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Delete them from your configuration: ",(0,l.jsx)(n.code,{children:"@babel/runtime"})," will now always import helpers. If you don't want to inject imports to helpers, remove ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-runtime"})," from your config."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"babelnode",children:(0,l.jsx)(n.code,{children:"@babel/node"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"-gc"})," and ",(0,l.jsx)(n.code,{children:"-d"})," command-line flags have been removed (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15956",children:"#15956"}),")\n",(0,l.jsx)(n.strong,{children:"Migration"}),": Use the ",(0,l.jsx)(n.code,{children:"--expose-gc"})," and ",(0,l.jsx)(n.code,{children:"--inspect"})," Node.js flags respectively. Note that although ",(0,l.jsx)(n.code,{children:"-d"})," was short for ",(0,l.jsx)(n.code,{children:"--debug"}),", the latter has been ",(0,l.jsx)(n.a,{href:"https://nodejs.org/en/docs/guides/debugging-getting-started#legacy-debugger",children:"deprecated since Node.js 7.7.0"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Command-line flags for Node.js and Babel must now be passed ",(0,l.jsx)(n.em,{children:"before"})," the filename, while flags for the script itself must be passed after. (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16706",children:"#16706"}),")"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"compilation-changes",children:"Compilation Changes"}),"\n",(0,l.jsx)(n.h3,{id:"default-target",children:"Default target"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Use browserslist's ",(0,l.jsx)(n.code,{children:"defaults"})," as default compilation target (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12989",children:"#12989"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/15551",children:"#15551"}),")."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If you are already using ",(0,l.jsx)(n.code,{children:"targets"})," or have a ",(0,l.jsx)(n.code,{children:".browserslist"})," config file, this change won't affect you. Otherwise, you'll probably be fine with the new behavior since the ",(0,l.jsxs)(n.a,{href:"https://browsersl.ist/#q=defaults",children:["browserslist's ",(0,l.jsx)(n.code,{children:"defautls"})," covers most modern browsers"]}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["If you need to support legacy browsers, create a ",(0,l.jsxs)(n.a,{href:"https://github.com/browserslist/browserslist#queries",children:[(0,l.jsx)(n.code,{children:".browserlist"})," config"]}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"babelpreset-env",children:(0,l.jsx)(n.code,{children:"@babel/preset-env"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Enable the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-env#bugfixes",children:(0,l.jsx)(n.code,{children:"bugfixes"})})," option by default (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/13866",children:"#13866"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": You will probably be fine with the new behaviour as Babel now tries to compile the broken syntax to the closest ",(0,l.jsx)(n.em,{children:"non-broken modern syntax"})," supported by your target browsers. If anyhow you want to restore the Babel 7 behaviour, you can specify ",(0,l.jsx)(n.code,{children:"bugfixes: false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"compilation-change-jsx",children:"JSX"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/11154#issuecomment-591188203",children:"Use the new JSX implementation by default"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12630",children:"#12630"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": If you are using a modern version of React or Preact, it should work without any configuration changes. Otherwise, you can pass the ",(0,l.jsx)(n.a,{href:"/docs/babel-preset-react#runtime",children:(0,l.jsx)(n.code,{children:'runtime: "classic"'})})," option to ",(0,l.jsx)(n.code,{children:"@babel/preset-react"})," or ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-react-jsx"})," to be explicit about your usage of ",(0,l.jsx)(n.code,{children:"createElement"})," (or the equivalent function in other libraries)."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/9652",children:"Transforms JSX spread properties using object spread"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12593",children:"#12593"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": See the ",(0,l.jsx)(n.a,{href:"#configuration-change-preset-react",children:"Configuration changes / preset-react"})," section."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/8604",children:"Disallow sequence expressions inside JSX attributes"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12447",children:"#12447"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Find and replace the following code patterns. You can start the migration prior to Babel 8:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="input.jsx"',children:"- <p key={foo, bar}></p> // Invalid\n+ <p key={(foo, bar)}></p> // Valid\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsxs)(n.a,{href:"https://github.com/babel/babel/issues/11042",children:["Disallow ",(0,l.jsx)(n.code,{children:"{"}),", ",(0,l.jsx)(n.code,{children:"}"}),", ",(0,l.jsx)(n.code,{children:"<"})," and ",(0,l.jsx)(n.code,{children:">"})," in JSX text"]})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12451",children:"#12451"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Use ",(0,l.jsx)(n.code,{children:"{'{'}"}),", ",(0,l.jsx)(n.code,{children:"{'}'}"}),", ",(0,l.jsx)(n.code,{children:"{'<'}"})," and ",(0,l.jsx)(n.code,{children:"{'>'}"})," instead. Find and replace the following code patterns. You can start the migration prior to Babel 8:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",metastring:'title="input.jsx"',children:'- <p>">" is greater than.</p>\n+ <p>"{\'>\'}" is greater than.</p>\n'})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Notes"}),": This is technically a spec compliance fix becase the ",(0,l.jsx)(n.a,{href:"https://facebook.github.io/jsx/#prod-JSXTextCharacter",children:"JSX specification"})," already forbids them. However, we have chosen to postpone it until Babel 8 because it could break someone's code."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"compilation-change-ts",children:"TypeScript"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/10039",children:"Preserve uninitialized class fields"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12461",children:"#12461"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),":\nUse the new ",(0,l.jsx)(n.code,{children:"declare"})," syntax, introduced in TypeScript 3.7, if you don't want fields to be initialized to ",(0,l.jsx)(n.code,{children:"undefined"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",metastring:'title="input.ts"',children:"class A {\n  foo: string | void; // initialized to undefined\n  declare bar: number; // type-only, will be removed\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"compilation-change-flow",children:"Flow"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-high-red.svg",alt:"high"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/10039",children:"Preserve uninitialized class fields"})," (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12457",children:"#12457"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),":\nUse the new ",(0,l.jsx)(n.code,{children:"declare"})," syntax, introduced in Flow 0.120, if you don't want fields to be initialized to ",(0,l.jsx)(n.code,{children:"undefined"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-flow",metastring:'title="input.js"',children:"class A {\n  foo: string | void; // initialized to undefined\n  declare bar: number; // type-only, will be removed\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"misc",children:"Misc"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Output non-ASCII characters as-is in string literal (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/12675",children:"#12675"}),")"]}),"\n",(0,l.jsxs)(n.p,{children:["If you are using any one of ",(0,l.jsx)(n.code,{children:"@babel/cli"}),", WebPack, Rollup, create-react-app or other Node.js powered bundlers, the transformed code is always encoded with ",(0,l.jsx)(n.code,{children:"utf-8"})," and your app will not be affected. The issue only affects if you are manually calling the ",(0,l.jsx)(n.code,{children:"babel.transform"})," API and your web server is not serving js files in the ",(0,l.jsx)(n.code,{children:"utf8"})," encoding."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Migration"}),": Ensure your server is always serving js files in the ",(0,l.jsx)(n.code,{children:"utf8"})," encoding. If you can not control the server output, specify the ",(0,l.jsx)(n.code,{children:"charset"})," attribute of the ",(0,l.jsx)(n.code,{children:"script"})," tag in the html files."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:'<script charset="utf-8" src="your-app.js"><\/script>\n'})}),"\n",(0,l.jsx)(n.p,{children:"You can also restore to the Babel 7 behaviour by"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="babel.config.js"',children:"{\n  generatorOpts: {\n    jsescOption: {\n      minimal: false\n    }\n  }\n}\n"})}),"\n"]}),"\n"]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},80980:function(e,n,s){s.d(n,{Z:function(){return t},a:function(){return o}});var i=s(27378);let l={},r=i.createContext(l);function o(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);