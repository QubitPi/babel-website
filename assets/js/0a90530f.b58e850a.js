"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4661"],{73516:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return h},frontMatter:function(){return o},metadata:function(){return r},toc:function(){return c}});var r=n(57063),i=n(85893),s=n(50065);let o={layout:"post",title:"7.27.0 Released: better ecosystem alignment",authors:"team",date:new Date("2025-03-24T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.27.0 Released"},a=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Highlights",id:"highlights",level:2},{value:"<code>rewriteImportExtensions</code> tweaks (#17118)",id:"rewriteimportextensions-tweaks-17118",level:3},{value:"Print import attributes by default (#16977)",id:"print-import-attributes-by-default-16977",level:3}];function d(e){let t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Babel 7.27.0 is out!"}),"\n",(0,i.jsx)(t.p,{children:"This release doesn't include any significant new feature, but it better aligns Babel's behavior with standard JavaScript and other tools."}),"\n",(0,i.jsxs)(t.p,{children:["The code printer will now also print the correct ",(0,i.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import/with",children:"import attributes"})," syntax by default, rather than expecting its users to explicitly enable an option for it."]}),"\n",(0,i.jsxs)(t.p,{children:["We also tweaked the behavior of ",(0,i.jsx)(t.code,{children:"@babel/preset-typescript"}),"'s ",(0,i.jsx)(t.code,{children:"rewriteImportExtensions"})," option, to fix some differences when compared to TypeScript's ",(0,i.jsx)(t.code,{children:"--rewriteRelativeImportExtensions"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Lastly, we updated our ",(0,i.jsx)(t.code,{children:"estree"})," compatibility plugin in ",(0,i.jsx)(t.code,{children:"@babel/parser"})," to generate ",(0,i.jsx)(t.code,{children:"AccessorProperty"})," nodes for ",(0,i.jsx)(t.code,{children:'accessor foo = "val"'})," class properties, introduced by the ",(0,i.jsx)(t.a,{href:"https://github.com/tc39/proposal-decorators",children:"decorators"})," stage 3 proposal. Note that, for legacy compatibility reasons, ",(0,i.jsx)(t.code,{children:"@babel/parser"})," only generates an ESTree-compatible AST for class features when the ",(0,i.jsx)(t.code,{children:"classFeatures"})," option of the ",(0,i.jsx)(t.code,{children:"estree"})," plugin is enabled."]}),"\n",(0,i.jsxs)(t.p,{children:["There are multiple changes that may benefit plugin authors: you can read the whole changelog ",(0,i.jsx)(t.a,{href:"https://github.com/babel/babel/releases/tag/v7.26.0",children:"on GitHub"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our ",(0,i.jsx)(t.a,{href:"https://github.com/babel/babel?sponsor=1",children:"Open Collective"})," and, better yet, work with us on the implementation of ",(0,i.jsx)(t.a,{href:"https://github.com/babel/proposals",children:"new ECMAScript proposals"})," directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at ",(0,i.jsx)(t.a,{href:"mailto:team@babeljs.io",children:"team@babeljs.io"})," if you'd like to discuss more!"]}),"\n",(0,i.jsx)(t.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsxs)(t.h3,{id:"rewriteimportextensions-tweaks-17118",children:[(0,i.jsx)(t.code,{children:"rewriteImportExtensions"})," tweaks (",(0,i.jsx)(t.a,{href:"https://github.com/babel/babel/pull/17118",children:"#17118"}),")"]}),"\n",(0,i.jsxs)(t.p,{children:["Babel 7.26.0 ",(0,i.jsxs)(t.a,{href:"https://babeljs.io/blog/2024/10/25/7.26.0",children:["added support for dynamic ",(0,i.jsx)(t.code,{children:"import()"})]})," when using the ",(0,i.jsx)(t.a,{href:"https://babeljs.io/docs/babel-preset-typescript#rewriteimportextensions",children:(0,i.jsx)(t.code,{children:"rewriteImportExtensions"})})," option of ",(0,i.jsx)(t.code,{children:"@babel/preset-typescript"}),", to align with TypeScript's new ",(0,i.jsx)(t.a,{href:"https://devblogs.microsoft.com/typescript/announcing-typescript-5-7/#path-rewriting-for-relative-paths",children:(0,i.jsx)(t.code,{children:"rewriteRelativeImportExtensions"})}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["However, we then found a difference when it comes to handling non-relative paths: Babel would rewrite ",(0,i.jsx)(t.code,{children:'import("/foo/bar/baz.ts")'})," to ",(0,i.jsx)(t.code,{children:'import("/foo/bar/baz.js")'}),", while TypeScript would leave it as-is. As Babel's goal is to mirror TypeScript's option when possible, we consider this difference to be a bug and we are fixing it in Babel 7.27.0."]}),"\n",(0,i.jsxs)(t.h3,{id:"print-import-attributes-by-default-16977",children:["Print import attributes by default (",(0,i.jsx)(t.a,{href:"https://github.com/babel/babel/pull/16977",children:"#16977"}),")"]}),"\n",(0,i.jsx)(t.p,{children:'Babel first implemented import attributes years ago, when the proposal was still called "module attributes" and had a different syntax:'}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-javascript",children:'import data from "./data.json" with type: "json";\n'})}),"\n",(0,i.jsx)(t.p,{children:"When we shipped standards-compliant import attributes, we kept the existing generator behavior. This means that when printing the following AST:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'ImportDeclaration {\n  specifiers: [],\n  source: StringLiteral("./data.json"),\n  attributes: [\n    ImportAttribute { key: Identifier("type"), value: StringLiteral("json") }\n  ]\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["we would generate ",(0,i.jsx)(t.code,{children:'import "./data.json" with type: "json"'})," instead of ",(0,i.jsx)(t.code,{children:'import "./data.json" with { type: "json" }'}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"@babel/generator"})," will not generate ",(0,i.jsx)(t.code,{children:'import "./data.json" with { type: "json" }'}),", to match standard JavaScript syntax. It will keep generating the old syntax when either:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.a,{href:"https://babeljs.io/docs/babel-generator#options",children:(0,i.jsx)(t.code,{children:"importAttributesKeyword"})})," option is set to ",(0,i.jsx)(t.code,{children:'"with-legacy"'})]}),"\n",(0,i.jsxs)(t.li,{children:["The AST has been generated by ",(0,i.jsx)(t.em,{children:"parsing"})," the old syntax, which will define a ",(0,i.jsx)(t.code,{children:".extra.deprecatedWithLegacySyntax: true"})," property on the ",(0,i.jsx)(t.code,{children:"ImportDeclaration"})," node."]}),"\n"]})]})}function h(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return a},a:function(){return o}});var r=n(67294);let i={},s=r.createContext(i);function o(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},57063:function(e){e.exports=JSON.parse('{"permalink":"/blog/2025/03/24/7.27.0","source":"@site/blog/2025-03-24-7.27.0.md","title":"7.27.0 Released: better ecosystem alignment","description":"Babel 7.27.0 is out!","date":"2025-03-24T00:00:00.000Z","tags":[],"readingTime":2.185,"hasTruncateMarker":true,"authors":[{"name":"Babel Team","url":"https://twitter.com/babeljs","email":"team@babeljs.io","key":"team","page":null}],"frontMatter":{"layout":"post","title":"7.27.0 Released: better ecosystem alignment","authors":"team","date":"2025-03-24T00:00:00.000Z","categories":"announcements","share_text":"Babel 7.27.0 Released"},"unlisted":false,"prevItem":{"title":"Announcing Babel 8 Beta","permalink":"/blog/2025/05/30/babel-8-beta"},"nextItem":{"title":"7.26.0 Released: stage 4 features enabled by default, and a new experimental code printer","permalink":"/blog/2024/10/25/7.26.0"}}')}}]);