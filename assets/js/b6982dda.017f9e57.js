"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2608],{35318:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return b}});var r=n(27378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,b=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(b,o(o({ref:t},s),{},{components:n})):r.createElement(b,o({ref:t},s))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},29817:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=n(25773),a=n(30808),i=(n(27378),n(35318)),o=["components"],l={layout:"post",title:"7.18.0 Released: Destructuring private elements and TypeScript 4.7",author:"Babel Team",authorURL:"https://twitter.com/babeljs",date:new Date("2022-05-19T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.18.0 Released"},p=void 0,u={permalink:"/babel-website/blog/2022/05/19/7.18.0",source:"@site/blog/2022-05-19-7.18.0.md",title:"7.18.0 Released: Destructuring private elements and TypeScript 4.7",description:"We just published Babel 7.18.0!",date:"2022-05-19T00:00:00.000Z",formattedDate:"May 19, 2022",tags:[],readingTime:2.77,hasTruncateMarker:!0,authors:[{name:"Babel Team",url:"https://twitter.com/babeljs"}],frontMatter:{layout:"post",title:"7.18.0 Released: Destructuring private elements and TypeScript 4.7",author:"Babel Team",authorURL:"https://twitter.com/babeljs",date:"2022-05-19T00:00:00.000Z",categories:"announcements",share_text:"Babel 7.18.0 Released"},prevItem:{title:"7.19.0 Released: Stage 3 decorators and more RegExp features!",permalink:"/babel-website/blog/2022/09/05/7.19.0"},nextItem:{title:"7.17.0 Released: RegExp 'v' mode and ... \ud83e\udd41 decorators!",permalink:"/babel-website/blog/2022/02/02/7.17.0"}},s={authorsImageUrls:[void 0]},c=[{value:"Highlights",id:"highlights",level:2},{value:"Private destructuring (#14304)",id:"private-destructuring-14304",level:3},{value:"TypeScript 4.7 support (#14359, #14457, #14476)",id:"typescript-47-support-14359-14457-14476",level:3},{value:"Inline <code>regenerator-runtime</code> helper (#14538)",id:"inline-regenerator-runtime-helper-14538",level:3}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We just published Babel 7.18.0!"),(0,i.kt)("p",null,"This release includes support for the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-destructuring-private"},"private destructuring")," proposal and for TypeScript 4.7."),(0,i.kt)("p",null,"You can read the whole changelog ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/releases/tag/v7.18.0"},"on GitHub"),"."),(0,i.kt)("p",null,"If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/babel/babel?sponsor=1"},"Open Collective")," and, better yet, work with us on the implementation of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/babel/proposals"},"new ECMAScript proposals")," directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at ",(0,i.kt)("a",{parentName:"p",href:"mailto:team@babeljs.io"},"team@babeljs.io")," if you'd like to discuss more!"),(0,i.kt)("h2",{id:"highlights"},"Highlights"),(0,i.kt)("h3",{id:"private-destructuring-14304"},"Private destructuring (",(0,i.kt)("a",{parentName:"h3",href:"https://github.com/babel/babel/pull/14304"},"#14304"),")"),(0,i.kt)("p",null,"Babel supports transforming the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-destructuring-private"},"private destructuring")," proposal. Now you can use private fields or methods in destructuring patterns:"),(0,i.kt)("table",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Input"),(0,i.kt)("th",null,"Output")),(0,i.kt)("tr",null,(0,i.kt)("td",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"class Foo {\n  #x = 0;\n  y = 0;\n\n  equals(obj) {\n    const { #x: x, y: y } = this;\n\n    return (\n      x === obj.#x && y === obj.y\n    );\n  }\n}\n\n"))),(0,i.kt)("td",null,(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"class Foo {\n  #x = 0;\n  y = 0;\n\n  equals(obj) {\n    const x = this.#x,\n      { y } = this;\n\n    return (\n      x === obj.#x && y === obj.y\n    );\n  }\n}\n"))))),(0,i.kt)("p",null,"You can enable it by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/plugin-proposal-destructuring-private")," plugin to your configuration."),(0,i.kt)("p",null,"To minimize the transpiling footprint, the code generated by this plugin will still expect non-private destructuring and private elements support. If you need to compile them further, you can enable the relevant plugins (or you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"@babel/preset-env"),")."),(0,i.kt)("h3",{id:"typescript-47-support-14359-14457-14476"},"TypeScript 4.7 support (",(0,i.kt)("a",{parentName:"h3",href:"https://github.com/babel/babel/pull/14359"},"#14359"),", ",(0,i.kt)("a",{parentName:"h3",href:"https://github.com/babel/babel/pull/14457"},"#14457"),", ",(0,i.kt)("a",{parentName:"h3",href:"https://github.com/babel/babel/pull/14476"},"#14476"),")"),(0,i.kt)("p",null,"TypeScript 4.7 supports different new syntactic features:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"instantiation expressions, which allow specifying type arguments of functions without invoking them:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const identity = <T>(val: T) => val;\n\nconst stringIdentity = identity<string>; // (val: string) => string;\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"explicit variance annotations for type arguments, to guide the TypeScript type checker when computing compatibility between different types:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type Provider<out T> = () => T;\ntype Consumer<in T> = (x: T) => void;\ntype Mapper<in T, out U> = (x: T) => U;\ntype Processor<in out T> = (x: T) => T;\n")),(0,i.kt)("p",{parentName:"li"},"In this example, ",(0,i.kt)("inlineCode",{parentName:"p"},"Provide<string>")," is a subtype of ",(0,i.kt)("inlineCode",{parentName:"p"},"Provider<string | number>")," while ",(0,i.kt)("inlineCode",{parentName:"p"},"Consumer<string | number>")," is a subtype of ",(0,i.kt)("inlineCode",{parentName:"p"},"Consumer<string>"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"constraints for the ",(0,i.kt)("inlineCode",{parentName:"p"},"infer")," operator in conditional types:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'type GetColor<T> =\n  T extends { color: infer C extends "red" | "pink" }\n    ? C\n    : "unknown color";\n')))),(0,i.kt)("p",null,"You can read the full TypeScript 4.7 release announcement ",(0,i.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/"},"on their blog"),"."),(0,i.kt)("h3",{id:"inline-regenerator-runtime-helper-14538"},"Inline ",(0,i.kt)("inlineCode",{parentName:"h3"},"regenerator-runtime")," helper (",(0,i.kt)("a",{parentName:"h3",href:"https://github.com/babel/babel/pull/14538"},"#14538"),")"),(0,i.kt)("p",null,"Starting from Babel 7.18.0, ",(0,i.kt)("inlineCode",{parentName:"p"},"regenerator-runtime")," is automatically injected in the same way that Babel injects the other runtime helpers, without relying on an implicit ",(0,i.kt)("inlineCode",{parentName:"p"},"regeneratorRuntime")," global. When not using ",(0,i.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-transform-runtime"},(0,i.kt)("inlineCode",{parentName:"a"},"@babel/plugin-transform-runtime")),", Babel will automatically inline the ",(0,i.kt)("inlineCode",{parentName:"p"},"regeneratorRuntime")," helper:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"you can stop manually loading ",(0,i.kt)("inlineCode",{parentName:"li"},"regenerator-runtime")," (with ",(0,i.kt)("inlineCode",{parentName:"li"},"import"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"require")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"<script>"),");"),(0,i.kt)("li",{parentName:"ul"},"you can delete ",(0,i.kt)("inlineCode",{parentName:"li"},'"regenerator-runtime"')," from your dependencies in ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json"),".")),(0,i.kt)("p",null,"For example this is the output difference between old and new Babel versions when compiling ",(0,i.kt)("inlineCode",{parentName:"p"},"var f = function*() {};"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"},'+function _regeneratorRuntime() { /* ... */ }\n\n-var f = /*#__PURE__*/regeneratorRuntime.mark(function f() {\n+var f = /*#__PURE__*/_regeneratorRuntime().mark(function f() {\n-  return regeneratorRuntime.wrap(function f$(_context) {\n+  return _regeneratorRuntime().wrap(function f$(_context) {\n     while (1) {\n       switch (_context.prev = _context.next) {\n         case 0:\n         case "end":\n           return _context.stop();\n       }\n     }\n   }, f);\n });\n')))}d.isMDXComponent=!0}}]);