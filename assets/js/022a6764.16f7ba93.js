"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7968"],{34756:function(e,n,a){a.r(n),a.d(n,{assets:function(){return l},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return t},metadata:function(){return s},toc:function(){return d}});var s=a(56257),i=a(85893),o=a(50065);let t={layout:"post",title:"7.25.0 Released: Safari bugfixes and duplicated named capturing groups",authors:"team",date:new Date("2024-07-26T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.25.0 Released"},r=void 0,l={authorsImageUrls:[void 0]},d=[{value:"Highlights",id:"highlights",level:2},{value:"Duplicated named capturing groups (#16445)",id:"duplicated-named-capturing-groups-16445",level:3},{value:"Simplify JSON modules imports in CommonJS (#16579)",id:"simplify-json-modules-imports-in-commonjs-16579",level:3},{value:"<code>@babel/plugin-bugfix-safari-class-field-initializer-scope</code> (#16569)",id:"babelplugin-bugfix-safari-class-field-initializer-scope-16569",level:3}];function c(e){let n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Babel 7.25.0 is out!"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@babel/preset-env"})," now supports the ",(0,i.jsx)(n.a,{href:"https://github.com/tc39/proposal-duplicate-named-capturing-groups",children:"duplicated named capturing groups"})," proposal for Regular Expressions by default, as well as a bugfix for class fields when targeting Safari. This version also improves support for compiling ",(0,i.jsx)(n.a,{href:"https://babeljs.io/docs/babel-plugin-proposal-json-modules",children:"JSON module imports"})," to CommonJS, and adds support for config files to ",(0,i.jsx)(n.code,{children:"@babel/node"}),"'s ",(0,i.jsx)(n.code,{children:"--eval"})," mode."]}),"\n",(0,i.jsxs)(n.p,{children:["You can read the whole changelog ",(0,i.jsx)(n.a,{href:"https://github.com/babel/babel/releases/tag/v7.25.0",children:"on GitHub"}),"."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our ",(0,i.jsx)(n.a,{href:"https://github.com/babel/babel?sponsor=1",children:"Open Collective"})," and, better yet, work with us on the implementation of ",(0,i.jsx)(n.a,{href:"https://github.com/babel/proposals",children:"new ECMAScript proposals"})," directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at ",(0,i.jsx)(n.a,{href:"mailto:team@babeljs.io",children:"team@babeljs.io"})," if you'd like to discuss more!"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsxs)(n.h3,{id:"duplicated-named-capturing-groups-16445",children:["Duplicated named capturing groups (",(0,i.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16445",children:"#16445"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/tc39/proposal-duplicate-named-capturing-groups",children:"duplicated named capturing groups"})," proposal allows re-using the same name for groups in alternative branches within a regular expression. For example, a RegExp that matches dates either in the ",(0,i.jsx)(n.code,{children:"dd/mm/yyyy"})," or ",(0,i.jsx)(n.code,{children:"yyyy-mm-dd"})," format could be written as"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'let re =\n  /(?<day>\\d\\d)\\/(?<month>\\d\\d)\\/(?<year>\\d\\d\\d\\d)|(?<year>\\d\\d\\d\\d)-(?<month>\\d\\d)-(?<day>\\d\\d)/;\n\n"21/12/2023".match(re).groups.day; // 21\n"2023-12-21".match(re).groups.day; // 21\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The proposal reached Stage 4 in the April 2024 TC39 meeting, and will be included in the next version of the JavaScript standard. It is thus now enabled by default in ",(0,i.jsx)(n.code,{children:"@babel/preset-env"})," (when needed based on your ",(0,i.jsx)(n.a,{href:"https://babeljs.io/docs/options#targets",children:"targets"}),"), and you can safely remove ",(0,i.jsx)(n.code,{children:"@babel/plugin-proposal-duplicate-named-capturing-groups-regex"})," from your configuration."]}),"\n",(0,i.jsxs)(n.p,{children:["If for any reason you still need to explicitly list the plugin, it has now been renamed to ",(0,i.jsx)(n.code,{children:"@babel/plugin-transform-duplicate-named-capturing-groups-regex"})," as the proposal became a standard language feature."]}),"\n",(0,i.jsxs)(n.h3,{id:"simplify-json-modules-imports-in-commonjs-16579",children:["Simplify JSON modules imports in CommonJS (",(0,i.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16579",children:"#16579"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["After introducing support for transforming ",(0,i.jsx)(n.a,{href:"https://github.com/tc39/proposal-json-modules",children:"JSON modules"})," imports in Babel 7.24.0, we realized that the generated output was not friendly to CommonJS bundlers."]}),"\n",(0,i.jsx)(n.p,{children:"Given this code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import myConfig from "./config.json" with { type: "json" };\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://babeljs.io/docs/babel-plugin-proposal-json-modules",children:(0,i.jsx)(n.code,{children:"@babel/plugin-proposal-json-modules"})})," would compile it to the following, when targeting CommonJS on Node.js:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const myConfig = JSON.parse(\n  require("fs").readFileSync(require.resolve("./config.json"))\n);\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"JSON.parse"})," + ",(0,i.jsx)(n.code,{children:"readFileSync"})," combination is necessary to ensure that ",(0,i.jsx)(n.code,{children:"config.json"})," is indeed a JSON file, and not a ",(0,i.jsx)(n.code,{children:"config.json.js"})," file trying to sneakily execute some code while being loaded."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"@babel/plugin-proposal-json-modules"})," has now an ",(0,i.jsx)(n.code,{children:"uncheckedRequire"})," option to simplify the output, at the cost of less validation. You can enable it in your configuration:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "plugins": [\n    ["@babel/plugin-proposal-json-modules", { "uncheckedRequire": true }]\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"and Babel will generate the following code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const myConfig = require("./config.json");\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"babelplugin-bugfix-safari-class-field-initializer-scope-16569",children:[(0,i.jsx)(n.code,{children:"@babel/plugin-bugfix-safari-class-field-initializer-scope"})," (",(0,i.jsx)(n.a,{href:"https://github.com/babel/babel/pull/16569",children:"#16569"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Safari versions older than 16 have ",(0,i.jsx)(n.a,{href:"https://bugs.webkit.org/show_bug.cgi?id=236843",children:"a bug"})," when using parentheses around expressions in class fields. For example, the following code would throw an error:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"{\n  let a = [3];\n  new class {\n    c = (a)[0];\n  };\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"This is especially problematic when using Webpack or when compiling to CommonJS, as they add parentheses when transforming imports. For example, this input code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { hello } from "./dep";\n\nclass A {\n  prop = hello();\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"would become"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"var _dep = /* ... */;\n\nclass A {\n  prop = (0, _dep.hello)();\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/davidtaylorhq",children:"David Taylor"})," implemented a fix (thanks!) in the new ",(0,i.jsx)(n.code,{children:"@babel/plugin-bugfix-safari-class-field-initializer-scope"})," package, which is enabled by default in ",(0,i.jsx)(n.code,{children:"@babel/preset-env"})," when your targets include Safari versions older than 16."]})]})}function p(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},50065:function(e,n,a){a.d(n,{Z:function(){return r},a:function(){return t}});var s=a(67294);let i={},o=s.createContext(i);function t(e){let n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}},56257:function(e){e.exports=JSON.parse('{"permalink":"/blog/2024/07/26/7.25.0","source":"@site/blog/2024-07-26-7.25.0.md","title":"7.25.0 Released: Safari bugfixes and duplicated named capturing groups","description":"Babel 7.25.0 is out!","date":"2024-07-26T00:00:00.000Z","tags":[],"readingTime":2.695,"hasTruncateMarker":true,"authors":[{"name":"Babel Team","url":"https://twitter.com/babeljs","email":"team@babeljs.io","key":"team","page":null}],"frontMatter":{"layout":"post","title":"7.25.0 Released: Safari bugfixes and duplicated named capturing groups","authors":"team","date":"2024-07-26T00:00:00.000Z","categories":"announcements","share_text":"Babel 7.25.0 Released"},"unlisted":false,"prevItem":{"title":"7.26.0 Released: stage 4 features enabled by default, and a new experimental code printer","permalink":"/blog/2024/10/25/7.26.0"},"nextItem":{"title":"7.24.0 Released: Decorator updates and JSON modules imports","permalink":"/blog/2024/02/28/7.24.0"}}')}}]);