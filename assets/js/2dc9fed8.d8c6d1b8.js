"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8467"],{42405:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,contentTitle:()=>c,default:()=>b,assets:()=>d,toc:()=>h,frontMatter:()=>i});var r=JSON.parse('{"id":"v7-migration","title":"Upgrade to Babel 7","description":"Refer users to this document when upgrading to Babel 7. Check here for API/integration changes.","source":"@site/../docs/v7-migration.md","sourceDirName":".","slug":"/v7-migration","permalink":"/docs/v7-migration","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/v7-migration.md","tags":[],"version":"current","frontMatter":{"title":"Upgrade to Babel 7","id":"v7-migration"},"sidebar":"docs","previous":{"title":"Learn ES2015","permalink":"/docs/learn"},"next":{"title":"Config Files","permalink":"/docs/config-files"}}'),l=s("24246"),a=s("80980"),t=s("95181"),o=s("38049");let i={title:"Upgrade to Babel 7",id:"v7-migration"},c=void 0,d={},h=[{value:"All of Babel",id:"all-of-babel",level:2},{value:"Config Lookup Changes",id:"config-lookup-changes",level:2},{value:"Yearly Preset Deprecations",id:"yearly-preset-deprecations",level:2},{value:"Stage Preset Deprecations",id:"stage-preset-deprecations",level:2},{value:"Remove proposal polyfills in <code>@babel/polyfill</code>",id:"remove-proposal-polyfills-in-babelpolyfill",level:2},{value:"Versioning/Dependencies",id:"versioningdependencies",level:2},{value:"Package Renames",id:"package-renames",level:2},{value:"Scoped Packages",id:"scoped-packages",level:3},{value:"Use in the config",id:"use-in-the-config",level:4},{value:"Switch to <code>-proposal-</code> for TC39 Proposals",id:"switch-to--proposal--for-tc39-proposals",level:3},{value:"Remove the year from package names",id:"remove-the-year-from-package-names",level:3},{value:"<code>&quot;use strict&quot;</code> and <code>this</code> in CommonJS",id:"use-strict-and-this-in-commonjs",level:2},{value:"Separation of the React and Flow presets",id:"separation-of-the-react-and-flow-presets",level:2},{value:"Option parsing",id:"option-parsing",level:2},{value:"Plugin/Preset Exports",id:"pluginpreset-exports",level:2},{value:"Resolving string-based config values",id:"resolving-string-based-config-values",level:2},{value:"Path-based <code>only</code> and <code>ignore</code> patterns",id:"path-based-only-and-ignore-patterns",level:2},{value:"Babel&#39;s CLI commands",id:"babels-cli-commands",level:2},{value:"<code>@babel/node</code>",id:"babelnode",level:3},{value:"<code>@babel/runtime</code>, <code>@babel/plugin-transform-runtime</code>",id:"babelruntime-babelplugin-transform-runtime",level:3},{value:"Only Helpers",id:"only-helpers",level:4},{value:"Helpers + polyfilling from <code>core-js</code>",id:"helpers--polyfilling-from-core-js",level:4},{value:"Spec Compliancy",id:"spec-compliancy",level:2},{value:"<code>@babel/plugin-proposal-object-rest-spread</code>",id:"babelplugin-proposal-object-rest-spread",level:3},{value:"<code>@babel/plugin-proposal-class-properties</code>",id:"babelplugin-proposal-class-properties",level:3},{value:"Split <code>@babel/plugin-transform-export-extensions</code> into the two renamed proposals",id:"split-babelplugin-transform-export-extensions-into-the-two-renamed-proposals",level:3},{value:"<code>@babel/plugin-transform-template-literals</code>",id:"babelplugin-transform-template-literals",level:3},{value:"<code>@babel/plugin-proposal-decorators</code>",id:"babelplugin-proposal-decorators",level:3},{value:"<code>@babel/plugin-proposal-pipeline-operator</code>",id:"babelplugin-proposal-pipeline-operator",level:3},{value:"Removed <code>babel-plugin-transform-class-constructor-call</code>",id:"removed-babel-plugin-transform-class-constructor-call",level:3},{value:"<code>@babel/plugin-async-to-generator</code>",id:"babelplugin-async-to-generator",level:3},{value:"<code>babel</code>",id:"babel",level:2},{value:"<code>@babel/register</code>",id:"babelregister",level:2},{value:"<code>@babel/generator</code>",id:"babelgenerator",level:2},{value:"<code>@babel/core</code>",id:"babelcore",level:2},{value:"<code>@babel/preset-env</code>",id:"babelpreset-env",level:2}];function p(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components},{Details:s}=n;return!s&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Refer users to this document when upgrading to Babel 7. Check ",(0,l.jsx)(n.a,{href:"/docs/v7-migration-api",children:"here"})," for API/integration changes."]}),"\n",(0,l.jsx)(n.p,{children:"Because not every breaking change will affect every project, we've sorted the sections by the likelihood of a change breaking tests when upgrading."}),"\n",(0,l.jsx)(n.h2,{id:"all-of-babel",children:"All of Babel"}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Support for Node.js 0.10, 0.12, 4 and 5 has been dropped ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5025",children:"#5025"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5041",children:"#5041"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/7755",children:"#7755"}),", ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5186",children:"#5186"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["We highly encourage you to use a newer version of Node.js (LTS v8) since the previous versions are not maintained.\nSee ",(0,l.jsx)(n.a,{href:"https://github.com/nodejs/LTS",children:"nodejs/LTS"})," for more information."]}),"\n",(0,l.jsxs)(n.p,{children:["This just means Babel ",(0,l.jsx)(n.em,{children:"itself"})," won't run on older versions of Node. It can still ",(0,l.jsx)(n.em,{children:"output"})," code that runs on old Node versions."]}),"\n",(0,l.jsx)(n.h2,{id:"config-lookup-changes",children:"Config Lookup Changes"}),"\n",(0,l.jsxs)(n.p,{children:["For more info, read our ",(0,l.jsx)(n.a,{href:"/docs/config-files#6x-vs-7x-babelrc-loading",children:"6.x vs 7.x comparison"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Babel has had issues previously with handling ",(0,l.jsx)(n.code,{children:"node_modules"}),", symlinks, and monorepos. We've made some changes to account for this: Babel will stop lookup at the ",(0,l.jsx)(n.code,{children:"package.json"})," boundary instead of looking up the chain. For monorepos we have added a new ",(0,l.jsx)(n.code,{children:"babel.config.js"})," file that centralizes our config across all the packages (alternatively you could make a config per package). In 7.1, we've introduced a ",(0,l.jsx)(n.a,{href:"/docs/options#rootmode",children:(0,l.jsx)(n.code,{children:"rootMode"})})," option for further lookup if necessary."]}),"\n",(0,l.jsx)(n.h2,{id:"yearly-preset-deprecations",children:(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release.html#deprecated-yearly-presets-eg-babel-preset-es20xx",children:"Yearly Preset Deprecations"})}),"\n",(0,l.jsx)(n.p,{children:'The "env" preset has been out for more than a year now, and completely replaces some of the presets we\'ve had and suggested earlier.'}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"babel-preset-es2015"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"babel-preset-es2016"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"babel-preset-es2017"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"babel-preset-latest"})}),"\n",(0,l.jsx)(n.li,{children:"A combination of the above ^"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:'These presets should be substituted with the "env" preset.'}),"\n",(0,l.jsx)(n.h2,{id:"stage-preset-deprecations",children:(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets",children:"Stage Preset Deprecations"})}),"\n",(0,l.jsxs)(n.p,{children:["We are removing the stage presets in favor of explicit proposal usage. Can check the ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/tree/755ec192e22c6b6e00782e4810366d0166fdbebd/packages/babel-preset-stage-0#babelpreset-stage-0",children:"stage-0 README"})," for more migration steps."]}),"\n",(0,l.jsxs)(n.p,{children:["To do this automatically you can run ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel-upgrade",children:(0,l.jsx)(n.code,{children:"npx babel-upgrade"})})," (PR added ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel-upgrade/pull/69",children:"here"}),")."]}),"\n",(0,l.jsx)(n.h2,{id:"remove-proposal-polyfills-in-babelpolyfill",children:(0,l.jsxs)(n.a,{href:"https://github.com/babel/babel/issues/8416",children:["Remove proposal polyfills in ",(0,l.jsx)(n.code,{children:"@babel/polyfill"})]})}),"\n",(0,l.jsxs)(n.p,{children:["Based on similar thinking, we have removed the polyfill proposals from ",(0,l.jsx)(n.code,{children:"@babel/polyfill"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Right now ",(0,l.jsx)(n.code,{children:"@babel/polyfill"})," is mostly just an alias of ",(0,l.jsx)(n.code,{children:"core-js"})," v2. ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/blob/master/packages/babel-polyfill/src/index.js",children:"Source"})]}),"\n",(0,l.jsx)(n.p,{children:"Before it used to just be 2 imports:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'import "core-js/shim"; // included < Stage 4 proposals\nimport "regenerator-runtime/runtime";\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If you want to use proposals, you will need to import these independently. You should import them directly from the ",(0,l.jsx)(n.a,{href:"https://github.com/zloirock/core-js/tree/v2#usage",children:(0,l.jsx)(n.code,{children:"core-js"})})," package or another package on npm."]}),"\n",(0,l.jsx)(n.p,{children:"e.g."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// for core-js v2:\nimport "core-js/fn/array/flat-map";\n\n// for core-js v3:\nimport "core-js/features/array/flat-map";\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Below is a list of Stage < 3 proposal polyfills in ",(0,l.jsx)(n.code,{children:"core-js"})," v2."]}),"\n",(0,l.jsx)(s,{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// core-js v2\n\n// Stage 3\nimport "core-js/fn/string/trim-left";\nimport "core-js/fn/string/trim-right";\nimport "core-js/fn/string/match-all";\nimport "core-js/fn/array/flat-map";\nimport "core-js/fn/array/flatten"; // RENAMED\nimport "core-js/fn/global";\n\n// Stage 1\nimport "core-js/fn/symbol/observable";\nimport "core-js/fn/promise/try";\nimport "core-js/fn/observable";\n\n// Stage 1 Math Extensions\nimport "core-js/fn/math/clamp";\nimport "core-js/fn/math/deg-per-rad";\nimport "core-js/fn/math/degrees";\nimport "core-js/fn/math/fscale";\nimport "core-js/fn/math/iaddh";\nimport "core-js/fn/math/isubh";\nimport "core-js/fn/math/imulh";\nimport "core-js/fn/math/rad-per-deg";\nimport "core-js/fn/math/radians";\nimport "core-js/fn/math/scale";\nimport "core-js/fn/math/umulh";\nimport "core-js/fn/math/signbit";\n\n// Stage 1 "of and from on collection constructors"\nimport "core-js/fn/map/of";\nimport "core-js/fn/set/of";\nimport "core-js/fn/weak-map/of";\nimport "core-js/fn/weak-set/of";\nimport "core-js/fn/map/from";\nimport "core-js/fn/set/from";\nimport "core-js/fn/weak-map/from";\nimport "core-js/fn/weak-set/from";\n\n// Stage 0\nimport "core-js/fn/string/at";\n\n// Nonstandard\nimport "core-js/fn/object/define-getter";\nimport "core-js/fn/object/define-setter";\nimport "core-js/fn/object/lookup-getter";\nimport "core-js/fn/object/lookup-setter";\n// import "core-js/fn/map/to-json"; // Not available standalone\n// import "core-js/fn/set/to-json"; // Not available standalone\n\nimport "core-js/fn/system/global";\nimport "core-js/fn/error/is-error";\nimport "core-js/fn/asap";\n\n// Decorator metadata? Not sure of stage/proposal\nimport "core-js/fn/reflect/define-metadata";\nimport "core-js/fn/reflect/delete-metadata";\nimport "core-js/fn/reflect/get-metadata";\nimport "core-js/fn/reflect/get-metadata-keys";\nimport "core-js/fn/reflect/get-own-metadata";\nimport "core-js/fn/reflect/get-own-metadata-keys";\nimport "core-js/fn/reflect/has-metadata";\nimport "core-js/fn/reflect/has-own-metadata";\nimport "core-js/fn/reflect/metadata";\n'})})}),"\n",(0,l.jsx)(n.h2,{id:"versioningdependencies",children:(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release.html#peer-dependencies--integrations",children:"Versioning/Dependencies"})}),"\n",(0,l.jsxs)(n.p,{children:["Most plugins/top level packages now have a ",(0,l.jsx)(n.code,{children:"peerDependency"})," on ",(0,l.jsx)(n.code,{children:"@babel/core"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"package-renames",children:"Package Renames"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"babylon"})," is now ",(0,l.jsx)(n.code,{children:"@babel/parser"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["You can still use the shorthand version of a package name (remove the ",(0,l.jsx)(n.code,{children:"preset-"})," or ",(0,l.jsx)(n.code,{children:"plugin-"}),") in the config, but I'm choosing to use the whole package name for clarity (maybe we should just remove that, given it doesn't save that much typing anyway)."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n-  "presets": ["@babel/preset-react"],\n+  "presets": ["@babel/react"], // this is equivalent\n-  "plugins": ["@babel/transform-runtime"],\n+  "plugins": ["@babel/plugin-transform-runtime"], // same\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"scoped-packages",children:"Scoped Packages"}),"\n",(0,l.jsxs)(n.p,{children:["The most important change is finally switching all packages to ",(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release.html#renames-scoped-packages-babel-x",children:"scoped packages"})," (the folder names in the ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/tree/main/packages",children:"monorepo"})," are not changed but the name in its ",(0,l.jsx)(n.code,{children:"package.json"})," is)."]}),"\n",(0,l.jsx)(n.p,{children:"This means there will be no more issues with accidental/intentional name squatting, a clear separation from community plugins, and a simpler naming convention."}),"\n",(0,l.jsx)(n.p,{children:"Your dependencies will need to be modified like so:"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"babel-cli"})," -> ",(0,l.jsx)(n.code,{children:"@babel/cli"}),". For us, we basically started by replacing ",(0,l.jsx)(n.code,{children:"babel-"})," with ",(0,l.jsx)(n.code,{children:"@babel/"}),"."]}),"\n",(0,l.jsx)(n.h4,{id:"use-in-the-config",children:"Use in the config"}),"\n",(0,l.jsxs)(n.p,{children:["You can still use the shorthand way of specifying a preset or plugin. However because of the switch to scoped packages, you still have to specify the ",(0,l.jsx)(n.code,{children:"@babel/"})," just like if you had your own preset to add to the config."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="babel.config.js"',children:'module.exports = {\n  presets: ["@babel/env"], // "@babel/preset-env"\n  plugins: ["@babel/transform-arrow-functions"], // same as "@babel/plugin-transform-arrow-functions"\n};\n'})}),"\n",(0,l.jsx)(n.h3,{id:"switch-to--proposal--for-tc39-proposals",children:(0,l.jsxs)(n.a,{href:"https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release.html#renames-proposal",children:["Switch to ",(0,l.jsx)(n.code,{children:"-proposal-"})," for TC39 Proposals"]})}),"\n",(0,l.jsxs)(n.p,{children:["This means any plugin that isn't in a yearly release (ES2015, ES2016, etc) should be renamed to ",(0,l.jsx)(n.code,{children:"-proposal"}),". This is so we can better signify that a proposal isn't officially in JavaScript."]}),"\n",(0,l.jsx)(n.p,{children:"Examples:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@babel/plugin-transform-function-bind"})," is now ",(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-function-bind"})," (Stage 0)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"@babel/plugin-transform-class-properties"})," is now ",(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-class-properties"})," (Stage 3)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This also means that when a proposal moves to Stage 4, we should rename the package."}),"\n",(0,l.jsx)(n.h3,{id:"remove-the-year-from-package-names",children:(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release.html#renames-drop-the-year-from-the-plugin-name",children:"Remove the year from package names"})}),"\n",(0,l.jsxs)(n.p,{children:["Some of the plugins had ",(0,l.jsx)(n.code,{children:"-es3-"})," or ",(0,l.jsx)(n.code,{children:"-es2015-"})," in the names, but these were unnecessary."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"@babel/plugin-transform-es2015-classes"})," became ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-classes"}),"."]}),"\n",(0,l.jsxs)(n.h2,{id:"use-strict-and-this-in-commonjs",children:[(0,l.jsx)(n.code,{children:'"use strict"'})," and ",(0,l.jsx)(n.code,{children:"this"})," in CommonJS"]}),"\n",(0,l.jsxs)(n.p,{children:["Babel 6's transformations for ES6 modules ran indiscriminately on whatever files it was told to process, never taking into account if the file actually had ES6 imports/exports in them. This had the effect of rewriting file-scoped references to ",(0,l.jsx)(n.code,{children:"this"})," to be ",(0,l.jsx)(n.code,{children:"undefined"})," and inserting ",(0,l.jsx)(n.code,{children:'"use strict"'})," at the top of all CommonJS modules that were processed by Babel."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"// input.js\nthis;\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// output.js v6\n"use strict"; // assumed strict modules\nundefined; // changed this to undefined\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"// output.js v7\nthis;\n"})}),"\n",(0,l.jsxs)(n.p,{children:["This behavior has been restricted in Babel 7 so that for the ",(0,l.jsx)(n.code,{children:"transform-es2015-modules-commonjs"})," transform, the file is only changed if it has ES6 imports or exports in the file. (Editor's note: This may change again if we land ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/issues/6242",children:"https://github.com/babel/babel/issues/6242"}),", so we'll want to revisit this before publishing)."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// input2.js\nimport "a";\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// output.js v6 and v7\n"use strict";\nrequire("a");\n'})}),"\n",(0,l.jsxs)(n.p,{children:["If you were relying on Babel to inject ",(0,l.jsx)(n.code,{children:'"use strict"'})," into all of your CommonJS modules automatically, you'll want to explicitly use the ",(0,l.jsx)(n.code,{children:"transform-strict-mode"})," plugin in your Babel config."]}),"\n",(0,l.jsx)(n.h2,{id:"separation-of-the-react-and-flow-presets",children:"Separation of the React and Flow presets"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"babel-preset-react"})," has always included the flow plugin. This has caused a lot of issues with users that accidentally use ",(0,l.jsx)(n.code,{children:"flow"})," syntax unintentionally due to a typo, or adding it in without typechecking with ",(0,l.jsx)(n.code,{children:"flow"})," itself, resulting in errors."]}),"\n",(0,l.jsx)(n.p,{children:"This issue was compounded when we decided to support TypeScript. If you wanted to use the React and TypeScript presets, we would have to figure out a way to turn on/off the syntax, automatically, via file type or the directive. In the end, it was easier to separate the presets entirely."}),"\n",(0,l.jsx)(n.p,{children:"Presets enable Babel to parse types provided by Flow / TypeScript (and other dialects / languages), then strip them out when compiling down to JavaScript."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n-  "presets": ["@babel/preset-react"]\n+  "presets": ["@babel/preset-react", "@babel/preset-flow"] // parse & remove flow types\n+  "presets": ["@babel/preset-react", "@babel/preset-typescript"] // parse & remove typescript types\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"option-parsing",children:"Option parsing"}),"\n",(0,l.jsxs)(n.p,{children:["Babel's config options are stricter than in Babel 6.\nWhere a comma-separated list for presets, e.g. ",(0,l.jsx)(n.code,{children:"\"presets\": 'es2015, es2016'"})," technically worked before, it will now fail and needs to be changed to an array ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5463",children:"#5463"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Note this does not apply to the CLI, where ",(0,l.jsx)(n.code,{children:"--presets es2015,es2016"})," will certainly still work."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n-  "presets": "@babel/preset-env, @babel/preset-react"\n+  "presets": ["@babel/preset-env", "@babel/preset-react"]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"pluginpreset-exports",children:"Plugin/Preset Exports"}),"\n",(0,l.jsxs)(n.p,{children:["All plugins/presets should now export a function rather than an object for consistency (",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/6494",children:"via babel/babel#6494"}),"). This will help us with caching."]}),"\n",(0,l.jsx)(n.h2,{id:"resolving-string-based-config-values",children:"Resolving string-based config values"}),"\n",(0,l.jsx)(n.p,{children:"In Babel 6, values passed to Babel directly (not from a config file), were resolved relative to the files being compiled, which led to lots of confusion."}),"\n",(0,l.jsx)(n.p,{children:"In Babel 7, values are resolved consistently either relative to the config file that loaded them, or relative to the working directory."}),"\n",(0,l.jsxs)(n.p,{children:["For ",(0,l.jsx)(n.code,{children:"presets"})," and ",(0,l.jsx)(n.code,{children:"plugins"})," values, this change means that the CLI will behave nicely in cases such as"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",metastring:'title="Shell"',children:"babel --presets @babel/preset-env ../file.js\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Assuming your ",(0,l.jsx)(n.code,{children:"node_modules"})," folder is in ",(0,l.jsx)(n.code,{children:"."}),", in Babel 6 this would fail because the preset could not be found."]}),"\n",(0,l.jsxs)(n.p,{children:["This change also affects ",(0,l.jsx)(n.code,{children:"only"})," and ",(0,l.jsx)(n.code,{children:"ignore"})," which will be expanded on next."]}),"\n",(0,l.jsxs)(n.h2,{id:"path-based-only-and-ignore-patterns",children:["Path-based ",(0,l.jsx)(n.code,{children:"only"})," and ",(0,l.jsx)(n.code,{children:"ignore"})," patterns"]}),"\n",(0,l.jsxs)(n.p,{children:["In Babel 6, ",(0,l.jsx)(n.code,{children:"only"})," and ",(0,l.jsx)(n.code,{children:"ignore"})," were treated as a general matching string, rather than a filepath glob. This meant that for instance ",(0,l.jsx)(n.code,{children:"*.foo.js"})," would match ",(0,l.jsx)(n.code,{children:"./**/*.foo.js"}),", which was confusing and surprising to most users."]}),"\n",(0,l.jsxs)(n.p,{children:["In Babel 7, these are now treated as path-based glob patterns which can either be relative or absolute paths. This means that if you were using these patterns, you'll probably need to at least add a ",(0,l.jsx)(n.code,{children:"**/"})," prefix to them now to ensure that your patterns match deeply into directories."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"only"})," and ",(0,l.jsx)(n.code,{children:"ignore"})," patterns ",(0,l.jsx)(n.em,{children:"do"})," still also work for directories, so you could also use ",(0,l.jsx)(n.code,{children:"only: './tests'"})," to only compile files in your ",(0,l.jsx)(n.code,{children:"tests"})," directory, with no need to use ",(0,l.jsx)(n.code,{children:"**/*.js"})," to match all nested files."]}),"\n",(0,l.jsx)(n.h2,{id:"babels-cli-commands",children:"Babel's CLI commands"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"--copy-files"})," argument for the ",(0,l.jsx)(n.code,{children:"babel"})," command, which tells Babel to copy all files in a directory that Babel doesn't know how to handle, will also now copy files that failed an ",(0,l.jsx)(n.code,{children:"only"}),"/",(0,l.jsx)(n.code,{children:"ignore"})," check, where before it would silently skip all ignored files."]}),"\n",(0,l.jsx)(n.h3,{id:"babelnode",children:(0,l.jsx)(n.code,{children:"@babel/node"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"babel-node"})," command in Babel 6 was part of the ",(0,l.jsx)(n.code,{children:"babel-cli"})," package. In Babel 7, this command has been split out into its own ",(0,l.jsx)(n.code,{children:"@babel/node"})," package, so if you are using that command, you'll want to add this new dependency."]}),"\n",(0,l.jsxs)(n.h3,{id:"babelruntime-babelplugin-transform-runtime",children:[(0,l.jsx)(n.code,{children:"@babel/runtime"}),", ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-runtime"})]}),"\n",(0,l.jsxs)(n.p,{children:['We have separated out Babel\'s helpers from its "polyfilling" behavior in runtime. More details in the ',(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/8266",children:"PR"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"/docs/babel-runtime",children:(0,l.jsx)(n.code,{children:"@babel/runtime"})})," now only contains the helpers, and if you need ",(0,l.jsx)(n.code,{children:"core-js"})," you can use ",(0,l.jsx)(n.a,{href:"/docs/babel-runtime-corejs2",children:(0,l.jsx)(n.code,{children:"@babel/runtime-corejs2"})})," and the option provided in the transform. For both you still need the ",(0,l.jsx)(n.a,{href:"/docs/babel-plugin-transform-runtime",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-runtime"})})]}),"\n",(0,l.jsx)(n.h4,{id:"only-helpers",children:"Only Helpers"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"# install the runtime as a dependency\nnpm install @babel/runtime\n# install the plugin as a devDependency\nnpm install @babel/plugin-transform-runtime --save-dev\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "plugins": ["@babel/plugin-transform-runtime"]\n}\n'})}),"\n",(0,l.jsxs)(n.h4,{id:"helpers--polyfilling-from-core-js",children:["Helpers + polyfilling from ",(0,l.jsx)(n.code,{children:"core-js"})]}),"\n",(0,l.jsxs)(n.p,{children:["So if you need ",(0,l.jsx)(n.code,{children:"core-js"})," support with ",(0,l.jsx)(n.code,{children:"transform-runtime"}),", you would now pass the ",(0,l.jsx)(n.code,{children:"corejs"})," option and use the ",(0,l.jsx)(n.code,{children:"@babel/runtime-corejs2"})," dependency instead of ",(0,l.jsx)(n.code,{children:"@babel/runtime"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"# install the runtime as a dependency\nnpm install @babel/runtime-corejs2\n# install the plugin as a devDependency\nnpm install @babel/plugin-transform-runtime --save-dev\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n  "plugins": [\n-   ["@babel/plugin-transform-runtime"],\n+   ["@babel/plugin-transform-runtime", {\n+     "corejs": 2,\n+   }],\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h2,{id:"spec-compliancy",children:"Spec Compliancy"}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-proposal-object-rest-spread",children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-object-rest-spread"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["A trailing comma cannot come after a RestElement in objects ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babylon/pull/290",children:"#290"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-medium-yellow.svg",alt:"medium"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:"var {\n-  ...y, // trailing comma is a SyntaxError\n+  ...y\n} = { a: 1 };\n"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Since Object Spread defines new properties and ",(0,l.jsx)(n.code,{children:"Object.assign"})," just sets them, Babel has changed the default behavior to be more spec compliant."]}),"\n"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/blob/007bfb656502a44f6ab50cd64750cc4b38f9efff/packages/babel-helpers/src/helpers.js#L375",children:"objectSpread helper function"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/blob/007bfb656502a44f6ab50cd64750cc4b38f9efff/packages/babel-helpers/src/helpers.js#L357-L373",children:"extends helper function"})}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"// input\nz = { x, ...y };\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// v7 default behavior: ["proposal-object-rest-spread"]\nfunction _objectSpread(target) { ... }\n\nz = _objectSpread({\n  x\n}, y);\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// Old v6 behavior: ["proposal-object-rest-spread", { "loose": true }]\nfunction _extends(target) { ... }\n\nz = _extends({\n  x\n}, y);\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// Substitute for Object.assign: ["proposal-object-rest-spread", { "loose": true, "useBuiltIns": true }]\nz = Object.assign(\n  {\n    x,\n  },\n  y\n);\n'})}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-proposal-class-properties",children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-class-properties"})}),"\n",(0,l.jsx)(n.p,{children:'The default behavior is changed to what was previously "spec" by default'}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// input\nclass Bork {\n  static a = "foo";\n  y;\n}\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// v7 default behavior: ["@babel/plugin-proposal-class-properties"]\nvar Bork = function Bork() {\n  Object.defineProperty(this, "y", {\n    enumerable: true,\n    writable: true,\n    value: void 0,\n  });\n};\n\nObject.defineProperty(Bork, "a", {\n  enumerable: true,\n  writable: true,\n  value: "foo",\n});\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// old v6 behavior: ["@babel/plugin-proposal-class-properties", { "loose": true }]\nvar Bork = function Bork() {\n  this.y = void 0;\n};\n\nBork.a = "foo";\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"split-babelplugin-transform-export-extensions-into-the-two-renamed-proposals",children:["Split ",(0,l.jsx)(n.code,{children:"@babel/plugin-transform-export-extensions"})," into the two renamed proposals"]}),"\n",(0,l.jsx)(n.p,{children:"This is a long time coming but this was finally changed."}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-export-default-from"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'export v from "mod";\n'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-export-namespace-from"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'export * as ns from "mod";\n'})}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-transform-template-literals",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-template-literals"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Template Literals Revision updated ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5523",children:"#5523"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["See the proposal for ",(0,l.jsx)(n.a,{href:"https://tc39.github.io/proposal-template-literal-revision/",children:"Template Literals Revision"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["It causes Babel 6 to throw ",(0,l.jsx)(n.code,{children:"Bad character escape sequence (5:6)"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"tag`\\unicode and \\u{55}`;\n"})}),"\n",(0,l.jsx)(n.p,{children:"This has been fixed in Babel 7 and generates something like the following:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// default\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(\n    Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })\n  );\n}\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteral(\n  [void 0],\n  ["\\\\unicode and \\\\u{55}"]\n);\ntag(_templateObject);\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// loose mode\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\nvar _templateObject = /*#__PURE__*/ _taggedTemplateLiteralLoose(\n  [void 0],\n  ["\\\\unicode and \\\\u{55}"]\n);\ntag(_templateObject);\n'})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:'Default to previous "spec" mode for regular template literals'}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"// input\n`foo${bar}`;\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// default v7 behavior: ["@babel/plugin-transform-template-literals"]\n"foo".concat(bar);\n'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'// old v6 behavior: ["@babel/plugin-transform-template-literals", { "loose": true }]\n"foo" + bar;\n'})}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-proposal-decorators",children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-decorators"})}),"\n",(0,l.jsxs)(n.p,{children:["In anticipation of the new decorators proposal implementation, we've decided to make it the new default behavior. This means that to continue using the current decorators syntax/behavior, you must set the ",(0,l.jsx)(n.code,{children:"legacy"})," option as ",(0,l.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:' {\n   "plugins": [\n-    "@babel/plugin-proposal-decorators"\n+    ["@babel/plugin-proposal-decorators", { "legacy": true }]\n   ]\n }\n'})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["NOTE: If you are using ",(0,l.jsx)(n.code,{children:"@babel/preset-stage-0"})," or ",(0,l.jsx)(n.code,{children:"@babel/preset-stage-1"}),", which include this plugin, you must pass them the ",(0,l.jsx)(n.code,{children:"decoratorsLegacy"})," option."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-proposal-pipeline-operator",children:(0,l.jsx)(n.code,{children:"@babel/plugin-proposal-pipeline-operator"})}),"\n",(0,l.jsxs)(n.p,{children:["Newer proposals in flux will error by default and will require everyone to opt into a specific proposal while things are still < Stage 2. This is explained more in this ",(0,l.jsx)(n.a,{href:"https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal",children:"post"}),"."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n  "plugins": [\n-   "@babel/plugin-proposal-pipeline-operator"\n+   ["@babel/plugin-proposal-pipeline-operator", { "proposal": "minimal" }]\n  ]\n}\n'})}),"\n",(0,l.jsxs)(n.h3,{id:"removed-babel-plugin-transform-class-constructor-call",children:["Removed ",(0,l.jsx)(n.code,{children:"babel-plugin-transform-class-constructor-call"})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["babel-plugin-transform-class-constructor-call has been removed ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5119",children:"#5119"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"TC39 decided to drop this proposal. You can move your logic into the constructor or into a static method."}),"\n",(0,l.jsxs)(n.p,{children:["See ",(0,l.jsx)(n.a,{href:"https://old.babeljs.io/docs/plugins/transform-class-constructor-call/",children:"/docs/plugins/transform-class-constructor-call/"})," for more information."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:"  class Point {\n    constructor(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n\n-  call constructor(x, y) {\n+  static secondConstructor(x, y) {\n      return new Point(x, y);\n    }\n  }\n\n  let p1 = new Point(1, 2);\n- let p2 = Point(3, 4);\n+ let p2 = Point.secondConstructor(3, 4);\n"})}),"\n",(0,l.jsx)(n.h3,{id:"babelplugin-async-to-generator",children:(0,l.jsx)(n.code,{children:"@babel/plugin-async-to-generator"})}),"\n",(0,l.jsxs)(n.p,{children:["We merged ",(0,l.jsx)(n.code,{children:"babel-plugin-transform-async-to-module-method"})," into the regular async plugin by just making it an option."]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:'{\n  "plugins": [\n-    ["@babel/transform-async-to-module-method"]\n+    ["@babel/transform-async-to-generator", {\n+      "module": "bluebird",\n+      "method": "coroutine"\n+    }]\n  ]\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"babel",children:(0,l.jsx)(n.code,{children:"babel"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Dropping the ",(0,l.jsx)(n.code,{children:"babel"})," package ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5293",children:"#5293"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["This package currently gives you an error message to install ",(0,l.jsx)(n.code,{children:"babel-cli"})," instead in v6.\nI think we can do something interesting with this name though."]}),"\n",(0,l.jsx)(n.h2,{id:"babelregister",children:(0,l.jsx)(n.code,{children:"@babel/register"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"babel-core/register.js"})," has been removed ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5132",children:"#5132"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-low-yellowgreen.svg",alt:"low"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["The deprecated usage of ",(0,l.jsx)(n.code,{children:"babel-core/register"})," has been removed in Babel 7; instead use the standalone package ",(0,l.jsx)(n.code,{children:"@babel/register"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Install ",(0,l.jsx)(n.code,{children:"@babel/register"})," as a new dependency:"]}),"\n",(0,l.jsxs)(t.Z,{groupId:"npm2yarn",children:[(0,l.jsx)(o.Z,{value:"npm",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"npm install --save-dev @babel/register\n"})})}),(0,l.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"yarn add --dev @babel/register\n"})})}),(0,l.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"pnpm add --save-dev @babel/register\n"})})})]}),"\n",(0,l.jsx)(n.p,{children:"Upgrading with Mocha:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-diff",children:"- mocha --require babel-core/register\n+ mocha --require @babel/register\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"@babel/register"})," will also now only compile files in the current working directly (was done to fix issues with symlinking)."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"@babel/register"})," options are now replaced instead of merged"]}),"\n",(0,l.jsx)(n.h2,{id:"babelgenerator",children:(0,l.jsx)(n.code,{children:"@babel/generator"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Dropping the ",(0,l.jsx)(n.code,{children:"quotes"})," option ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5154",children:"#5154"}),"] ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-none-brightgreen.svg",alt:"none"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"If you want formatting for compiled output you can use recast/prettier/escodegen/fork babel-generator."}),"\n",(0,l.jsxs)(n.p,{children:["This option was only available through ",(0,l.jsx)(n.code,{children:"babel-generator"})," explicitly until v6.18.0 when we exposed ",(0,l.jsx)(n.code,{children:"parserOpts"})," and ",(0,l.jsx)(n.code,{children:"generatorOpts"}),". Because there was a bug in that release, no one should've used this option in Babel itself."]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Dropping the ",(0,l.jsx)(n.code,{children:"flowUsesCommas"})," option ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5123",children:"#5123"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-none-brightgreen.svg",alt:"none"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Currently there are 2 supported syntaxes (",(0,l.jsx)(n.code,{children:","})," and ",(0,l.jsx)(n.code,{children:";"}),") in Flow Object Types."]}),"\n",(0,l.jsxs)(n.p,{children:["This change just makes babel-generator output ",(0,l.jsx)(n.code,{children:","})," instead of ",(0,l.jsx)(n.code,{children:";"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"babelcore",children:(0,l.jsx)(n.code,{children:"@babel/core"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["Remove ",(0,l.jsx)(n.code,{children:"babel-core/src/api/browser.js"})," ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/5124",children:"#5124"})," ",(0,l.jsx)(n.img,{src:"https://img.shields.io/badge/risk%20of%20breakage%3F-none-brightgreen.svg",alt:"none"})]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"babel-browser"})," was already removed in 6.0. If you need to use Babel in the browser or a non-Node environment, use ",(0,l.jsx)(n.a,{href:"/docs/babel-standalone",children:"@babel/standalone"}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Babel will return ",(0,l.jsx)(n.code,{children:"filename"})," as an absolute path ",(0,l.jsx)(n.a,{href:"https://github.com/babel/babel/pull/8044",children:"#8044"})]}),"\n",(0,l.jsx)(n.h2,{id:"babelpreset-env",children:(0,l.jsx)(n.code,{children:"@babel/preset-env"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"loose"})," mode will now automatically exclude the ",(0,l.jsx)(n.code,{children:"typeof-symbol"})," transform (a lot of projects using loose mode were doing this)."]})]})}function b(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},38049:function(e,n,s){s.d(n,{Z:()=>t});var r=s("24246");s("27378");var l=s("90496");let a="tabItem_wHwb";function t(e){let{children:n,hidden:s,className:t}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.Z)(a,t),hidden:s,children:n})}},95181:function(e,n,s){s.d(n,{Z:()=>v});var r=s("24246"),l=s("27378"),a=s("90496"),t=s("85403"),o=s("3620"),i=s("77090"),c=s("76180"),d=s("23418"),h=s("19073");function p(e){return l.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||l.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function b(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var u=s("3344");let m="tabList_J5MA",g="tabItem_l0OV";function j(e){let{className:n,block:s,selectedValue:l,selectValue:o,tabValues:i}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,t.o5)(),h=e=>{let n=e.currentTarget,s=i[c.indexOf(n)].value;s!==l&&(d(n),o(s))},p=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let s=c.indexOf(e.currentTarget)+1;n=c[s]??c[0];break}case"ArrowLeft":{let s=c.indexOf(e.currentTarget)-1;n=c[s]??c[c.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":s},n),children:i.map(e=>{let{value:n,label:s,attributes:t}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>c.push(e),onKeyDown:p,onClick:h,...t,className:(0,a.Z)("tabs__item",g,t?.className,{"tabs__item--active":l===n}),children:s??n},n)})})}function f(e){let{lazy:n,children:s,selectedValue:t}=e,o=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===t);return e?(0,l.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function x(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:r}=e,a=function(e){let{values:n,children:s}=e;return(0,l.useMemo)(()=>{let e=n??p(s).map(e=>{let{props:{value:n,label:s,attributes:r,default:l}}=e;return{value:n,label:s,attributes:r,default:l}});return!function(e){let n=(0,d.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[t,u]=(0,l.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!b({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=s.find(e=>e.default)??s[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:a})),[m,g]=function(e){let{queryString:n=!1,groupId:s}=e,r=(0,o.k6)(),a=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s}),t=(0,c._X)(a);return[t,(0,l.useCallback)(e=>{if(!a)return;let n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})},[a,r])]}({queryString:s,groupId:r}),[j,f]=function(e){var n;let{groupId:s}=e;let r=(n=s)?`docusaurus.tab.${n}`:null,[a,t]=(0,h.Nk)(r);return[a,(0,l.useCallback)(e=>{if(!!r)t.set(e)},[r,t])]}({groupId:r}),x=(()=>{let e=m??j;return b({value:e,tabValues:a})?e:null})();return(0,i.Z)(()=>{x&&u(x)},[x]),{selectedValue:t,selectValue:(0,l.useCallback)(e=>{if(!b({value:e,tabValues:a}))throw Error(`Can't select invalid tab value=${e}`);u(e),g(e),f(e)},[g,f,a]),tabValues:a}}(e);return(0,r.jsxs)("div",{className:(0,a.Z)("tabs-container",m),children:[(0,r.jsx)(j,{...n,...e}),(0,r.jsx)(f,{...n,...e})]})}function v(e){let n=(0,u.Z)();return(0,r.jsx)(x,{...e,children:p(e.children)},String(n))}},80980:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return t}});var r=s(27378);let l={},a=r.createContext(l);function t(e){let n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);