"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5707],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72302:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=n(25773),r=n(30808),l=(n(27378),n(35318)),o=["components"],i={title:"Learn ES2015",id:"learn"},s=void 0,p={unversionedId:"learn",id:"learn",title:"Learn ES2015",description:"es6features",source:"@site/../docs/learn.md",sourceDirName:".",slug:"/learn",permalink:"/babel-website/docs/learn",draft:!1,editUrl:"https://github.com/babel/website/edit/main/docs/../docs/learn.md",tags:[],version:"current",frontMatter:{title:"Learn ES2015",id:"learn"},sidebar:"docs",previous:{title:"Configure Babel",permalink:"/babel-website/docs/configuration"},next:{title:"Upgrade to Babel 7",permalink:"/babel-website/docs/v7-migration"}},c={},u=[{value:"Introduction",id:"introduction",level:2},{value:"ECMAScript 2015 Features",id:"ecmascript-2015-features",level:2},{value:"Arrows and Lexical This",id:"arrows-and-lexical-this",level:3},{value:"Classes",id:"classes",level:3},{value:"Enhanced Object Literals",id:"enhanced-object-literals",level:3},{value:"Template Strings",id:"template-strings",level:3},{value:"Destructuring",id:"destructuring",level:3},{value:"Default + Rest + Spread",id:"default--rest--spread",level:3},{value:"Let + Const",id:"let--const",level:3},{value:"Iterators + For..Of",id:"iterators--forof",level:3},{value:"Generators",id:"generators",level:3},{value:"Comprehensions",id:"comprehensions",level:3},{value:"Unicode",id:"unicode",level:3},{value:"Modules",id:"modules",level:3},{value:"Module Loaders",id:"module-loaders",level:3},{value:"Map + Set + WeakMap + WeakSet",id:"map--set--weakmap--weakset",level:3},{value:"Proxies",id:"proxies",level:3},{value:"Symbols",id:"symbols",level:3},{value:"Subclassable Built-ins",id:"subclassable-built-ins",level:3},{value:"Math + Number + String + Object APIs",id:"math--number--string--object-apis",level:3},{value:"Binary and Octal Literals",id:"binary-and-octal-literals",level:3},{value:"Promises",id:"promises",level:3},{value:"Reflect API",id:"reflect-api",level:3},{value:"Tail Calls",id:"tail-calls",level:3}],d={toc:u},m="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h3",null,"es6features"),(0,l.kt)("p",null,"This document was originally taken from Luke Hoban's excellent ",(0,l.kt)("a",{href:"https://git.io/es6features"},"es6features")," repo. Go give it a star on GitHub!")),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"REPL"),(0,l.kt)("p",null,"Be sure to try these features out in the online ",(0,l.kt)("a",{href:"/repl"},"REPL"),".")),(0,l.kt)("h2",{id:"introduction"},"Introduction"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ECMAScript 2015 is an ECMAScript standard that was ratified in June 2015.")),(0,l.kt)("p",null,"ES2015 is a significant update to the language, and the first major update to the language since ES5 was standardized in 2009. Implementation of these features in major JavaScript engines is ",(0,l.kt)("a",{parentName:"p",href:"https://kangax.github.io/es5-compat-table/es6/"},"underway now"),"."),(0,l.kt)("p",null,"See the ",(0,l.kt)("a",{parentName:"p",href:"http://www.ecma-international.org/ecma-262/6.0/index.html"},"ES2015 standard"),"\nfor full specification of the ECMAScript 2015 language."),(0,l.kt)("h2",{id:"ecmascript-2015-features"},"ECMAScript 2015 Features"),(0,l.kt)("a",{id:"arrows"}),(0,l.kt)("h3",{id:"arrows-and-lexical-this"},"Arrows and Lexical This"),(0,l.kt)("p",null,"Arrows are a function shorthand using the ",(0,l.kt)("inlineCode",{parentName:"p"},"=>")," syntax.  They are syntactically\nsimilar to the related feature in C#, Java 8 and CoffeeScript.  They support\nboth expression and statement bodies.  Unlike functions, arrows share the same\nlexical ",(0,l.kt)("inlineCode",{parentName:"p"},"this"),' as their surrounding code. If an arrow is inside another function,\nit shares the "arguments" variable of its parent function.'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Expression bodies\nvar odds = evens.map(v => v + 1);\nvar nums = evens.map((v, i) => v + i);\n\n// Statement bodies\nnums.forEach(v => {\n  if (v % 5 === 0)\n    fives.push(v);\n});\n\n// Lexical this\nvar bob = {\n  _name: "Bob",\n  _friends: [],\n  printFriends() {\n    this._friends.forEach(f =>\n      console.log(this._name + " knows " + f));\n  }\n};\n\n// Lexical arguments\nfunction square() {\n  let example = () => {\n    let numbers = [];\n    for (let number of arguments) {\n      numbers.push(number * number);\n    }\n\n    return numbers;\n  };\n\n  return example();\n}\n\nsquare(2, 4, 7.5, 8, 11.5, 21); // returns: [4, 16, 56.25, 64, 132.25, 441]\n')),(0,l.kt)("h3",{id:"classes"},"Classes"),(0,l.kt)("p",null,"ES2015 classes are syntactic sugar over the prototype-based OO pattern.  Having a\nsingle convenient declarative form makes class patterns easier to use, and\nencourages interoperability.  Classes support prototype-based inheritance, super\ncalls, instance and static methods and constructors."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"class SkinnedMesh extends THREE.Mesh {\n  constructor(geometry, materials) {\n    super(geometry, materials);\n\n    this.idMatrix = SkinnedMesh.defaultMatrix();\n    this.bones = [];\n    this.boneMatrices = [];\n    //...\n  }\n  update(camera) {\n    //...\n    super.update();\n  }\n  static defaultMatrix() {\n    return new THREE.Matrix4();\n  }\n}\n")),(0,l.kt)("h3",{id:"enhanced-object-literals"},"Enhanced Object Literals"),(0,l.kt)("p",null,"Object literals are extended to support setting the prototype at construction,\nshorthand for ",(0,l.kt)("inlineCode",{parentName:"p"},"foo: foo")," assignments, defining methods and making super calls.\nTogether, these also bring object literals and class declarations closer\ntogether, and let object-based design benefit from some of the same\nconveniences."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'var obj = {\n    // Sets the prototype. "__proto__" or \'__proto__\' would also work.\n    __proto__: theProtoObj,\n    // Computed property name does not set prototype or trigger early error for\n    // duplicate __proto__ properties.\n    [\'__proto__\']: somethingElse,\n    // Shorthand for \u2018handler: handler\u2019\n    handler,\n    // Methods\n    toString() {\n     // Super calls\n     return "d " + super.toString();\n    },\n    // Computed (dynamic) property names\n    [ "prop_" + (() => 42)() ]: 42\n};\n')),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("p",null,"The ",(0,l.kt)("code",null,"__proto__")," property requires native support, and was deprecated in previous ECMAScript versions. Most engines now support the property, but ",(0,l.kt)("a",{href:"https://kangax.github.io/compat-table/es6/#__proto___in_object_literals"},"some do not"),". Also, note that only ",(0,l.kt)("a",{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-additional-ecmascript-features-for-web-browsers"},"web browsers")," are required to implement it, as it's in ",(0,l.kt)("a",{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-object.prototype.__proto__"},"Annex B"),". It is available in Node.")),(0,l.kt)("h3",{id:"template-strings"},"Template Strings"),(0,l.kt)("p",null,"Template strings provide syntactic sugar for constructing strings. This is\nsimilar to string interpolation features in Perl, Python and more. Optionally, a\ntag can be added to allow the string construction to be customized, avoiding\ninjection attacks or constructing higher level data structures from string\ncontents."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Basic literal string creation\n`This is a pretty little template string.`\n\n// Multiline strings\n`In ES5 this is\n not legal.`\n\n// Interpolate variable bindings\nvar name = "Bob", time = "today";\n`Hello ${name}, how are you ${time}?`\n\n// Unescaped template strings\nString.raw`In ES5 "\\n" is a line-feed.`\n\n// Construct an HTTP request prefix is used to interpret the replacements and construction\nGET`http://foo.org/bar?a=${a}&b=${b}\n    Content-Type: application/json\n    X-Credentials: ${credentials}\n    { "foo": ${foo},\n      "bar": ${bar}}`(myOnReadyStateChangeHandler);\n')),(0,l.kt)("h3",{id:"destructuring"},"Destructuring"),(0,l.kt)("p",null,"Destructuring allows binding using pattern matching, with support for matching\narrays and objects.  Destructuring is fail-soft, similar to standard object\nlookup ",(0,l.kt)("inlineCode",{parentName:"p"},'foo["bar"]'),", producing ",(0,l.kt)("inlineCode",{parentName:"p"},"undefined")," values when not found."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// list matching\nvar [a, ,b] = [1,2,3];\na === 1;\nb === 3;\n\n// object matching\nvar { op: a, lhs: { op: b }, rhs: c }\n       = getASTNode()\n\n// object matching shorthand\n// binds `op`, `lhs` and `rhs` in scope\nvar {op, lhs, rhs} = getASTNode()\n\n// Can be used in parameter position\nfunction g({name: x}) {\n  console.log(x);\n}\ng({name: 5})\n\n// Fail-soft destructuring\nvar [a] = [];\na === undefined;\n\n// Fail-soft destructuring with defaults\nvar [a = 1] = [];\na === 1;\n\n// Destructuring + defaults arguments\nfunction r({x, y, w = 10, h = 10}) {\n  return x + y + w + h;\n}\nr({x:1, y:2}) === 23\n")),(0,l.kt)("h3",{id:"default--rest--spread"},"Default + Rest + Spread"),(0,l.kt)("p",null,"Callee-evaluated default parameter values. Turn an array into consecutive\narguments in a function call. Bind trailing parameters to an array. Rest\nreplaces the need for ",(0,l.kt)("inlineCode",{parentName:"p"},"arguments")," and addresses common cases more directly."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"function f(x, y=12) {\n  // y is 12 if not passed (or passed as undefined)\n  return x + y;\n}\nf(3) == 15\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'function f(x, ...y) {\n  // y is an Array\n  return x * y.length;\n}\nf(3, "hello", true) == 6\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"function f(x, y, z) {\n  return x + y + z;\n}\n// Pass each elem of array as argument\nf(...[1,2,3]) == 6\n")),(0,l.kt)("h3",{id:"let--const"},"Let + Const"),(0,l.kt)("p",null,"Block-scoped binding constructs. ",(0,l.kt)("inlineCode",{parentName:"p"},"let")," is the new ",(0,l.kt)("inlineCode",{parentName:"p"},"var"),". ",(0,l.kt)("inlineCode",{parentName:"p"},"const")," is\nsingle-assignment. Static restrictions prevent use before assignment."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'function f() {\n  {\n    let x;\n    {\n      // this is ok since it\'s a block scoped name\n      const x = "sneaky";\n      // error, was just defined with `const` above\n      x = "foo";\n    }\n    // this is ok since it was declared with `let`\n    x = "bar";\n    // error, already declared above in this block\n    let x = "inner";\n  }\n}\n')),(0,l.kt)("h3",{id:"iterators--forof"},"Iterators + For..Of"),(0,l.kt)("p",null,"Iterator objects enable custom iteration like CLR IEnumerable or Java\nIterable. Generalize ",(0,l.kt)("inlineCode",{parentName:"p"},"for..in")," to custom iterator-based iteration with\n",(0,l.kt)("inlineCode",{parentName:"p"},"for..of"),". Don\u2019t require realizing an array, enabling lazy design patterns like\nLINQ."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"let fibonacci = {\n  [Symbol.iterator]() {\n    let pre = 0, cur = 1;\n    return {\n      next() {\n        [pre, cur] = [cur, pre + cur];\n        return { done: false, value: cur }\n      }\n    }\n  }\n}\n\nfor (var n of fibonacci) {\n  // truncate the sequence at 1000\n  if (n > 1000)\n    break;\n  console.log(n);\n}\n")),(0,l.kt)("p",null,"Iteration is based on these duck-typed interfaces (using\n",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," type syntax for exposition only):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface IteratorResult {\n  done: boolean;\n  value: any;\n}\ninterface Iterator {\n  next(): IteratorResult;\n}\ninterface Iterable {\n  [Symbol.iterator](): Iterator\n}\n")),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Support via polyfill"),(0,l.kt)("p",null,"In order to use Iterators you must include the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),".")),(0,l.kt)("h3",{id:"generators"},"Generators"),(0,l.kt)("p",null,"Generators simplify iterator-authoring using ",(0,l.kt)("inlineCode",{parentName:"p"},"function*")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"yield"),". A function\ndeclared as function* returns a Generator instance. Generators are subtypes of\niterators which include additional ",(0,l.kt)("inlineCode",{parentName:"p"},"next")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"throw"),". These enable values to\nflow back into the generator, so ",(0,l.kt)("inlineCode",{parentName:"p"},"yield")," is an expression form which returns a\nvalue (or throws)."),(0,l.kt)("p",null,"Note: Can also be used to enable \u2018await\u2019-like async programming, see also ES7 ",(0,l.kt)("inlineCode",{parentName:"p"},"await")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/lukehoban/ecmascript-asyncawait"},"proposal"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"var fibonacci = {\n  [Symbol.iterator]: function*() {\n    var pre = 0, cur = 1;\n    for (;;) {\n      var temp = pre;\n      pre = cur;\n      cur += temp;\n      yield cur;\n    }\n  }\n}\n\nfor (var n of fibonacci) {\n  // truncate the sequence at 1000\n  if (n > 1000)\n    break;\n  console.log(n);\n}\n")),(0,l.kt)("p",null,"The generator interface is (using ",(0,l.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/"},"TypeScript")," type\nsyntax for exposition only):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface Generator extends Iterator {\n    next(value?: any): IteratorResult;\n    throw(exception: any);\n}\n")),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Support via polyfill"),(0,l.kt)("p",null,"In order to use Generators you must include the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),".")),(0,l.kt)("h3",{id:"comprehensions"},"Comprehensions"),(0,l.kt)("p",null,"Removed in Babel 6.0"),(0,l.kt)("h3",{id:"unicode"},"Unicode"),(0,l.kt)("p",null,"Non-breaking additions to support full Unicode, including new unicode literal\nform in strings and new RegExp ",(0,l.kt)("inlineCode",{parentName:"p"},"u")," mode to handle code points, as well as new\nAPIs to process strings at the 21bit code points level.  These additions support\nbuilding global apps in JavaScript."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// same as ES5.1\n"\ud842\udfb7".length == 2\n\n// new RegExp behaviour, opt-in \u2018u\u2019\n"\ud842\udfb7".match(/./u)[0].length == 2\n\n// new form\n"\\u{20BB7}" == "\ud842\udfb7"\n"\ud842\udfb7" == "\\uD842\\uDFB7"\n\n// new String ops\n"\ud842\udfb7".codePointAt(0) == 0x20BB7\n\n// for-of iterates code points\nfor(var c of "\ud842\udfb7") {\n  console.log(c);\n}\n')),(0,l.kt)("h3",{id:"modules"},"Modules"),(0,l.kt)("p",null,"Language-level support for modules for component definition. Codifies patterns\nfrom popular JavaScript module loaders (AMD, CommonJS). Runtime behaviour\ndefined by a host-defined default loader. Implicitly async model \u2013 no code\nexecutes until requested modules are available and processed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// lib/math.js\nexport function sum(x, y) {\n  return x + y;\n}\nexport var pi = 3.141593;\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// app.js\nimport * as math from "lib/math";\nconsole.log("2\u03c0 = " + math.sum(math.pi, math.pi));\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// otherApp.js\nimport {sum, pi} from "lib/math";\nconsole.log("2\u03c0 = " + sum(pi, pi));\n')),(0,l.kt)("p",null,"Some additional features include ",(0,l.kt)("inlineCode",{parentName:"p"},"export default")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"export *"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// lib/mathplusplus.js\nexport * from "lib/math";\nexport var e = 2.71828182846;\nexport default function(x) {\n    return Math.exp(x);\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// app.js\nimport exp, {pi, e} from "lib/mathplusplus";\nconsole.log("e^\u03c0 = " + exp(pi));\n')),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Module Formatters"),(0,l.kt)("p",null,"Babel can transpile ES2015 Modules to several different formats including Common.js, AMD, System, and UMD. You can even create your own. For more details see the ",(0,l.kt)("a",{href:"/docs/plugins/"},"modules docs"),".")),(0,l.kt)("h3",{id:"module-loaders"},"Module Loaders"),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Not part of ES2015"),(0,l.kt)("p",null,"This is left as implementation-defined within the ECMAScript 2015 specification. The eventual standard will be in WHATWG's ",(0,l.kt)("a",{href:"https://whatwg.github.io/loader/"},"Loader specification"),", but that is currently a work in progress. What is below is from a previous ES2015 draft.")),(0,l.kt)("p",null,"Module loaders support:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Dynamic loading"),(0,l.kt)("li",{parentName:"ul"},"State isolation"),(0,l.kt)("li",{parentName:"ul"},"Global namespace isolation"),(0,l.kt)("li",{parentName:"ul"},"Compilation hooks"),(0,l.kt)("li",{parentName:"ul"},"Nested virtualization")),(0,l.kt)("p",null,"The default module loader can be configured, and new loaders can be constructed\nto evaluate and load code in isolated or constrained contexts."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Dynamic loading \u2013 \u2018System\u2019 is default loader\nSystem.import("lib/math").then(function(m) {\n  alert("2\u03c0 = " + m.sum(m.pi, m.pi));\n});\n\n// Create execution sandboxes \u2013 new Loaders\nvar loader = new Loader({\n  global: fixup(window) // replace \u2018console.log\u2019\n});\nloader.eval("console.log(\\"hello world!\\");");\n\n// Directly manipulate module cache\nSystem.get("jquery");\nSystem.set("jquery", Module({$: $})); // WARNING: not yet finalized\n')),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Additional polyfill needed"),(0,l.kt)("p",null,"Since Babel defaults to using common.js modules, it does not include the polyfill for the module loader API. Get it ",(0,l.kt)("a",{href:"https://github.com/ModuleLoader/es6-module-loader"},"here"),".")),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Using Module Loader"),(0,l.kt)("p",null,"In order to use this, you'll need to tell Babel to use the",(0,l.kt)("code",null,"system")," module formatter. Also be sure to check out ",(0,l.kt)("a",{href:"https://github.com/systemjs/systemjs"},"System.js"),".")),(0,l.kt)("h3",{id:"map--set--weakmap--weakset"},"Map + Set + WeakMap + WeakSet"),(0,l.kt)("p",null,"Efficient data structures for common algorithms.  WeakMaps provides leak-free\nobject-key\u2019d side tables."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Sets\nvar s = new Set();\ns.add("hello").add("goodbye").add("hello");\ns.size === 2;\ns.has("hello") === true;\n\n// Maps\nvar m = new Map();\nm.set("hello", 42);\nm.set(s, 34);\nm.get(s) == 34;\n\n// Weak Maps\nvar wm = new WeakMap();\nwm.set(s, { extra: 42 });\nwm.size === undefined\n\n// Weak Sets\nvar ws = new WeakSet();\nws.add({ data: 42 });\n// Because the added object has no other references, it will not be held in the set\n')),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Support via polyfill"),(0,l.kt)("p",null,"In order to support Maps, Sets, WeakMaps, and WeakSets in all environments you must include the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),".")),(0,l.kt)("h3",{id:"proxies"},"Proxies"),(0,l.kt)("p",null,"Proxies enable creation of objects with the full range of behaviors available to\nhost objects.  Can be used for interception, object virtualization,\nlogging/profiling, etc."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Proxying a normal object\nvar target = {};\nvar handler = {\n  get: function (receiver, name) {\n    return `Hello, ${name}!`;\n  }\n};\n\nvar p = new Proxy(target, handler);\np.world === "Hello, world!";\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// Proxying a function object\nvar target = function () { return "I am the target"; };\nvar handler = {\n  apply: function (receiver, ...args) {\n    return "I am the proxy";\n  }\n};\n\nvar p = new Proxy(target, handler);\np() === "I am the proxy";\n')),(0,l.kt)("p",null,"There are traps available for all of the runtime-level meta-operations:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"var handler =\n{\n  // target.prop\n  get: ...,\n  // target.prop = value\n  set: ...,\n  // 'prop' in target\n  has: ...,\n  // delete target.prop\n  deleteProperty: ...,\n  // target(...args)\n  apply: ...,\n  // new target(...args)\n  construct: ...,\n  // Object.getOwnPropertyDescriptor(target, 'prop')\n  getOwnPropertyDescriptor: ...,\n  // Object.defineProperty(target, 'prop', descriptor)\n  defineProperty: ...,\n  // Object.getPrototypeOf(target), Reflect.getPrototypeOf(target),\n  // target.__proto__, object.isPrototypeOf(target), object instanceof target\n  getPrototypeOf: ...,\n  // Object.setPrototypeOf(target), Reflect.setPrototypeOf(target)\n  setPrototypeOf: ...,\n  // for (let i in target) {}\n  enumerate: ...,\n  // Object.keys(target)\n  ownKeys: ...,\n  // Object.preventExtensions(target)\n  preventExtensions: ...,\n  // Object.isExtensible(target)\n  isExtensible :...\n}\n")),(0,l.kt)("blockquote",{class:"alert alert--danger"},(0,l.kt)("h4",null,"Unsupported feature"),(0,l.kt)("p",null,"Due to the limitations of ES5, Proxies cannot be transpiled or polyfilled. See support in ",(0,l.kt)("a",{href:"https://kangax.github.io/compat-table/es6/#test-Proxy"},"various JavaScript engines"),".")),(0,l.kt)("h3",{id:"symbols"},"Symbols"),(0,l.kt)("p",null,"Symbols enable access control for object state. Symbols allow properties to be\nkeyed by either ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," (as in ES5) or ",(0,l.kt)("inlineCode",{parentName:"p"},"symbol"),". Symbols are a new primitive\ntype. Optional ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," parameter used in debugging - but is not part of identity.\nSymbols are unique (like gensym), but not private since they are exposed via\nreflection features like ",(0,l.kt)("inlineCode",{parentName:"p"},"Object.getOwnPropertySymbols"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'(function() {\n\n  // module scoped symbol\n  var key = Symbol("key");\n\n  function MyClass(privateData) {\n    this[key] = privateData;\n  }\n\n  MyClass.prototype = {\n    doStuff: function() {\n      ... this[key] ...\n    }\n  };\n\n  // Limited support from Babel, full support requires native implementation.\n  typeof key === "symbol"\n})();\n\nvar c = new MyClass("hello")\nc["key"] === undefined\n')),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Limited support via polyfill"),(0,l.kt)("p",null,"Limited support requires the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),". Due to language limitations, some features can't be transpiled or polyfilled. See core.js's ",(0,l.kt)("a",{href:"https://github.com/zloirock/core-js#caveats-when-using-symbol-polyfill"},"caveats section")," for more details.")),(0,l.kt)("h3",{id:"subclassable-built-ins"},"Subclassable Built-ins"),(0,l.kt)("p",null,"In ES2015, built-ins like ",(0,l.kt)("inlineCode",{parentName:"p"},"Array"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Date")," and DOM ",(0,l.kt)("inlineCode",{parentName:"p"},"Element"),"s can be subclassed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// User code of Array subclass\nclass MyArray extends Array {\n    constructor(...args) { super(...args); }\n}\n\nvar arr = new MyArray();\narr[1] = 12;\narr.length == 2\n")),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Partial support"),(0,l.kt)("p",null,"Built-in subclassability should be evaluated on a case-by-case basis as classes such as ",(0,l.kt)("code",null,"HTMLElement")," ",(0,l.kt)("strong",null,"can")," be subclassed while many such as ",(0,l.kt)("code",null,"Date"),", ",(0,l.kt)("code",null,"Array")," and ",(0,l.kt)("code",null,"Error")," ",(0,l.kt)("strong",null,"cannot")," be due to ES5 engine limitations.")),(0,l.kt)("h3",{id:"math--number--string--object-apis"},"Math + Number + String + Object APIs"),(0,l.kt)("p",null,"Many new library additions, including core Math libraries, Array conversion\nhelpers, and Object.assign for copying."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'Number.EPSILON\nNumber.isInteger(Infinity) // false\nNumber.isNaN("NaN") // false\n\nMath.acosh(3) // 1.762747174039086\nMath.hypot(3, 4) // 5\nMath.imul(Math.pow(2, 32) - 1, Math.pow(2, 32) - 2) // 2\n\n"abcde".includes("cd") // true\n"abc".repeat(3) // "abcabcabc"\n\nArray.from(document.querySelectorAll("*")) // Returns a real Array\nArray.of(1, 2, 3) // Similar to new Array(...), but without special one-arg behavior\n[0, 0, 0].fill(7, 1) // [0,7,7]\n[1,2,3].findIndex(x => x == 2) // 1\n["a", "b", "c"].entries() // iterator [0, "a"], [1,"b"], [2,"c"]\n["a", "b", "c"].keys() // iterator 0, 1, 2\n["a", "b", "c"].values() // iterator "a", "b", "c"\n\nObject.assign(Point, { origin: new Point(0,0) })\n')),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Limited support from polyfill"),(0,l.kt)("p",null,"Most of these APIs are supported by the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),". However, certain features are omitted for various reasons (e.g.",(0,l.kt)("code",null,"String.prototype.normalize")," needs a lot of additional code to support). You can find more polyfills ",(0,l.kt)("a",{href:"https://github.com/addyosmani/es6-tools#polyfills"},"here"),".")),(0,l.kt)("h3",{id:"binary-and-octal-literals"},"Binary and Octal Literals"),(0,l.kt)("p",null,"Two new numeric literal forms are added for binary (",(0,l.kt)("inlineCode",{parentName:"p"},"b"),") and octal (",(0,l.kt)("inlineCode",{parentName:"p"},"o"),")."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"0b111110111 === 503 // true\n0o767 === 503 // true\n")),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Only supports literal form"),(0,l.kt)("p",null,"Babel is only able to transform ",(0,l.kt)("code",null,"0o767")," and not",(0,l.kt)("code",null,'Number("0o767")'),".")),(0,l.kt)("h3",{id:"promises"},"Promises"),(0,l.kt)("p",null,"Promises are a library for asynchronous programming. Promises are a first class\nrepresentation of a value that may be made available in the future. Promises are\nused in many existing JavaScript libraries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'function timeout(duration = 0) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, duration);\n    })\n}\n\nvar p = timeout(1000).then(() => {\n    return timeout(2000);\n}).then(() => {\n    throw new Error("hmm");\n}).catch(err => {\n    return Promise.all([timeout(100), timeout(200)]);\n})\n')),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Support via polyfill"),(0,l.kt)("p",null,"In order to support Promises you must include the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),".")),(0,l.kt)("h3",{id:"reflect-api"},"Reflect API"),(0,l.kt)("p",null,"Full reflection API exposing the runtime-level meta-operations on objects. This\nis effectively the inverse of the Proxy API, and allows making calls\ncorresponding to the same meta-operations as the proxy traps. Especially useful\nfor implementing proxies."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"var O = {a: 1};\nObject.defineProperty(O, 'b', {value: 2});\nO[Symbol('c')] = 3;\n\nReflect.ownKeys(O); // ['a', 'b', Symbol(c)]\n\nfunction C(a, b){\n  this.c = a + b;\n}\nvar instance = Reflect.construct(C, [20, 22]);\ninstance.c; // 42\n")),(0,l.kt)("blockquote",{class:"alert alert--info"},(0,l.kt)("h4",null,"Support via polyfill"),(0,l.kt)("p",null,"In order to use the Reflect API you must include the Babel ",(0,l.kt)("a",{href:"/docs/babel-polyfill"},"polyfill"),".")),(0,l.kt)("h3",{id:"tail-calls"},"Tail Calls"),(0,l.kt)("p",null,"Calls in tail-position are guaranteed to not grow the stack unboundedly. Makes\nrecursive algorithms safe in the face of unbounded inputs."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'function factorial(n, acc = 1) {\n    "use strict";\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n}\n\n// Stack overflow in most implementations today,\n// but safe on arbitrary inputs in ES2015\nfactorial(100000)\n')),(0,l.kt)("blockquote",{class:"alert alert--warning"},(0,l.kt)("h4",null,"Temporarily Removed in Babel 6"),(0,l.kt)("p",null,"Only explicit self referencing tail recursion was supported due to the complexity and performance impact of supporting tail calls globally. Removed due to other bugs and will be re-implemented.")))}f.isMDXComponent=!0}}]);