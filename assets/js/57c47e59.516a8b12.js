"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["89514"],{56447:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return a},metadata:function(){return i},toc:function(){return c}});var i=t(74940),s=t(24246),o=t(80980);let a={layout:"post",title:"7.28.0 Released: `babel.config.ts`, explicit resource management, and discard binding proposal",authors:"team",date:new Date("2025-06-30T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.28.0 Released"},r=void 0,l={authorsImageUrls:[void 0]},c=[{value:"Highlights",id:"highlights",level:2},{value:"Native support for <code>babel.config.ts</code> and <code>babel.config.mts</code> (#17392)",id:"native-support-for-babelconfigts-and-babelconfigmts-17392",level:3},{value:"Explicit resource management enabled by default (#17346, #17355)",id:"explicit-resource-management-enabled-by-default-17346-17355",level:3},{value:"Discard binding (#17276)",id:"discard-binding-17276",level:3},{value:"<code>sourceType: &quot;commonjs&quot;</code> (#17390)",id:"sourcetype-commonjs-17390",level:3}];function d(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Babel 7.28.0 is out!"}),"\n",(0,s.jsxs)(n.p,{children:["This release includes support for ",(0,s.jsx)(n.code,{children:"babel.config.ts"})," and ",(0,s.jsx)(n.code,{children:"babel.config.mts"}),", the ES2026 Explicit Resource Management feature, the ",(0,s.jsx)(n.a,{href:"https://github.com/tc39/proposal-discard-binding",children:"discard binding proposal"}),", and the ",(0,s.jsx)(n.code,{children:'sourceType: "commonjs"'})," option."]}),"\n",(0,s.jsxs)(n.p,{children:["You can read the whole changelog ",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/releases/tag/v7.28.0",children:"on GitHub"}),". If you are already using ",(0,s.jsx)(n.a,{href:"https://babeljs.io/blog/2025/05/30/babel-8-beta",children:"Babel 8 beta"}),", all the new 7.28.0 features are included in ",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/releases/tag/v8.0.0-beta.1",children:"v8.0.0-beta.1"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you or your company want to support Babel and the evolution of JavaScript but aren't sure how, you can donate to us on our ",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel?sponsor=1",children:"Open Collective"})," and, better yet, work with us on the implementation of ",(0,s.jsx)(n.a,{href:"https://github.com/babel/proposals",children:"new ECMAScript proposals"})," directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at ",(0,s.jsx)(n.a,{href:"mailto:team@babeljs.io",children:"team@babeljs.io"})," if you'd like to discuss more!"]}),"\n",(0,s.jsx)(n.h2,{id:"highlights",children:"Highlights"}),"\n",(0,s.jsxs)(n.h3,{id:"native-support-for-babelconfigts-and-babelconfigmts-17392",children:["Native support for ",(0,s.jsx)(n.code,{children:"babel.config.ts"})," and ",(0,s.jsx)(n.code,{children:"babel.config.mts"})," (",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/pull/17392",children:"#17392"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["Babel now supports ",(0,s.jsx)(n.code,{children:"babel.config.ts"})," and ",(0,s.jsx)(n.code,{children:"babel.config.mts"})," natively. We recommend using Node.js 24 for the best results."]}),"\n",(0,s.jsxs)(n.p,{children:["If you are using Babel 8.0.0-beta.1, you can import typings directly from ",(0,s.jsx)(n.code,{children:"@babel/core"})," and use them in your Babel config:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="babel.config.ts"',children:'// Requires Babel 8.0.0-beta.1 or above\nimport type { ConfigAPI, InputOptions } from "@babel/core";\nexport default function babelConfig(api: ConfigAPI): InputOptions {\n  return {\n    assumptions: {\n      noDocumentAll: true\n    },\n    presets: [\n      [\n        "@babel/preset-env",\n        {\n          targets: {\n            node: "current",\n          },\n        },\n      ],\n      "@babel/preset-typescript",\n    ],\n  };\n}\n'})}),"\n",(0,s.jsxs)(n.h3,{id:"explicit-resource-management-enabled-by-default-17346-17355",children:["Explicit resource management enabled by default (",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/pull/17346",children:"#17346"}),", ",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/pull/17355",children:"#17355"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="input.mjs"',children:"{\n  using handlerSync = openSync();\n  await using handlerAsync = await openAsync();\n  // handlerSync and handlerAsync will be disposed when the block exits\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/tc39/proposal-explicit-resource-management/",children:"Explicit resource management"}),", which was conditionally approved for Stage 4 during the May 2025 TC39 meeting, is now enabled by default in ",(0,s.jsx)(n.code,{children:"@babel/preset-env"})," and ",(0,s.jsx)(n.code,{children:"@babel/parser"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you were using the ",(0,s.jsx)(n.code,{children:"@babel/plugin-proposal-explicit-resource-management"})," plugin and ",(0,s.jsx)(n.code,{children:"@babel/preset-env"}),", you can now remove the plugin from your config."]}),"\n",(0,s.jsxs)(n.p,{children:["If you used the ",(0,s.jsx)(n.code,{children:"explicitResourceManagement"})," parser plugin, you can remove it from your config."]}),"\n",(0,s.jsxs)(n.h3,{id:"discard-binding-17276",children:["Discard binding (",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/pull/17276",children:"#17276"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["Babel supports transforming the ",(0,s.jsx)(n.a,{href:"https://github.com/tc39/proposal-discard-binding",children:"discard binding"})," proposal. Now you can use the ",(0,s.jsx)(n.code,{children:"void"})," binding to indicate an unused variable or parameter:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="example.mjs"',children:'{\n  using void = new AcquireLock(mutex);\n  // The mutex lock will be automatically disposed when the block exits\n}\n\n// A customized JSON serializer with bigint support\n// The first parameter of the replacer is unused\nJSON.stringify(input, (void, value) => {\n  if (typeof value === "bigint") {\n    return value.toString();\n  } else {\n    return value.toJSON();\n  }\n});\n\n// Get a clone of the input object without property `z`\nconst { z: void, ...obj } = { x: 1, y: 2, z: 3 };\nobj; // { x: 1, y: 2 }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can enable it by adding the ",(0,s.jsx)(n.code,{children:"@babel/plugin-proposal-discard-binding"})," plugin to your Babel config."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="babel.config.ts"',children:'export default {\n  plugins: [\n    ["@babel/plugin-proposal-discard-binding", { syntaxType: "void" }]\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the proposal might still change to use a different syntax: as such, the ",(0,s.jsx)(n.code,{children:"syntaxType"})," option is required and currently its only valid value is ",(0,s.jsx)(n.code,{children:'"void"'}),"."]}),"\n",(0,s.jsxs)(n.h3,{id:"sourcetype-commonjs-17390",children:[(0,s.jsx)(n.code,{children:'sourceType: "commonjs"'})," (",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/pull/17390",children:"#17390"}),")"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:'"commonjs"'})," mode indicates that the code should be run in a CommonJS environment such as Node.js. It is similar the ",(0,s.jsx)(n.code,{children:'"script"'})," mode, but it allows ",(0,s.jsx)(n.code,{children:"return"}),", ",(0,s.jsx)(n.code,{children:"new.target"}),", and ",(0,s.jsx)(n.code,{children:"using"}),"/",(0,s.jsx)(n.code,{children:"await using"})," declarations are allowed at the top level."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="babel.config.ts"',children:'export default {\n  // Specify commonjs sourceType for all `*.cjs` sources\n  overrides: [\n    {\n      test: "*.cjs",\n      sourceType: "commonjs"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You should use ",(0,s.jsx)(n.code,{children:'sourceType: "commonjs"'})," when using CommonJS-specific syntax, and ",(0,s.jsx)(n.code,{children:'sourceType: "script"'})," when writing non-module ",(0,s.jsx)(n.code,{children:"<script>"}),"s."]})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},80980:function(e,n,t){t.d(n,{Z:function(){return r},a:function(){return a}});var i=t(27378);let s={},o=i.createContext(s);function a(e){let n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}},74940:function(e){e.exports=JSON.parse('{"permalink":"/blog/2025/06/30/7.28.0","source":"@site/blog/2025-06-30-7.28.0.md","title":"7.28.0 Released: `babel.config.ts`, explicit resource management, and discard binding proposal","description":"Babel 7.28.0 is out!","date":"2025-06-30T00:00:00.000Z","tags":[],"readingTime":2.84,"hasTruncateMarker":true,"authors":[{"name":"Babel Team","url":"https://twitter.com/babeljs","email":"team@babeljs.io","key":"team","page":null}],"frontMatter":{"layout":"post","title":"7.28.0 Released: `babel.config.ts`, explicit resource management, and discard binding proposal","authors":"team","date":"2025-06-30T00:00:00.000Z","categories":"announcements","share_text":"Babel 7.28.0 Released"},"unlisted":false,"nextItem":{"title":"Announcing Babel 8 Beta","permalink":"/blog/2025/05/30/babel-8-beta"}}')}}]);