"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["50353"],{98453:function(e,s,t){t.r(s),t.d(s,{frontMatter:function(){return a},default:function(){return p},toc:function(){return u},metadata:function(){return n},assets:function(){return o},contentTitle:function(){return r}});var n=JSON.parse('{"id":"babel-helper-plugin-utils","title":"@babel/helper-plugin-utils","description":"This is not aiming to implement APIs that are missing on a given Babel version,","source":"@site/../docs/helper-plugin-utils.md","sourceDirName":".","slug":"/babel-helper-plugin-utils","permalink":"/docs/babel-helper-plugin-utils","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/helper-plugin-utils.md","tags":[],"version":"current","frontMatter":{"id":"babel-helper-plugin-utils","title":"@babel/helper-plugin-utils","sidebar_label":"helper-plugin-utils"}}'),i=t(24246),l=t(80980);let a={id:"babel-helper-plugin-utils",title:"@babel/helper-plugin-utils",sidebar_label:"helper-plugin-utils"},r=void 0,o={},u=[{value:"Usage",id:"usage",level:2},{value:"What this does",id:"what-this-does",level:2},{value:"<code>options</code> is always passed",id:"options-is-always-passed",level:3},{value:"<code>api.assertVersion</code> always exists",id:"apiassertversion-always-exists",level:3}];function d(e){let s={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"This is not aiming to implement APIs that are missing on a given Babel version,\nbut it is meant to provide clear error messages if a plugin is run on a version\nof Babel that doesn't have the APIs that the plugin is trying to use."}),"\n",(0,i.jsx)(s.p,{children:"Every one of Babel's core plugins and presets will use this module, and ideally\nbecause of that its size should be kept to a minimum because this may or may\nnot be deduplicated when installed."}),"\n",(0,i.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",metastring:'title="example-babel-plugin.js"',children:'import { declare } from "@babel/helper-plugin-utils";\n\nexport default declare((api, options, dirname) => {\n  return {};\n});\n'})}),"\n",(0,i.jsx)(s.h2,{id:"what-this-does",children:"What this does"}),"\n",(0,i.jsx)(s.p,{children:"Currently, this plugin provides a few services to ensure that plugins function\nwell enough to throw useful errors."}),"\n",(0,i.jsxs)(s.h3,{id:"options-is-always-passed",children:[(0,i.jsx)(s.code,{children:"options"})," is always passed"]}),"\n",(0,i.jsxs)(s.p,{children:["Babel 6 does not pass a second parameter. This frequently means that plugins\nwritten for Babel 7 that use ",(0,i.jsx)(s.code,{children:"options"})," will attempt to destructure options\nout of an ",(0,i.jsx)(s.code,{children:"undefined"})," value. By supplying the default, we avoid that risk."]}),"\n",(0,i.jsxs)(s.h3,{id:"apiassertversion-always-exists",children:[(0,i.jsx)(s.code,{children:"api.assertVersion"})," always exists"]}),"\n",(0,i.jsxs)(s.p,{children:["Babel 6 and early betas of Babel 7 do not have ",(0,i.jsx)(s.code,{children:"assertVersion"}),", so this\nwrapper ensures that it exists and throws a useful error message when not\nsupplied by Babel itself."]})]})}function p(e={}){let{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},80980:function(e,s,t){t.d(s,{Z:function(){return r},a:function(){return a}});var n=t(27378);let i={},l=n.createContext(i);function a(e){let s=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);