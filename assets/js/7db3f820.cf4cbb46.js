"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["9264"],{29302:function(e,t,n){n.r(t),n.d(t,{assets:function(){return a},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var s=n(84180),r=n(24246),l=n(80980);let i={layout:"post",title:"7.22.0 Released: Explicit Resource Management support and Import Attributes parsing",authors:"team",date:new Date("2023-05-26T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.22.0 Released"},o=void 0,a={authorsImageUrls:[void 0]},c=[{value:"Highlights",id:"highlights",level:2},{value:"Explicit Resource Management (#15633, #15520)",id:"explicit-resource-management-15633-15520",level:3},{value:"Import Attributes (#15536, #15620)",id:"import-attributes-15536-15620",level:3},{value:"Decorators updates (#15570)",id:"decorators-updates-15570",level:3},{value:"TypeScript <code>import ... =</code> and <code>export =</code> statements",id:"typescript-import---and-export--statements",level:3},{value:"Renamed packages",id:"renamed-packages",level:3}];function d(e){let t={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["Babel 7.22.0 is out, with parsing/transform support for the ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-explicit-resource-management",children:"Explicit Resource Management"})," proposal, including both the sync and async variants, and with parsing support for the ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-import-attributes",children:"Import Attributes"})," (an evolution of the old ",(0,r.jsx)(t.a,{href:"http://web.archive.org/web/20220930084518/https://github.com/tc39/proposal-import-assertions",children:"Import Assertions"})," proposal)."]}),"\n",(0,r.jsxs)(t.p,{children:["We also updated our implementation of ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-decorators/",children:"decorators"})," following some changes in the proposal, and added support for the TypeScript ",(0,r.jsx)(t.code,{children:"import ... ="})," and ",(0,r.jsx)(t.code,{children:"export ... ="})," statements."]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"@babel/preset-env"})," now includes transform support for the ",(0,r.jsx)(t.code,{children:"v"})," regular expressions flag, which was recently approved as part of the ECMAScript standard, by default. Lastly, we renamed all the plugins for ",(0,r.jsx)(t.em,{children:"stable"})," ECMAScript features from ",(0,r.jsx)(t.code,{children:"-proposal-"})," to ",(0,r.jsx)(t.code,{children:"-transform-"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["You can read the whole changelog ",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/releases/tag/v7.22.0",children:"on GitHub"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our ",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel?sponsor=1",children:"Open Collective"})," and, better yet, work with us on the implementation of ",(0,r.jsx)(t.a,{href:"https://github.com/babel/proposals",children:"new ECMAScript proposals"})," directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at ",(0,r.jsx)(t.a,{href:"mailto:team@babeljs.io",children:"team@babeljs.io"})," if you'd like to discuss more!"]}),"\n",(0,r.jsx)(t.h2,{id:"highlights",children:"Highlights"}),"\n",(0,r.jsxs)(t.h3,{id:"explicit-resource-management-15633-15520",children:["Explicit Resource Management (",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/pull/15633",children:"#15633"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/pull/15520",children:"#15520"}),")"]}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-explicit-resource-management/",children:"Explicit Resource Management"}),' Stage 3 proposal allows defining variables containing resources that will be "disposed" when exiting the scope where they are declared. This is done through ',(0,r.jsx)(t.code,{children:"using"})," (for synchronous disposal) and ",(0,r.jsx)(t.code,{children:"await using"})," (for asynchronous disposal) declarations:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:'{\n  using fileHandle = filesystem.open("./my/file.txt");\n\n  write(fileHandle, "Hello!");\n} // At the end of the block, fileHandle will be automatically closed.\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:"{\n  await using db = await Database.connect(\"//my-db.sql\");\n  db.query(\"INSERT INTO tools (name, version) VALUES ('Babel', '7.22.0')\");\n} // At the end of the block, the db connection will be closed asynchronously\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can enable support for this proposal by adding ",(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-explicit-resource-management"})," to your Babel config:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:'title="babel.config.json"',children:' {\n   "plugins": [\n     "@babel/plugin-proposal-explicit-resource-management"\n   ]\n }\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can also ",(0,r.jsx)(t.a,{href:"https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=N4KABGCuDOCWB2BzMAzWAbApgCQIbwBMswBeVDTaAT2gBdMBbAOgHsAHTeACgCImB6BlX5osTWgA9aPAJQBucGADuAJ1j0uonPiKYANGB7ZM6dCwCEshQF8QIUBFxLc6qHCRgCAI1JgnL2jAAEVxaXC9caEwmAGMWeHhMGNpefkEqAFpvJmgAR3QrRWzcyEwVKl4ASQA5AGUAUQAlABUwGuaAeTBaFhZ0aDAueFwGfTAANzK4eJkwADUAQQAZAFV62sGAcgAhcJNNg02AdiYAJlOmAAZNmULrIA&debug=false&forceAllTransforms=false&modules=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=react&prettier=false&targets=&version=7.22.0&externalPlugins=%40babel%2Fplugin-proposal-explicit-resource-management%407.20.0&assumptions=%7B%7D",children:"try out this proposal in our REPL"}),"."]}),"\n",(0,r.jsxs)(t.h3,{id:"import-attributes-15536-15620",children:["Import Attributes (",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/pull/15536",children:"#15536"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/pull/15620",children:"#15620"}),")"]}),"\n",(0,r.jsxs)(t.p,{children:['The "import assertions" proposal\'s syntax changed to use the ',(0,r.jsx)(t.code,{children:"with"})," keyword instead of ",(0,r.jsx)(t.code,{children:"assert"}),', and it has also been renamed to "import attributes":']}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:'import json from "./foo.json" with { type: "json" };\n\nimport("./foo.json", { with: { type: "json" } });\n'})}),"\n",(0,r.jsxs)(t.p,{children:["We've implemented parsing support for this new version of the proposal, which can be enabled using the ",(0,r.jsx)(t.code,{children:"@babel/plugin-syntax-import-attributes"})," plugin (or, if you are directly using ",(0,r.jsx)(t.code,{children:"@babel/parser"}),", ",(0,r.jsx)(t.code,{children:"importAttributes"}),"):"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-diff",metastring:'title="babel.config.json"',children:' {\n   "plugins": [\n-    "@babel/syntax-import-assertions",\n+    "@babel/syntax-import-attributes"\n   ]\n }\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can read more about the changes to the proposal in the ",(0,r.jsx)(t.a,{href:"https://docs.google.com/presentation/d/1Abdr54Iflz_4sah2_yX2qS3K09qDJGV84qIZ6pHAqIk/edit",children:"slides presented at the March TC39 meeting"}),", and about the motivation in the ",(0,r.jsx)(t.a,{href:"https://docs.google.com/presentation/d/1HbWhyo4tSnpv4vMZqCa2YQvi_mKdpDi4JWWBtSUQqQY",children:"slides presented at the January TC39 meeting"}),"."]}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"@babel/plugin-syntax-import-assertions"})," will continue working until we release Babel 8.0.0, but will no longer be maintained, so we highly recommended migrating to the new plugin."]})}),"\n",(0,r.jsxs)(t.p,{children:["To ease the migration from ",(0,r.jsx)(t.code,{children:"with"})," to ",(0,r.jsx)(t.code,{children:"assert"}),", if you run the Babel-compiled code only in tools and runtimes that support the legacy syntax but do not support yet the new one (such as Node.js 20 or Rollup 3.21), you can use the ",(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-import-attributes-to-assertions"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-diff",metastring:'title="babel.config.json"',children:' {\n   "plugins": [\n-    "@babel/syntax-import-assertions",\n+    "@babel/plugin-proposal-import-attributes-to-assertions"\n   ]\n }\n'})}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["\uD83D\uDED1 Note that this plugin generates deprecated code that will not work in tools and runtimes only supporting the ",(0,r.jsx)(t.code,{children:"with"})," syntax now described by the proposal."]}),"\n"]}),"\n",(0,r.jsxs)(t.h3,{id:"decorators-updates-15570",children:["Decorators updates (",(0,r.jsx)(t.a,{href:"https://github.com/babel/babel/pull/15570",children:"#15570"}),")"]}),"\n",(0,r.jsxs)(t.p,{children:["The TC39 committee received further feedback by JavaScript tools and engines implementing decorators, and refined the proposal, and designed ",(0,r.jsx)(t.a,{href:"https://github.com/tc39/proposal-decorators/issues/499",children:"different changes and bugfixes"})," in response to it."]}),"\n",(0,r.jsx)(t.p,{children:"The relevant changes for Babel users are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"accessor"})," static fields now work with derived classes:","\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:"class Base {\n  static accessor x = 2;\n}\nclass Derived extends Base {}\n\nDerived.x; // Used to throw, now returns `2`\n"})}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["Decorators stored in object properties are now called using the object as ",(0,r.jsx)(t.code,{children:"this"})," instead of ",(0,r.jsx)(t.code,{children:"undefined"}),":","\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:"let MyDecs = {\n  dec() {\n    console.log(this); // Now logs `MyDecs` instead of `undefined`\n  }\n};\n\n@MyDecs.dec class {}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["You can use this new decorators version by passing the ",(0,r.jsx)(t.code,{children:'version: "2023-05"'})," option to the decorators plugin:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",metastring:'title="babel.config.json"',children:' {\n   "plugins": [\n     ["@babel/plugin-proposal-decorators", {\n       "version": "2023-05"\n     }]\n   ]\n }\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can also try using the new version of the proposal ",(0,r.jsx)(t.a,{href:"https://babeljs.io/repl#?browsers=defaults%2C%20not%20ie%2011%2C%20not%20ie_mob%2011&build=&builtIns=false&corejs=3.21&spec=false&loose=false&code_lz=MYGwhgzhAEBCkFNoG8BQ1oQC5iwS2GjGGASgHsAnaAD2gF5oAmAblQF9VVRIYARBJTwA3BABNoCGlgQA7MTHgQkyTgKGixAOhpA&debug=false&forceAllTransforms=false&modules=false&shippedProposals=false&circleciRepo=&evaluate=false&fileSize=false&timeTravel=false&sourceType=module&lineWrap=true&presets=react&prettier=false&targets=&version=7.22.0&externalPlugins=%40babel%2Fplugin-proposal-decorators%407.21.0&assumptions=%7B%7D",children:"in our REPL"}),', enabling the "Stage 3" preset and choosing the appropriate decorators version.']}),"\n",(0,r.jsxs)(t.h3,{id:"typescript-import---and-export--statements",children:["TypeScript ",(0,r.jsx)(t.code,{children:"import ... ="})," and ",(0,r.jsx)(t.code,{children:"export ="})," statements"]}),"\n",(0,r.jsxs)(t.p,{children:["When using the TypeScript ",(0,r.jsx)(t.a,{href:"https://www.typescriptlang.org/tsconfig#verbatimModuleSyntax",children:(0,r.jsx)(t.code,{children:"verbatimModuleSyntax"})})," option, ESM ",(0,r.jsx)(t.code,{children:"import"}),"/",(0,r.jsx)(t.code,{children:"export"})," statements are disallowed in CommonJS files. Instead, developers must use the ",(0,r.jsx)(t.code,{children:"import ... ="})," and ",(0,r.jsx)(t.code,{children:"export ="})," statements:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",metastring:'title="TypeScript"',children:'import A = require("./a");\n\nexport = { x: 2 };\n'})}),"\n",(0,r.jsx)(t.p,{children:"which desugar to:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",metastring:'title="JavaScript"',children:'const A = require("./a");\n\nmodule.exports = { x: 2 };\n'})}),"\n",(0,r.jsx)(t.p,{children:"This syntax is only supported in ECMAScript modules, and only when compiling them to CommonJS. Unless you have some custom configuration, this means:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["in ",(0,r.jsx)(t.code,{children:".cts"})," files, when using ",(0,r.jsx)(t.code,{children:"@babel/preset-typescript"})]}),"\n",(0,r.jsxs)(t.li,{children:["in ",(0,r.jsx)(t.code,{children:".ts"})," files written as ESM and compiled with ",(0,r.jsx)(t.code,{children:"@babel/plugin-transform-modules-commonjs"})]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"renamed-packages",children:"Renamed packages"}),"\n",(0,r.jsxs)(t.p,{children:["From now on, we will rename ",(0,r.jsx)(t.code,{children:"-proposal-"})," plugins to ",(0,r.jsx)(t.code,{children:"-transform-"})," once they reach Stage 4 in the ",(0,r.jsx)(t.a,{href:"https://tc39.es/process-document/",children:"standardization process"})," and thus become stable. The following packages have been renamed:"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Old name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"New name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"ECMAScript version"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-unicode-sets-regex"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-unicode-sets-regex"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2024"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-class-static-block"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-class-static-block"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2022"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-private-property-in-object"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-private-property-in-object"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2022"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-class-properties"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-class-properties"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2022"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-private-methods"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-private-methods"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"}})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-numeric-separator"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-numeric-separator"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2021"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-logical-assignment-operators"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-logical-assignment-operators"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2021"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-nullish-coalescing-operator"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-nullish-coalescing-operator"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2020"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-optional-chaining"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-optional-chaining"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2020"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-export-namespace-from"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-export-namespace-from"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2020"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-json-strings"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-json-strings"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2019"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-optional-catch-binding"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-optional-catch-binding"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2019"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-async-generator-functions"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-async-generator-functions"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2018"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-object-rest-spread"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-object-rest-spread"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2018"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-proposal-unicode-property-regex"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:(0,r.jsx)(t.code,{children:"@babel/plugin-transform-unicode-property-regex"})}),(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"ES2018"})]})]})]}),"\n",(0,r.jsxs)(t.p,{children:["These plugins are all included by default in ",(0,r.jsx)(t.code,{children:"@babel/preset-env"}),": if you are using the preset, you don't need to explicitly list them in your configuration and thus this change will not affect you. The packages with the old name will no longer be updated."]})]})}function p(e={}){let{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},80980:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return i}});var s=n(27378);let r={},l=s.createContext(r);function i(e){let t=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:t},e.children)}},84180:function(e){e.exports=JSON.parse('{"permalink":"/blog/2023/05/26/7.22.0","source":"@site/blog/2023-05-26-7.22.0.md","title":"7.22.0 Released: Explicit Resource Management support and Import Attributes parsing","description":"Babel 7.22.0 is out, with parsing/transform support for the Explicit Resource Management proposal, including both the sync and async variants, and with parsing support for the Import Attributes (an evolution of the old Import Assertions proposal).","date":"2023-05-26T00:00:00.000Z","tags":[],"readingTime":5.045,"hasTruncateMarker":true,"authors":[{"name":"Babel Team","url":"https://twitter.com/babeljs","email":"team@babeljs.io","key":"team","page":null}],"frontMatter":{"layout":"post","title":"7.22.0 Released: Explicit Resource Management support and Import Attributes parsing","authors":"team","date":"2023-05-26T00:00:00.000Z","categories":"announcements","share_text":"Babel 7.22.0 Released"},"unlisted":false,"prevItem":{"title":"7.23.0 Released: Decorator Metadata and many new `import` features!","permalink":"/blog/2023/09/25/7.23.0"},"nextItem":{"title":"7.21.0 Released: Inline RegExp modifiers, TypeScript 5.0, and Decorators updates","permalink":"/blog/2023/02/20/7.21.0"}}')}}]);