"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4686"],{29662:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,contentTitle:()=>a,default:()=>u,assets:()=>d,toc:()=>h,frontMatter:()=>c});var i=JSON.parse('{"id":"babel-plugin-transform-typescript","title":"@babel/plugin-transform-typescript","description":"This plugin is included in @babel/preset-typescript","source":"@site/../docs/plugin-transform-typescript.md","sourceDirName":".","slug":"/babel-plugin-transform-typescript","permalink":"/babel-website/docs/babel-plugin-transform-typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/plugin-transform-typescript.md","tags":[],"version":"current","frontMatter":{"id":"babel-plugin-transform-typescript","title":"@babel/plugin-transform-typescript","sidebar_label":"transform-typescript"},"sidebar":"docs","previous":{"title":"@babel/preset-typescript","permalink":"/babel-website/docs/babel-preset-typescript"},"next":{"title":"@babel/preset-flow","permalink":"/babel-website/docs/babel-preset-flow"}}'),t=s("24246"),l=s("80980"),r=s("95181"),o=s("38049");let c={id:"babel-plugin-transform-typescript",title:"@babel/plugin-transform-typescript",sidebar_label:"transform-typescript"},a=void 0,d={},h=[{value:"Example",id:"example",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"With a configuration file (Recommended)",id:"with-a-configuration-file-recommended",level:3},{value:"Via CLI",id:"via-cli",level:3},{value:"Via Node API",id:"via-node-api",level:3},{value:"Options",id:"options",level:2},{value:"<code>allowDeclareFields</code>",id:"allowdeclarefields",level:3},{value:"<code>allowNamespaces</code>",id:"allownamespaces",level:3},{value:"<code>disallowAmbiguousJSXLike</code>",id:"disallowambiguousjsxlike",level:3},{value:"<code>dts</code>",id:"dts",level:3},{value:"<code>isTSX</code>",id:"istsx",level:3},{value:"<code>jsxPragma</code>",id:"jsxpragma",level:3},{value:"<code>jsxPragmaFrag</code>",id:"jsxpragmafrag",level:3},{value:"<code>onlyRemoveTypeImports</code>",id:"onlyremovetypeimports",level:3},{value:"<code>optimizeConstEnums</code>",id:"optimizeconstenums",level:3},{value:"TypeScript Compiler Options",id:"typescript-compiler-options",level:2},{value:"Caveats",id:"caveats",level:2},{value:"Impartial Namespace Support",id:"impartial-namespace-support",level:3}];function p(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components},{Details:s}=n;return!s&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["This plugin is included in ",(0,t.jsx)(n.code,{children:"@babel/preset-typescript"})]})}),"\n",(0,t.jsxs)(n.p,{children:["This plugin adds support for the types syntax used by the ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org",children:"TypeScript programming language"}),". However, this plugin does not add the ability to type-check the JavaScript passed to it. For that, you will need to install and set up TypeScript."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that although the TypeScript compiler ",(0,t.jsx)(n.code,{children:"tsc"})," actively supports certain JavaScript proposals such as optional chaining (",(0,t.jsx)(n.code,{children:"?."}),"), nullish coalescing (",(0,t.jsx)(n.code,{children:"??"}),") and class properties (",(0,t.jsx)(n.code,{children:"this.#x"}),"), this preset does not include these features because they are not the types syntax available in TypeScript only. We recommend using ",(0,t.jsx)(n.code,{children:"preset-env"})," with ",(0,t.jsx)(n.code,{children:"preset-typescript"})," if you want to transpile these features."]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"In"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const x: number = 0;\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Out"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const x = 0;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(o.Z,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npm install --save-dev @babel/plugin-transform-typescript\n"})})}),(0,t.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yarn add --dev @babel/plugin-transform-typescript\n"})})}),(0,t.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pnpm add --save-dev @babel/plugin-transform-typescript\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"with-a-configuration-file-recommended",children:"With a configuration file (Recommended)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "plugins": ["@babel/plugin-transform-typescript"]\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"via-cli",children:"Via CLI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"babel --plugins @babel/plugin-transform-typescript script.js\n"})}),"\n",(0,t.jsx)(n.h3,{id:"via-node-api",children:"Via Node API"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("@babel/core").transformSync("code", {\n  plugins: ["@babel/plugin-transform-typescript"],\n});\n'})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.h3,{id:"allowdeclarefields",children:(0,t.jsx)(n.code,{children:"allowDeclareFields"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Added in ",(0,t.jsx)(n.code,{children:"v7.7.0"})]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"This will be enabled by default in Babel 8"})}),"\n",(0,t.jsxs)(n.p,{children:["When enabled, type-only class fields are only removed if they are prefixed with the ",(0,t.jsx)(n.code,{children:"declare"})," modifier:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"class A {\n  declare foo: string; // Removed\n  bar: string; // Initialized to undefined\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"allownamespaces",children:(0,t.jsx)(n.code,{children:"allowNamespaces"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:"History"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Version"}),(0,t.jsx)(n.th,{children:"Changes"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"v7.5.0"})}),(0,t.jsxs)(n.td,{children:["Added ",(0,t.jsx)(n.code,{children:"allowNamespaces"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"v7.13.0"})}),(0,t.jsxs)(n.td,{children:["defaults to ",(0,t.jsx)(n.code,{children:"true"})]})]})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Enables compilation of TypeScript namespaces."}),"\n",(0,t.jsx)(n.h3,{id:"disallowambiguousjsxlike",children:(0,t.jsx)(n.code,{children:"disallowAmbiguousJSXLike"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Added in: ",(0,t.jsx)(n.code,{children:"v7.16.0"})]}),"\n",(0,t.jsxs)(n.p,{children:["Even when JSX parsing is not enabled, this option disallows using syntax that would be ambiguous with JSX (",(0,t.jsx)(n.code,{children:"<X> y"})," type assertions and ",(0,t.jsx)(n.code,{children:"<X>() => {}"})," type arguments). It matches the ",(0,t.jsx)(n.code,{children:"tsc"})," behavior when parsing ",(0,t.jsx)(n.code,{children:".mts"})," and ",(0,t.jsx)(n.code,{children:".mjs"})," files."]}),"\n",(0,t.jsx)(n.h3,{id:"dts",children:(0,t.jsx)(n.code,{children:"dts"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Added in: ",(0,t.jsx)(n.code,{children:"v7.20.0"})]}),"\n",(0,t.jsxs)(n.p,{children:["This option will enable parsing within a TypeScript ambient context, where certain syntax have different rules (like ",(0,t.jsx)(n.code,{children:".d.ts"})," files and inside ",(0,t.jsx)(n.code,{children:"declare module"})," blocks). Please see ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html",children:"Official Handbook"})," and ",(0,t.jsx)(n.a,{href:"https://basarat.gitbook.io/typescript/type-system/intro",children:"TypeScript Deep Dive"})," for more information about ambient contexts."]}),"\n",(0,t.jsx)(n.h3,{id:"istsx",children:(0,t.jsx)(n.code,{children:"isTSX"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Forcibly enables ",(0,t.jsx)(n.code,{children:"jsx"})," parsing. Otherwise angle brackets will be treated as TypeScript's legacy type assertion ",(0,t.jsx)(n.code,{children:"var foo = <string>bar;"}),". Also, ",(0,t.jsx)(n.code,{children:"isTSX: true"})," requires ",(0,t.jsx)(n.code,{children:"allExtensions: true"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"jsxpragma",children:(0,t.jsx)(n.code,{children:"jsxPragma"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"string"}),", defaults to ",(0,t.jsx)(n.code,{children:"React.createElement"})]}),"\n",(0,t.jsx)(n.p,{children:"Replace the function used when compiling JSX expressions. This is so that we know that the import is not a type import, and should not be removed."}),"\n",(0,t.jsx)(n.h3,{id:"jsxpragmafrag",children:(0,t.jsx)(n.code,{children:"jsxPragmaFrag"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"string"}),", defaults to ",(0,t.jsx)(n.code,{children:"React.Fragment"})]}),"\n",(0,t.jsx)(n.p,{children:"Replace the function used when compiling JSX fragment expressions. This is so that we know that the import is not a type import, and should not be removed."}),"\n",(0,t.jsx)(n.h3,{id:"onlyremovetypeimports",children:(0,t.jsx)(n.code,{children:"onlyRemoveTypeImports"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Added in: ",(0,t.jsx)(n.code,{children:"v7.9.0"})]}),"\n",(0,t.jsxs)(n.p,{children:["When set to ",(0,t.jsx)(n.code,{children:"true"}),", the transform will only remove ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-exports",children:"type-only imports"})," (introduced in TypeScript 3.8). This should only be used if you are using TypeScript >= 3.8."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"class A {\n  declare foo: string; // Removed\n  bar: string; // Initialized to undefined\n  prop?: string; // Initialized to undefined\n  prop1!: string // Initialized to undefined\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"optimizeconstenums",children:(0,t.jsx)(n.code,{children:"optimizeConstEnums"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsxs)(n.p,{children:["Added in: ",(0,t.jsx)(n.code,{children:"v7.15.0"})]}),"\n",(0,t.jsxs)(n.p,{children:["When set to ",(0,t.jsx)(n.code,{children:"true"}),", Babel will inline enum values rather than using the usual ",(0,t.jsx)(n.code,{children:"enum"})," output:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Input\nconst enum Animals {\n  Fish,\n}\nconsole.log(Animals.Fish);\n\n// Default output\nvar Animals;\n\n(function(Animals) {\n  Animals[(Animals["Fish"] = 0)] = "Fish";\n})(Animals || (Animals = {}));\n\nconsole.log(Animals.Fish);\n\n// `optimizeConstEnums` output\nconsole.log(0);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["This option differs from TypeScript's ",(0,t.jsx)(n.code,{children:"--isolatedModules"})," behavior, which ignores the ",(0,t.jsx)(n.code,{children:"const"})," modifier and compiles them as normal enums, and aligns Babel's behavior with TypeScript's default behavior."]}),"\n",(0,t.jsxs)(n.p,{children:["However, when ",(0,t.jsx)(n.em,{children:"exporting"})," a ",(0,t.jsx)(n.code,{children:"const enum"})," Babel will compile it to a plain object literal so that it doesn't need to rely on cross-file analysis when compiling it:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Input\nexport const enum Animals {\n  Fish,\n}\n\n// `optimizeConstEnums` output\nexport var Animals = {\n  Fish: 0,\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"typescript-compiler-options",children:"TypeScript Compiler Options"}),"\n",(0,t.jsxs)(n.p,{children:["The official TypeScript compiler has many ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",children:"options"})," for configuring how it\ncompiles and type checks. While many don't apply, some behaviors might be useful and their\nequivalents in Babel can be enabled by some configuration options or plugins."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--alwaysStrict"}),"\nYou can use the ",(0,t.jsx)(n.code,{children:"strictMode"})," ",(0,t.jsx)(n.a,{href:"https://babeljs.io/docs/en/babel-parser#options",children:"parser option"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"module.exports = {\n  parserOpts: { strictMode: true },\n};\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--downlevelIteration"}),"\nYou can use the ",(0,t.jsx)(n.code,{children:"@babel/plugin-transform-for-of"})," plugin. If you are using ",(0,t.jsx)(n.code,{children:"@babel/preset-env"}),", ",(0,t.jsx)(n.code,{children:"for...of"})," is already transpiled using iterators when it isn't supported by your compilation target(s)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--emitDecoratorMetadata"}),"\nThis option isn't supported by an official Babel package since it is a TypeScript-specific addition and not part of the decorators proposal.\nIf you rely on this feature, you can use the community plugin ",(0,t.jsx)(n.a,{href:"https://github.com/leonardfactory/babel-plugin-transform-typescript-metadata#readme",children:"babel-plugin-transform-typescript-metadata"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--esModuleInterop"}),"\nThis is the default behavior of Babel when transpiling ECMAScript modules."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--experimentalDecorators"}),'\nThis option enables support for the "legacy" decorator proposal. You can enable it in Babel using the ',(0,t.jsx)(n.code,{children:"@babel/plugin-proposal-decorators"})," plugin, but please be aware, there are some minor differences."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'module.exports = {\n  plugins: [["@babel/plugin-proposal-decorators", { legacy: true }]],\n};\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--importHelpers"}),"\nThis is the equivalent of the ",(0,t.jsx)(n.code,{children:"@babel/plugin-transform-runtime"})," package."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"---importsNotUsedAsValues"}),"\nYou can use the ",(0,t.jsx)(n.code,{children:"onlyRemoveTypeImports"})," option to replicate this behavior. ",(0,t.jsx)(n.code,{children:"onlyRemoveTypeImports: true"})," is equivalent to ",(0,t.jsx)(n.code,{children:"importsNotUsedAsValues: preserve"}),", while ",(0,t.jsx)(n.code,{children:"onlyRemoveTypeImports: false"})," is equivalent to ",(0,t.jsx)(n.code,{children:"importsNotUsedAsValues: remove"}),". There is no equivalent for ",(0,t.jsx)(n.code,{children:"importsNotUsedAsValues: error"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--inlineSourceMap"}),"\nYou can set the ",(0,t.jsx)(n.a,{href:"https://babeljs.io/docs/en/options#sourcemaps",children:(0,t.jsx)(n.code,{children:'sourceMaps: "inline"'})})," option in your ",(0,t.jsx)(n.code,{children:"babel.config.json"})," file."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--isolatedModules"}),"\nThis is the default Babel behavior, and it can't be turned off because Babel doesn't support cross-file analysis."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--jsx"}),"\nJSX support is provided using another plugin.\nIf you want your output to contains JSX code (i.e. ",(0,t.jsx)(n.code,{children:"--jsx preserve"}),"), you need the ",(0,t.jsx)(n.code,{children:"@babel/plugin-syntax-jsx"})," plugin; if you want to transpile it to standard JavaScript (i.e. ",(0,t.jsx)(n.code,{children:"--jsx react"})," or ",(0,t.jsx)(n.code,{children:"--jsx react-native"}),"), you should use the ",(0,t.jsx)(n.code,{children:"@babel/plugin-transform-react-jsx"})," plugin."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--jsxFactory"}),"\nIt can be customized using the ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#pragma",children:[(0,t.jsx)(n.code,{children:"pragma"})," option"]})," of the ",(0,t.jsx)(n.code,{children:"@babel/plugin-transform-react-jsx"})," package. You also need to set the ",(0,t.jsx)(n.code,{children:"jsxPragma"})," option of this plugin."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--module"}),", ",(0,t.jsx)(n.code,{children:"-m"}),"\nIf you are using a bundler (Webpack or Rollup), this option is set automatically.\nIf you are using ",(0,t.jsx)(n.code,{children:"@babel/preset-env"}),", you can use the ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/babel-preset-env#modules",children:[(0,t.jsx)(n.code,{children:"modules"})," option"]}),"; otherwise you can load the specific plugin."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"center"},children:(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"--module"})," value"]})}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"@babel/preset-env"}),"'s ",(0,t.jsx)(n.code,{children:"modules"})]})}),(0,t.jsx)(n.th,{style:{textAlign:"center"},children:(0,t.jsx)(n.strong,{children:"Single plugin"})})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"None"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"/"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"CommonJS"})}),(0,t.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,t.jsx)(n.code,{children:'"commonjs"'})," or ",(0,t.jsx)(n.code,{children:'"cjs"'})]}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"@babel/plugin-transform-modules-commonjs"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"AMD"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:'"amd"'})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"@babel/plugin-transform-modules-amd"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"System"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:'"systemjs"'})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"@babel/plugin-transform-modules-systemjs"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"UMD"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:'"umd"'})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"@babel/plugin-transform-modules-umd"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,t.jsx)(n.code,{children:"ES6"})," or ",(0,t.jsx)(n.code,{children:"ES2015"})]}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{style:{textAlign:"center"},children:"/"})]})]})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--outDir"}),"\nWhen using ",(0,t.jsx)(n.code,{children:"@babel/cli"}),", you can set the ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/babel-cli#compile-directories",children:[(0,t.jsx)(n.code,{children:"--out-dir"})," option"]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--outFile"}),"\nBabel doesn't support concatenating output files: you should use a bundler (like Webpack, Rollup or Parcel) for that.\nWhen using ",(0,t.jsx)(n.code,{children:"@babel/cli"}),", you can compile a single file using the ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/babel-cli#compile-files",children:[(0,t.jsx)(n.code,{children:"--out-file"})," option"]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--sourceMap"}),"\nYou can use the top-level ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/options#sourcemaps",children:[(0,t.jsx)(n.code,{children:"sourceMaps: true"})," option"]}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--target"}),"\nBabel doesn't support targeting a specific version of the language, but you can choose which engines you want to target using ",(0,t.jsx)(n.a,{href:"https://babeljs.io/docs/en/babel-preset-env",children:(0,t.jsx)(n.code,{children:"@babel/preset-env"})}),".\nIf you prefer, you can enable ",(0,t.jsx)(n.a,{href:"https://babeljs.io/docs/en/plugins",children:"individual plugins"})," for every ECMAScript feature."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--useDefineForClassFields"}),"\nYou can use the ",(0,t.jsx)(n.a,{href:"https://babeljs.io/docs/assumptions#setpublicclassfields",children:(0,t.jsx)(n.code,{children:"setPublicClassFields"})})," assumption to replicate this behavior."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"--watch"}),", ",(0,t.jsx)(n.code,{children:"-w"}),"\nWhen using ",(0,t.jsx)(n.code,{children:"@babel/cli"}),", you can specify the ",(0,t.jsxs)(n.a,{href:"https://babeljs.io/docs/en/babel-cli#compile-files",children:[(0,t.jsx)(n.code,{children:"--watch"})," option"]}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"caveats",children:"Caveats"}),"\n",(0,t.jsx)(n.p,{children:"Because there are features of the TypeScript language which rely on the full type-system to be available to make changes at runtime. This section of caveats is quite long, however, it's worth noting that a few of these features are only found in older TypeScript codebases and have modern JavaScript equivalents which you are probably already using."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Since Babel does not type-check, code which is syntactically correct, but would fail the TypeScript type-checking may successfully get transformed, and often in unexpected or invalid ways."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Changes to your ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," are not reflected in babel. The build process will always behave as though ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/compiler-options.html",children:(0,t.jsx)(n.code,{children:"isolatedModules"})})," is turned on, there are Babel-native alternative ways to set a lot of the ",(0,t.jsxs)(n.a,{href:"#typescript-compiler-options",children:[(0,t.jsx)(n.code,{children:"tsconfig.json"})," options"]})," however."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Q"}),": Why doesn't Babel allow export of a ",(0,t.jsx)(n.code,{children:"var"})," or ",(0,t.jsx)(n.code,{children:"let"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"A"}),": The TypeScript compiler dynamically changes how these variables are used depending on whether or not the value is mutated. Ultimately, this depends on a type-model and is outside the scope of Babel. A best-effort implementation would transform context-dependent usages of the variable to always use the ",(0,t.jsx)(n.code,{children:"Namespace.Value"})," version instead of ",(0,t.jsx)(n.code,{children:"Value"}),", in case it was mutated outside of the current file. Allowing ",(0,t.jsx)(n.code,{children:"var"})," or ",(0,t.jsx)(n.code,{children:"let"})," from Babel (as the transform is not-yet-written) is therefore is more likely than not to present itself as a bug when used as-if it was not ",(0,t.jsx)(n.code,{children:"const"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"impartial-namespace-support",children:"Impartial Namespace Support"}),"\n",(0,t.jsxs)(n.p,{children:["If you have existing code which uses the TypeScript-only ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/namespaces.html",children:"namespace"})," features. Babel supports a subset of TypeScript's namespace features. If you are considering writing new code which uses namespace, using the ES2015 ",(0,t.jsx)(n.code,{children:"import"}),"/",(0,t.jsx)(n.code,{children:"export"})," is recommended instead. It's ",(0,t.jsx)(n.a,{href:"https://github.com/microsoft/TypeScript/issues/30994#issuecomment-484150549",children:"not going away"}),", but there are modern alternatives."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Type-only ",(0,t.jsx)(n.code,{children:"namespace"}),"s should be marked with ",(0,t.jsx)(n.code,{children:"declare"})," and will subsequently be safely removed."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"export"}),"ing a variable using ",(0,t.jsx)(n.code,{children:"var"})," or ",(0,t.jsx)(n.code,{children:"let"})," in a ",(0,t.jsx)(n.code,{children:"namespace"})," will result in an error: ",(0,t.jsx)(n.em,{children:'"Namespaces exporting non-const are not supported by Babel. Change to const or ..."'})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Workaround"}),": Use ",(0,t.jsx)(n.code,{children:"const"}),". If some form of mutation is required, explicitly use an object with internal mutability."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"namespace"}),"s will not share their scope. In TypeScript, it is valid to refer to contextual items that a ",(0,t.jsx)(n.code,{children:"namespace"})," extends without qualifying them, and the compiler will add the qualifier. In Babel, there is no type-model, and it is impossible to dynamically change references to match the established type of the parent object."]}),"\n",(0,t.jsx)(n.p,{children:"Consider this code:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"namespace N {\n  export const V = 1;\n}\nnamespace N {\n  export const W = V;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"The TypeScript compiler compiles it to something like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"var N = {};\n(function(N) {\n  N.V = 1;\n})(N);\n(function(N) {\n  N.W = N.V;\n})(N);\n"})}),"\n",(0,t.jsx)(n.p,{children:"While Babel will transform it to something like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"var N;\n(function(_N) {\n  const V = (_N = 1);\n})(N || (N = {}));\n(function(_N) {\n  const W = V;\n})(N || (N = {}));\n"})}),"\n",(0,t.jsxs)(n.p,{children:["As Babel doesn't understand the type of ",(0,t.jsx)(n.code,{children:"N"}),", the reference to ",(0,t.jsx)(n.code,{children:"V"})," will be ",(0,t.jsx)(n.code,{children:"undefined"})," resulting in an error."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Workaround"}),": Explicitly refer to values not in the same namespace definition, even if they would be in the scope according to TypeScript. Examples:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"namespace N {\n  export const V = 1;\n}\nnamespace N {\n  export const W = N.V;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"namespace N {\n  export const V = 1;\n  export const W = V;\n}\n"})}),"\n"]}),"\n"]})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},38049:function(e,n,s){s.d(n,{Z:()=>r});var i=s("24246");s("27378");var t=s("90496");let l="tabItem_wHwb";function r(e){let{children:n,hidden:s,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.Z)(l,r),hidden:s,children:n})}},95181:function(e,n,s){s.d(n,{Z:()=>y});var i=s("24246"),t=s("27378"),l=s("90496"),r=s("85403"),o=s("3620"),c=s("77090"),a=s("76180"),d=s("23418"),h=s("19073");function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||t.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var x=s("3344");let j="tabList_J5MA",m="tabItem_l0OV";function b(e){let{className:n,block:s,selectedValue:t,selectValue:o,tabValues:c}=e,a=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),h=e=>{let n=e.currentTarget,s=c[a.indexOf(n)].value;s!==t&&(d(n),o(s))},p=e=>{let n=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{let s=a.indexOf(e.currentTarget)+1;n=a[s]??a[0];break}case"ArrowLeft":{let s=a.indexOf(e.currentTarget)-1;n=a[s]??a[a.length-1]}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":s},n),children:c.map(e=>{let{value:n,label:s,attributes:r}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>a.push(e),onKeyDown:p,onClick:h,...r,className:(0,l.Z)("tabs__item",m,r?.className,{"tabs__item--active":t===n}),children:s??n},n)})})}function f(e){let{lazy:n,children:s,selectedValue:r}=e,o=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,l.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function g(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:i}=e,l=function(e){let{values:n,children:s}=e;return(0,t.useMemo)(()=>{let e=n??p(s).map(e=>{let{props:{value:n,label:s,attributes:i,default:t}}=e;return{value:n,label:s,attributes:i,default:t}});return!function(e){let n=(0,d.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[r,x]=(0,t.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let i=s.find(e=>e.default)??s[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:n,tabValues:l})),[j,m]=function(e){let{queryString:n=!1,groupId:s}=e,i=(0,o.k6)(),l=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s}),r=(0,a._X)(l);return[r,(0,t.useCallback)(e=>{if(!l)return;let n=new URLSearchParams(i.location.search);n.set(l,e),i.replace({...i.location,search:n.toString()})},[l,i])]}({queryString:s,groupId:i}),[b,f]=function(e){var n;let{groupId:s}=e;let i=(n=s)?`docusaurus.tab.${n}`:null,[l,r]=(0,h.Nk)(i);return[l,(0,t.useCallback)(e=>{if(!!i)r.set(e)},[i,r])]}({groupId:i}),g=(()=>{let e=j??b;return u({value:e,tabValues:l})?e:null})();return(0,c.Z)(()=>{g&&x(g)},[g]),{selectedValue:r,selectValue:(0,t.useCallback)(e=>{if(!u({value:e,tabValues:l}))throw Error(`Can't select invalid tab value=${e}`);x(e),m(e),f(e)},[m,f,l]),tabValues:l}}(e);return(0,i.jsxs)("div",{className:(0,l.Z)("tabs-container",j),children:[(0,i.jsx)(b,{...n,...e}),(0,i.jsx)(f,{...n,...e})]})}function y(e){let n=(0,x.Z)();return(0,i.jsx)(g,{...e,children:p(e.children)},String(n))}},80980:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return r}});var i=s(27378);let t={},l=i.createContext(t);function r(e){let n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);