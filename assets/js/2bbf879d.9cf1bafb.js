"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["32976"],{38378:function(e,n,i){i.r(n),i.d(n,{default:function(){return g},frontMatter:function(){return c},metadata:function(){return r},assets:function(){return u},toc:function(){return h},contentTitle:function(){return d}});var r=JSON.parse('{"id":"configuration","title":"Configure Babel","description":"Babel can be configured! Many other tools have similar configs: ESLint (.eslintrc), Prettier (.prettierrc).","source":"@site/../docs/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/configuration.md","tags":[],"version":"current","frontMatter":{"id":"configuration","title":"Configure Babel"},"sidebar":"docs","previous":{"title":"Usage Guide","permalink":"/docs/usage"},"next":{"title":"Learn ES2015","permalink":"/docs/learn"}}'),s=i("24246"),t=i("80980"),o=i("38902"),l=i("60463"),a=i("60668");let c={id:"configuration",title:"Configure Babel"},d=void 0,u={},h=[{value:"What&#39;s your use case?",id:"whats-your-use-case",level:2},{value:"<code>babel.config.json</code>",id:"babelconfigjson",level:3},{value:"<code>.babelrc.json</code>",id:"babelrcjson",level:3},{value:"<code>package.json</code>",id:"packagejson",level:3},{value:"JavaScript configuration files",id:"javascript-configuration-files",level:3},{value:"Using the CLI (<code>@babel/cli</code>)",id:"using-the-cli-babelcli",level:2},{value:"Using the API (<code>@babel/core</code>)",id:"using-the-api-babelcore",level:2},{value:"Print effective configs",id:"print-effective-configs",level:2},{value:"How Babel merges config items",id:"how-babel-merges-config-items",level:3},{value:"Option (except plugin/preset) merging",id:"option-except-pluginpreset-merging",level:4},{value:"Plugin/Preset merging",id:"pluginpreset-merging",level:4}];function p(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Babel can be configured! Many other tools have similar configs: ESLint (",(0,s.jsx)(n.code,{children:".eslintrc"}),"), Prettier (",(0,s.jsx)(n.code,{children:".prettierrc"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:["All Babel API ",(0,s.jsx)(n.a,{href:"/docs/options",children:"options"})," are allowed. However, if the option requires JavaScript, you may want to use a JavaScript ",(0,s.jsx)(n.a,{href:"/docs/config-files",children:"configuration file"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"whats-your-use-case",children:"What's your use case?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You are using a monorepo?"}),"\n",(0,s.jsxs)(n.li,{children:["You want to compile ",(0,s.jsx)(n.code,{children:"node_modules"}),"?"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#babelconfigjson",children:(0,s.jsx)(n.code,{children:"babel.config.json"})})," is for you!"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You have a configuration that only applies to a single part of your project?"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#babelrcjson",children:(0,s.jsx)(n.code,{children:".babelrc.json"})})," is for you!"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Guy Fieri is your hero?"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["We recommend using the ",(0,s.jsx)(n.a,{href:"/docs/config-files#project-wide-configuration",children:(0,s.jsx)(n.code,{children:"babel.config.json"})})," format."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"babelconfigjson",children:(0,s.jsx)(n.code,{children:"babel.config.json"})}),"\n",(0,s.jsxs)(n.p,{children:["Create a file called ",(0,s.jsx)(n.code,{children:"babel.config.json"})," with the following content at the root of your project (where the ",(0,s.jsx)(n.code,{children:"package.json"})," is)."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "presets": [...],\n  "plugins": [...]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsxs)(n.a,{href:"/docs/config-files#project-wide-configuration",children:[(0,s.jsx)(n.code,{children:"babel.config.json"})," documentation"]})," to see more configuration options."]}),"\n",(0,s.jsx)(n.h3,{id:"babelrcjson",children:(0,s.jsx)(n.code,{children:".babelrc.json"})}),"\n",(0,s.jsxs)(n.p,{children:["Create a file called ",(0,s.jsx)(n.code,{children:".babelrc.json"})," with the following content in your project."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title=".babelrc.json"',children:'{\n  "presets": [...],\n  "plugins": [...]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"/docs/config-files#file-relative-configuration",children:".babelrc documentation"})," to see more configuration options."]}),"\n",(0,s.jsx)(n.h3,{id:"packagejson",children:(0,s.jsx)(n.code,{children:"package.json"})}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you can choose to specify your ",(0,s.jsx)(n.a,{href:"#babelrcjson",children:(0,s.jsx)(n.code,{children:".babelrc.json"})})," config from within ",(0,s.jsx)(n.code,{children:"package.json"})," using the ",(0,s.jsx)(n.code,{children:"babel"})," key like so:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "my-package",\n  "version": "1.0.0",\n  "babel": {\n    "presets": [ ... ],\n    "plugins": [ ... ],\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"javascript-configuration-files",children:"JavaScript configuration files"}),"\n",(0,s.jsxs)(n.p,{children:["You can also write ",(0,s.jsx)(n.code,{children:"babel.config.js"})," (",(0,s.jsx)(n.a,{href:"https://github.com/babel/babel/blob/main/babel.config.js",children:"like we're doing"}),"), and ",(0,s.jsx)(n.code,{children:".babelrc.js"})," files using JavaScript:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="babel.config.js"',children:"module.exports = function (api) {\n  api.cache(true);\n\n  const presets = [ ... ];\n  const plugins = [ ... ];\n\n  return {\n    presets,\n    plugins\n  };\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"You are allowed to access any Node.js APIs, for example a dynamic configuration based on the process environment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="babel.config.js"',children:'module.exports = function (api) {\n  api.cache(true);\n\n  const presets = [ ... ];\n  const plugins = [ ... ];\n\n  if (process.env["ENV"] === "prod") {\n    plugins.push(...);\n  }\n\n  return {\n    presets,\n    plugins\n  };\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can read more about JavaScript configuration files in the ",(0,s.jsx)(n.a,{href:"/docs/config-files",children:"dedicated documentation"})]}),"\n",(0,s.jsxs)(n.h2,{id:"using-the-cli-babelcli",children:["Using the CLI (",(0,s.jsx)(n.code,{children:"@babel/cli"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"babel --plugins @babel/plugin-transform-arrow-functions script.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"/docs/babel-cli",children:"babel-cli documentation"})," to see more configuration options."]}),"\n",(0,s.jsxs)(n.h2,{id:"using-the-api-babelcore",children:["Using the API (",(0,s.jsx)(n.code,{children:"@babel/core"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("@babel/core").transformSync("code", {\n  plugins: ["@babel/plugin-transform-arrow-functions"],\n});\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Check out the ",(0,s.jsx)(n.a,{href:"/docs/babel-core",children:"babel-core documentation"})," to see more configuration options."]}),"\n",(0,s.jsx)(n.h2,{id:"print-effective-configs",children:"Print effective configs"}),"\n",(0,s.jsx)(n.p,{children:"You can tell Babel to print effective configs on a given input path"}),"\n","\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(a.Z,{value:"shell",label:"Shell",default:!0,children:(0,s.jsx)(o.Z,{language:"bash",children:`
# *nix or WSL
BABEL_SHOW_CONFIG_FOR=./src/myComponent.jsx npm start
`})}),(0,s.jsx)(a.Z,{value:"powershell",label:"powershell",children:(0,s.jsx)(o.Z,{language:"powershell",children:`
$env:BABEL_SHOW_CONFIG_FOR = ".srcmyComponent.jsx"; npm start
`})})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"BABEL_SHOW_CONFIG_FOR"})," accepts both absolute and relative ",(0,s.jsx)(n.em,{children:"file"})," paths. If it is a relative path, it will be resolved from ",(0,s.jsx)(n.a,{href:"/docs/options#cwd",children:(0,s.jsx)(n.code,{children:"cwd"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Once Babel processes the input file specified by ",(0,s.jsx)(n.code,{children:"BABEL_SHOW_CONFIG_FOR"}),", Babel will print effective configs to the console. Here is an example output:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Babel configs on "/path/to/cwd/src/index.js" (ascending priority):\nconfig /path/to/cwd/babel.config.json\n{\n  "sourceType": "script",\n  "plugins": [\n    "@foo/babel-plugin-1"\n  ],\n  "extends": "./my-extended.js"\n}\n\nconfig /path/to/cwd/babel.config.json .env["test"]\n{\n  "plugins": [\n    [\n      "@foo/babel-plugin-3",\n      {\n        "noDocumentAll": true\n      },\n    ]\n  ]\n}\n\nconfig /path/to/cwd/babel.config.json .overrides[0]\n{\n  "test": "src/index.js",\n  "sourceMaps": true\n}\n\nconfig /path/to/cwd/.babelrc\n{}\n\nprogrammatic options from @babel/cli\n{\n  "sourceFileName": "./src/index.js",\n  "presets": [\n    "@babel/preset-env"\n  ],\n  "configFile": "./my-config.js",\n  "caller": {\n    "name": "@babel/cli"\n  },\n  "filename": "./src/index.js"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Babel will print effective config sources ordered by ascending priority. Using the example above, the priority is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"babel.config.json < .babelrc < programmatic options from @babel/cli\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In other words, ",(0,s.jsx)(n.code,{children:"babel.config.json"})," is overwritten by ",(0,s.jsx)(n.code,{children:".babelrc"}),", and ",(0,s.jsx)(n.code,{children:".babelrc"})," is overwritten by programmatic options."]}),"\n",(0,s.jsxs)(n.p,{children:["For each config source, Babel prints applicable config items (e.g. ",(0,s.jsx)(n.a,{href:"/docs/options#overrides",children:(0,s.jsx)(n.code,{children:"overrides"})})," and ",(0,s.jsx)(n.a,{href:"/docs/options#env",children:(0,s.jsx)(n.code,{children:"env"})}),") in the order of ascending priority. Generally each config sources has at least one config item -- the root content of configs. If you have configured ",(0,s.jsx)(n.code,{children:"overrides"})," or ",(0,s.jsx)(n.code,{children:"env"}),", Babel will not print them in the root, but will instead output a separate config item titled as ",(0,s.jsx)(n.code,{children:".overrides[index]"}),", where ",(0,s.jsx)(n.code,{children:"index"})," is the position of the item. This helps determine whether the item is effective on the input and which configs it will override."]}),"\n",(0,s.jsxs)(n.p,{children:["If your input is ignored by ",(0,s.jsx)(n.code,{children:"ignore"})," or ",(0,s.jsx)(n.code,{children:"only"}),", Babel will print that this file is ignored."]}),"\n",(0,s.jsx)(n.h3,{id:"how-babel-merges-config-items",children:"How Babel merges config items"}),"\n",(0,s.jsxs)(n.p,{children:["Babel's configuration merging is relatively straightforward. Options will overwrite existing options\nwhen they are present and their value is not ",(0,s.jsx)(n.code,{children:"undefined"}),". There are, however, a few special cases:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.code,{children:"assumptions"}),", ",(0,s.jsx)(n.code,{children:"parserOpts"})," and ",(0,s.jsx)(n.code,{children:"generatorOpts"}),", objects are merged, rather than replaced."]}),"\n",(0,s.jsxs)(n.li,{children:["For ",(0,s.jsx)(n.code,{children:"plugins"})," and ",(0,s.jsx)(n.code,{children:"presets"}),", they are replaced based on the identity of the plugin/preset object/function itself combined with the name of the entry."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"option-except-pluginpreset-merging",children:"Option (except plugin/preset) merging"}),"\n",(0,s.jsx)(n.p,{children:"As an example, consider a config with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'{\n  sourceType: "script",\n  assumptions: {\n    setClassFields: true,\n    iterableIsArray: false\n  },\n  env: {\n    test: {\n      sourceType: "module",\n      assumptions: {\n        iterableIsArray: true,\n      },\n    }\n  }\n};\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When ",(0,s.jsx)(n.code,{children:"NODE_ENV"})," is ",(0,s.jsx)(n.code,{children:"test"}),", the ",(0,s.jsx)(n.code,{children:"sourceType"})," option will be replaced and the ",(0,s.jsx)(n.code,{children:"assumptions"})," option will be merged. The effective config is:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'{\n  sourceType: "module", // sourceType: "script" is overwritten\n  assumptions: {\n    setClassFields: true,\n    iterableIsArray: true, // assumptions are merged by Object.assign\n  },\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"pluginpreset-merging",children:"Plugin/Preset merging"}),"\n",(0,s.jsx)(n.p,{children:"As an example, consider a config with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"plugins: [\n  './other',\n  ['./plug', { thing: true, field1: true }]\n],\noverrides: [{\n  plugins: [\n    ['./plug', { thing: false, field2: true }],\n  ]\n}]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"overrides"})," item will be merged on top of the top-level options. Importantly, the ",(0,s.jsx)(n.code,{children:"plugins"}),"\narray as a whole doesn't just replace the top-level one. The merging logic will see that ",(0,s.jsx)(n.code,{children:'"./plug"'}),"\nis the same plugin in both cases, and ",(0,s.jsx)(n.code,{children:"{ thing: false, field2: true }"})," will replace the original\noptions, resulting in a config as"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"plugins: [\n  './other',\n  ['./plug', { thing: false, field2: true }],\n],\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Since merging is based on identity + name, it is considered an error to use the same plugin with\nthe same name twice in the same ",(0,s.jsx)(n.code,{children:"plugins"}),"/",(0,s.jsx)(n.code,{children:"presets"})," array. For example"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'plugins: ["./plug", "./plug"];\n'})}),"\n",(0,s.jsxs)(n.p,{children:["is considered an error, because it's identical to ",(0,s.jsx)(n.code,{children:"plugins: ['./plug']"}),". Additionally, even"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'plugins: [["./plug", { one: true }], ["./plug", { two: true }]];\n'})}),"\n",(0,s.jsx)(n.p,{children:"is considered an error, because the second one would just always replace the first one."}),"\n",(0,s.jsxs)(n.p,{children:["If you actually ",(0,s.jsx)(n.em,{children:"do"})," want to instantiate two separate instances of a plugin, you must assign each one\na name to disambiguate them. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'plugins: [\n  ["./plug", { one: true }, "first-instance-name"],\n  ["./plug", { two: true }, "second-instance-name"],\n];\n'})}),"\n",(0,s.jsx)(n.p,{children:"because each instance has been given a unique name and thus a unique identity."})]})}function g(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},60668:function(e,n,i){i.d(n,{Z:function(){return t}});var r=i("24246");i("27378");var s=i("90496");function t(e){let{children:n,hidden:i,className:t}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.Z)("tabItem_wHwb",t),hidden:i,children:n})}},60463:function(e,n,i){i.d(n,{Z:function(){return x}});var r=i("24246"),s=i("27378"),t=i("90496"),o=i("26981"),l=i("3620"),a=i("142"),c=i("10697"),d=i("13340"),u=i("18493");function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||s.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){let{value:n,tabValues:i}=e;return i.some(e=>e.value===n)}var g=i("84192");function f(e){let{className:n,block:i,selectedValue:s,selectValue:l,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),u=e=>{let n=e.currentTarget,i=a[c.indexOf(n)].value;i!==s&&(d(n),l(i))},h=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let i=c.indexOf(e.currentTarget)+1;n=c[i]??c[0];break}case"ArrowLeft":{let i=c.indexOf(e.currentTarget)-1;n=c[i]??c[c.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":i},n),children:a.map(e=>{let{value:n,label:i,attributes:o}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:u,...o,className:(0,t.Z)("tabs__item","tabItem_l0OV",o?.className,{"tabs__item--active":s===n}),children:i??n},n)})})}function j(e){let{lazy:n,children:i,selectedValue:o}=e,l=(Array.isArray(i)?i:[i]).filter(Boolean);if(n){let e=l.find(e=>e.props.value===o);return e?(0,s.cloneElement)(e,{className:(0,t.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:l.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==o}))})}function b(e){let n=function(e){let{defaultValue:n,queryString:i=!1,groupId:r}=e,t=function(e){let{values:n,children:i}=e;return(0,s.useMemo)(()=>{let e=n??h(i).map(e=>{let{props:{value:n,label:i,attributes:r,default:s}}=e;return{value:n,label:i,attributes:r,default:s}});return!function(e){let n=(0,d.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}(e),[o,g]=(0,s.useState)(()=>(function(e){let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let r=i.find(e=>e.default)??i[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:t})),[f,j]=function(e){let{queryString:n=!1,groupId:i}=e,r=(0,l.k6)(),t=function(e){let{queryString:n=!1,groupId:i}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!i)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return i??null}({queryString:n,groupId:i});return[(0,c._X)(t),(0,s.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(r.location.search);n.set(t,e),r.replace({...r.location,search:n.toString()})},[t,r])]}({queryString:i,groupId:r}),[b,x]=function(e){let{groupId:n}=e,i=n?`docusaurus.tab.${n}`:null,[r,t]=(0,u.Nk)(i);return[r,(0,s.useCallback)(e=>{i&&t.set(e)},[i,t])]}({groupId:r}),m=(()=>{let e=f??b;return p({value:e,tabValues:t})?e:null})();return(0,a.Z)(()=>{m&&g(m)},[m]),{selectedValue:o,selectValue:(0,s.useCallback)(e=>{if(!p({value:e,tabValues:t}))throw Error(`Can't select invalid tab value=${e}`);g(e),j(e),x(e)},[j,x,t]),tabValues:t}}(e);return(0,r.jsxs)("div",{className:(0,t.Z)("tabs-container","tabList_J5MA"),children:[(0,r.jsx)(f,{...n,...e}),(0,r.jsx)(j,{...n,...e})]})}function x(e){let n=(0,g.Z)();return(0,r.jsx)(b,{...e,children:h(e.children)},String(n))}},80980:function(e,n,i){i.d(n,{Z:function(){return l},a:function(){return o}});var r=i(27378);let s={},t=r.createContext(s);function o(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);