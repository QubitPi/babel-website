"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["4144"],{41064:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return a},metadata:function(){return r},toc:function(){return c}});var r=n(70348),s=n(24246),o=n(80980);let a={layout:"post",title:"7.9.0 Released: Smaller preset-env output, Typescript 3.8 support and a new JSX transform",authors:"nicol\xf2",date:new Date("2020-03-20T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.9.0 Released"},i=void 0,l={authorsImageUrls:[void 0]},c=[];function d(e){let t={a:"a",code:"code",em:"em",p:"p",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["While preparing the Babel 8.0.0 ",(0,s.jsx)(t.a,{href:"https://github.com/babel/babel/issues/10746",children:"release"})," (in the next months), we just finished working on a new minor release which includes updates related to ",(0,s.jsx)(t.code,{children:"@babel/preset-env"}),", TypeScript 3.8, Flow, and JSX!"]}),"\n",(0,s.jsxs)(t.p,{children:["A few months ago, ",(0,s.jsx)(t.a,{href:"https://twitter.com/_developit",children:"Jason Miller"})," started working on ",(0,s.jsx)(t.a,{href:"https://github.com/babel/preset-modules",children:(0,s.jsx)(t.code,{children:"@babel/preset-modules"})}),": an experiment to greatly reduce bundle sizes when using the ",(0,s.jsxs)(t.a,{href:"https://css-tricks.com/differential-serving/",children:[(0,s.jsx)(t.code,{children:"module"}),"/",(0,s.jsx)(t.code,{children:"nomodule"})," pattern"]}),". We are excited to announce that its functionality has now been merged into ",(0,s.jsx)(t.code,{children:"@babel/preset-env"}),"! This means that its optimizations can be applied to all ",(0,s.jsx)(t.code,{children:"preset-env"})," targets values, without a separate preset."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsxs)(t.em,{children:["Note: These optimizations will be enabled by default in Babel 8. They can be manually enabled in Babel 7.9 by passing in the option ",(0,s.jsx)(t.code,{children:"{ bugfixes: true }"})," to ",(0,s.jsx)(t.code,{children:"preset-env"}),"."]})}),"\n",(0,s.jsxs)(t.p,{children:["This release also has full support for ",(0,s.jsx)(t.a,{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html",children:"TypeScript 3.8"}),", which introduced explicit type-only imports and exports (i.e. ",(0,s.jsx)(t.code,{children:"export type { foo }"}),"), and for ",(0,s.jsx)(t.a,{href:"https://github.com/facebook/flow/blob/master/Changelog.md#01201",children:"Flow 0.120"}),", which introduced the ",(0,s.jsx)(t.code,{children:"declare"})," modifier for class fields (i.e. ",(0,s.jsx)(t.code,{children:"class C { declare foo: string }"}),")."]}),"\n",(0,s.jsxs)(t.p,{children:["We also worked with the React team to provide a new ",(0,s.jsx)(t.a,{href:"https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md",children:"JSX transform"}),", which will make it possible for React and React-like libraries to further optimize the creation of JSX elements with the addition of the ",(0,s.jsx)(t.code,{children:"jsx"})," function vs. ",(0,s.jsx)(t.code,{children:"React.createElement"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Lastly, ",(0,s.jsx)(t.code,{children:"@babel/parser"})," now supports an additional ECMAScript proposal: ",(0,s.jsx)(t.a,{href:"https://github.com/tc39/proposal-record-tuple",children:"Record & Tuple"}),". Please note that this is only parser support, and the transforms are still being worked on."]}),"\n",(0,s.jsxs)(t.p,{children:["You can read the whole changelog ",(0,s.jsx)(t.a,{href:"https://github.com/babel/babel/releases/tag/v7.9.0",children:"on GitHub"}),"."]})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},80980:function(e,t,n){n.d(t,{Z:function(){return i},a:function(){return a}});var r=n(27378);let s={},o=r.createContext(s);function a(e){let t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}},70348:function(e){e.exports=JSON.parse('{"permalink":"/babel-website/blog/2020/03/16/7.9.0","source":"@site/blog/2020-03-16-7.9.0.md","title":"7.9.0 Released: Smaller preset-env output, Typescript 3.8 support and a new JSX transform","description":"While preparing the Babel 8.0.0 release (in the next months), we just finished working on a new minor release which includes updates related to @babel/preset-env, TypeScript 3.8, Flow, and JSX!","date":"2020-03-20T00:00:00.000Z","tags":[],"readingTime":8.095,"hasTruncateMarker":true,"authors":[{"name":"Nicol\xf2 Ribaudo","url":"https://twitter.com/NicoloRibaudo","key":"nicol\xf2","page":null}],"frontMatter":{"layout":"post","title":"7.9.0 Released: Smaller preset-env output, Typescript 3.8 support and a new JSX transform","authors":"nicol\xf2","date":"2020-03-20T00:00:00.000Z","categories":"announcements","share_text":"Babel 7.9.0 Released"},"unlisted":false,"prevItem":{"title":"7.10.0 Released: Class Fields in preset-env, \'#private in\' checks and better React tree-shaking","permalink":"/babel-website/blog/2020/05/25/7.10.0"},"nextItem":{"title":"7.8.0 Released: ECMAScript 2020, .mjs configuration files and @babel/cli improvements","permalink":"/babel-website/blog/2020/01/11/7.8.0"}}')}}]);