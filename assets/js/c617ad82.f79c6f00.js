"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8300],{35318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(27378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,d=c["".concat(s,".").concat(m)]||c[m]||h[m]||r;return n?a.createElement(d,l(l({ref:t},u),{},{components:n})):a.createElement(d,l({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},35985:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(25773),o=n(30808),r=(n(27378),n(35318)),l=["components"],i={layout:"post",title:"6.0.0 Released",author:"James Kyle",authorURL:"https://twitter.com/thejameskyle",date:new Date("2015-10-29T17:00:00.000Z"),categories:"announcements",share_text:"6.0.0"},s=void 0,p={permalink:"/babel-website/blog/2015/10/29/6.0.0",source:"@site/blog/2015-10-29-6.0.0.md",title:"6.0.0 Released",description:"NOTE: Not all integrations have been updated yet. This is a very disruptive major",date:"2015-10-29T17:00:00.000Z",formattedDate:"October 29, 2015",tags:[],readingTime:5.4,hasTruncateMarker:!0,authors:[{name:"James Kyle",url:"https://twitter.com/thejameskyle"}],frontMatter:{layout:"post",title:"6.0.0 Released",author:"James Kyle",authorURL:"https://twitter.com/thejameskyle",date:"2015-10-29T17:00:00.000Z",categories:"announcements",share_text:"6.0.0"},prevItem:{title:"Setting up Babel 6",permalink:"/babel-website/blog/2015/10/31/setting-up-babel-6"},nextItem:{title:"React on ES6+",permalink:"/babel-website/blog/2015/07/07/react-on-es6-plus"}},u={authorsImageUrls:[void 0]},c=[{value:"Modularization",id:"modularization",level:3},{value:"Opt-in Plugins",id:"opt-in-plugins",level:3},{value:"Plugin Presets",id:"plugin-presets",level:3},{value:"Performance Improvements",id:"performance-improvements",level:3},{value:"Plugin API",id:"plugin-api",level:3},{value:"New/Updated Proposals",id:"newupdated-proposals",level:3},{value:"In Closing",id:"in-closing",level:3}],h={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE:")," Not all integrations have been updated yet. This is a very disruptive major\nso please bear with us as we smooth out the edges.")),(0,r.kt)("p",null,"It\u2019s hard to believe it\u2019s been a year since the Babel project started, but there was a birthday cake, so it must be real!"),(0,r.kt)("blockquote",{class:"twitter-tweet",lang:"en"},(0,r.kt)("p",{lang:"en",dir:"ltr"},"I work with some super awesome people. Thank you ",(0,r.kt)("a",{href:"https://twitter.com/cpojer"},"@cpojer")," and Ovidiu! ",(0,r.kt)("a",{href:"https://t.co/l1NzyobiBz"},"pic.twitter.com/l1NzyobiBz")),"\u2014 Sebastian McKenzie (@sebmck) ",(0,r.kt)("a",{href:"https://twitter.com/sebmck/status/648495457623252992"},"September 28, 2015")),(0,r.kt)("script",{async:!0,src:"//platform.twitter.com/widgets.js",charset:"utf-8"}),(0,r.kt)("p",null,"A whole lot has happened over the last year. We\u2019ve travelled all over the world talking about Babel, and we\u2019ve met some really awesome people along the way."),(0,r.kt)("p",null,"Babel has spent the last year finding its place in the JavaScript community. In February we decided that Babel wasn\u2019t just going to be a ES6 transpiler. Instead, it needed to become a platform. A suite of tools designed to create the next generation of JavaScript tooling."),(0,r.kt)("p",null,"When we released Babel 5, it came with a new plugin API that allowed anyone to use the full power of Babel to create tools that plug directly into the transform process. In just a few short months this has blown up into an ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/search?q=babel-plugin"},"entire ecosystem of tools"),"."),(0,r.kt)("p",null,"Developers have built everything from debugging tools, framework optimizations, and minifiers to experimental new syntaxes and systems to enforce complex rules on their codebases. These extensions have proven to be both creative and extremely useful."),(0,r.kt)("p",null,"People have also built complex tooling on top of Babel internals, like ",(0,r.kt)("a",{parentName:"p",href:"http://documentation.js.org"},"documentationjs")," which uses Babel\u2019s Babylon parser to replace an existing tool with a much more intelligent version."),(0,r.kt)("p",null,"But we think we can go even further. Babel should be able to power minifiers, linters, formatters, syntax highlighters, code completion tools, type checkers, codemod tools, and every other tool to be using the same foundation to do their job better than ever before."),(0,r.kt)("p",null,"So today we\u2019re releasing Babel 6."),(0,r.kt)("p",null,"This is the most significant update we\u2019ve ever made and enables the project to truly become a platform for the community to build upon."),(0,r.kt)("h3",{id:"modularization"},"Modularization"),(0,r.kt)("p",null,"The biggest change you\u2019ll notice is that Babel has been completely restructured to be as modular as possible, and all of the transformers have been rewritten as plugins using the same API that is exposed to everyone."),(0,r.kt)("p",null,"All of the internals have been pulled out into separate packages as well, each defining a lightweight public API that can be used independently of everything else."),(0,r.kt)("p",null,"If there\u2019s something you want to build with some Babel internals, you can now just install the package and have full access to them. Inside the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/tree/development/packages"},"packages directory")," you\u2019ll find all existing packages and plugins."),(0,r.kt)("h3",{id:"opt-in-plugins"},"Opt-in Plugins"),(0,r.kt)("p",null,"Since Babel is focusing on being a platform for JavaScript tooling and not an ES2015 transpiler, we\u2019ve decided to make all of the plugins opt-in. This means when you install Babel it will no longer transpile your ES2015 code by default."),(0,r.kt)("p",null,"In order to drastically simplify the public API of Babel, each transformer is now completely independent. This means the \u2018blacklist\u2019, \u2018whitelist\u2019, \u2018optional\u2019, \u2018nonStandard\u2019, and \u2018modules\u2019 options have all been removed, but that doesn\u2019t mean you need to do more work to get Babel to transform your codebase."),(0,r.kt)("h3",{id:"plugin-presets"},"Plugin Presets"),(0,r.kt)("p",null,"Since specifying and maintaining dozens of transformers in a config file would be a lot of work, Babel 6 is introducing the concept of Plugin Presets which group together similar plugins for easy consumption."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Shell"',title:'"Shell"'},"$ npm install --save-dev babel-preset-es2015\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"{\n  \u201cpresets\u201d: [\u201ces2015\u201d]\n}\n")),(0,r.kt)("p",null,"The official presets included today are ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-preset-es2015")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-preset-react"),", but we expect there will be many more in the future."),(0,r.kt)("p",null,"We also added presets for stages such as ",(0,r.kt)("inlineCode",{parentName:"p"},"babel-preset-stage-0")," (used to be ",(0,r.kt)("inlineCode",{parentName:"p"},"stage: 0")," in ",(0,r.kt)("inlineCode",{parentName:"p"},".babelrc")," in babel 5.x)."),(0,r.kt)("h3",{id:"performance-improvements"},"Performance Improvements"),(0,r.kt)("p",null,"Performance continues to be one of the top priorities of Babel. Babel 5 changed the transformation and traversal pipeline dramatically to make way for some major performance improvements that have been implemented in Babel 6."),(0,r.kt)("p",null,"The traversal process is one of biggest chunks of time spent in the Babel pipeline. With any AST-based tool you want to make sure that you traverse the tree as little as possible to keep it fast. Plugins were designed around this so that they could be lightning fast while working with everything else."),(0,r.kt)("p",null,"Babel 6 implements a new optimization which merges all plugins together into a single traversal. It then manages the traversal process completely so plugins don\u2019t ever have to worry about doing so manually. As a developer you can simply focus on writing your transform, and Babel will handle the rest."),(0,r.kt)("h3",{id:"plugin-api"},"Plugin API"),(0,r.kt)("p",null,"We received a lot of feedback that the plugin API was confusing, so in Babel 6, it\u2019s a bit simpler. Note that this is a breaking change, but it should reduce confusion quite a bit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Babel 5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"export default function({ Plugin, types: t }) {\n  return new Plugin(\u2018ast-transform\u2019, {\n    visitor: { \u2026 }\n  });\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Babel 6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"export default function({ types: t }) {\n  return {\n    visitor: { \u2026 }\n  };\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Plugin Authors"),": When updating your plugins, please remember to bump your major versions since this makes Babel 5 and 6 incompatible. Semver is important!")),(0,r.kt)("h3",{id:"newupdated-proposals"},"New/Updated Proposals"),(0,r.kt)("p",null,"There are a couple of updated TC39 proposals that have come out. Babel 6 updates to the latest revisions of decorators, class properties, and others."),(0,r.kt)("h3",{id:"in-closing"},"In Closing"),(0,r.kt)("p",null,"This is a really exciting release for us."),(0,r.kt)("p",null,"Anyone who's ever been involved with an open source project knows that it's a ton of work, but at the end of the day it's incredibly gratifying to be able to contribute even the tiniest bit back to the community."),(0,r.kt)("p",null,"Sebastian has been up literally all night to finish all the last minute things needed to launch Babel 6 during his EmberCamp keynote. It's currently 1am for me in San Francisco and I'm writing this blog post as quickly as possible, listening to EDM music to stay awake."),(0,r.kt)("p",null,"I want to thank everyone who has ever helped out even the littlest bit with Babel. A huge shoutout to Logan Smyth (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/loganfsmyth"},"@loganfsmyth"),"), Henry Zhu (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hzoo"},"@hzoo"),"), Jesse McCarthy (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/jmm"},"@jmm"),"), and Denis Pushkarev (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/zloirock"},"@zloirock"),") for all their hard work managing issues and contributing to Babel."),(0,r.kt)("p",null,"We\u2019re excited to finally release Babel 6 to the world. As always, we\u2019re committed to pushing Babel to be the best tool it can be, so please keep the GitHub issues and pull requests coming!"))}m.isMDXComponent=!0}}]);