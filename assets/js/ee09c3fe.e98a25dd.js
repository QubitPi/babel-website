"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2537],{35318:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return b}});var n=a(27378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(a),c=r,b=u["".concat(o,".").concat(c)]||u[c]||h[c]||l;return a?n.createElement(b,p(p({ref:t},m),{},{components:a})):n.createElement(b,p({ref:t},m))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=c;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[u]="string"==typeof e?e:r,p[1]=i;for(var s=2;s<l;s++)p[s]=a[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},68537:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var n=a(25773),r=a(30808),l=(a(27378),a(35318)),p=["components"],i={layout:"post",title:"6.18.0 Released",author:"Henry Zhu",authorURL:"https://twitter.com/left_pad",date:new Date("2016-10-24T03:45:00.000Z"),categories:"announcements",share_text:"6.18.0"},o=void 0,s={permalink:"/babel-website/blog/2016/10/24/6.18.0",source:"@site/blog/2016-10-24-6.18.0.md",title:"6.18.0 Released",description:"More flow updates, and lots of fixes!",date:"2016-10-24T03:45:00.000Z",formattedDate:"October 24, 2016",tags:[],readingTime:6.415,hasTruncateMarker:!0,authors:[{name:"Henry Zhu",url:"https://twitter.com/left_pad"}],frontMatter:{layout:"post",title:"6.18.0 Released",author:"Henry Zhu",authorURL:"https://twitter.com/left_pad",date:"2016-10-24T03:45:00.000Z",categories:"announcements",share_text:"6.18.0"},prevItem:{title:"6.19.0 Released",permalink:"/babel-website/blog/2016/11/16/6.19.0"},nextItem:{title:"6.16.0 Released",permalink:"/babel-website/blog/2016/09/28/6.16.0"}},m={authorsImageUrls:[void 0]},u=[{value:"v6.18.0 Summary (2016-10-24)",id:"v6180-summary-2016-10-24",level:2},{value:"\ud83d\ude80 New Feature",id:"-new-feature",level:2},{value:"\ud83d\udc85 Polish",id:"-polish",level:2},{value:"\ud83d\udcdd Documentation",id:"-documentation",level:2},{value:"\ud83d\udc1b Bug Fixes",id:"-bug-fixes",level:2},{value:"\ud83c\udfe0 Internal",id:"-internal",level:2},{value:"\ud83c\udf89 First Merged Pull Request!",id:"-first-merged-pull-request",level:2},{value:"\ud83c\udf0f Committers: 17",id:"-committers-17",level:2}],h={toc:u},c="wrapper";function b(e){var t=e.components,a=(0,r.Z)(e,p);return(0,l.kt)(c,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"More flow updates, and lots of fixes!"),(0,l.kt)("p",null,"We've added 4 new collaborators to Babel since the last release!"),(0,l.kt)("p",null,"All of the hard work goes to them and our new contributors!"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Moti Zilberman: \ud83d\udc19 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/motiz88"},"@motiz88"),", \ud83d\udc26 ",(0,l.kt)("a",{parentName:"li",href:"https://twitter.com/motiz88"},"@motiz88")),(0,l.kt)("li",{parentName:"ul"},"Dan Harper: \ud83d\udc19 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/danharper"},"@danharper"),", \ud83d\udc26 ",(0,l.kt)("a",{parentName:"li",href:"https://twitter.com/DanHarper7"},"@DanHarper7")),(0,l.kt)("li",{parentName:"ul"},"Kai Cataldo: \ud83d\udc19 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kaicataldo"},"@kaicataldo"),", \ud83d\udc26 ",(0,l.kt)("a",{parentName:"li",href:"https://twitter.com/kai_cataldo"},"@kai_cataldo")),(0,l.kt)("li",{parentName:"ul"},"Andrew Levine: \ud83d\udc19 ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/DrewML"},"@DrewML"),", \ud83d\udc26 ",(0,l.kt)("a",{parentName:"li",href:"https://twitter.com/drewml"},"@drewml"))),(0,l.kt)("p",null,"They've been helping keep this project afloat with ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/loganfsmyth"},"@loganfsmyth"),", ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danez"},"@danez"),", and me!"),(0,l.kt)("h2",{id:"v6180-summary-2016-10-24"},"v6.18.0 Summary (2016-10-24)"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Again if you haven't checked recently, we've moved back to ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/issues"},"Github Issues"),"! This is all thanks to ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danez"},"@danez"))),(0,l.kt)("h2",{id:"-new-feature"},"\ud83d\ude80 New Feature"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4697"},"#4697")," Add variance node type and generate property variance annotations. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/samwgoldman"},"@samwgoldman"),")"),(0,l.kt)("p",null,"Check out the ",(0,l.kt)("a",{parentName:"p",href:"https://flowtype.org/blog/2016/10/04/Property-Variance.html"},"blog post")," and ",(0,l.kt)("a",{parentName:"p",href:"https://flowtype.org/docs/variance.html"},"flow docs")," for more info:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"type T = { +p: T };\ninterface T { -p: T };\ndeclare class T { +[k:K]: V };\nclass T { -[k:K]: V };\nclass C2 { +p: T = e };\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4746"},"#4746")," Support ",(0,l.kt)("inlineCode",{parentName:"p"},"ObjectExpression")," in static path evaluation. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("p",null,"Useful for ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babili"},"babel/babili")," and other plugins."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// in\n{['a' + 'b']: 10 * 20, 'z': [1, 2, 3]}\n// out\n{ab: 200, z: [1, 2, 3]}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4699"},"#4699")," ",(0,l.kt)("inlineCode",{parentName:"p"},"import()"),": Initial support for ",(0,l.kt)("inlineCode",{parentName:"p"},"dynamic-import"),". (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kesne"},"@kesne"),")"),(0,l.kt)("p",null,"Parser support was added in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babylon/releases/tag/v6.12.0"},"babel/babylon#v6.12.0"),"."),(0,l.kt)("p",null,"Just the plugin to enable it in babel."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// install\n$ npm install babel-plugin-syntax-dynamic-import --save-dev\n")),(0,l.kt)("p",null,"or use the new ",(0,l.kt)("inlineCode",{parentName:"p"},"parserOpts")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// .babelrc\n{\n  "parserOpts": {\n    "plugins": [\'dynamicImport\']\n  }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4655"},"#4655")," Add ",(0,l.kt)("inlineCode",{parentName:"p"},"useBuiltIns")," option to helper-builder-react-jsx. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/existentialism"},"@existentialism"),")"),(0,l.kt)("p",null,"Previously we added a ",(0,l.kt)("inlineCode",{parentName:"p"},"useBuiltIns")," for object-rest-spread so that it use the native/built in version if you use a polyfill or have it supported natively."),(0,l.kt)("p",null,"This change just uses the same option from the plugin to be applied with spread inside of jsx."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// in\nvar div = <Component {...props} foo="bar" />\n// out\nvar div = React.createElement(Component, Object.assign({}, props, { foo: "bar" }));\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4724"},"#4724")," Add ",(0,l.kt)("inlineCode",{parentName:"p"},"EmptyTypeAnnotation"),". (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/samwgoldman"},"@samwgoldman"),")"),(0,l.kt)("p",null,"Added in flow ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/facebook/flow/commit/c603505583993aa953904005f91c350f4b65d6bd"},"here")," and in babylon ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babylon/pull/171"},"here"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"function f<T>(x: empty): T {\n  return x;\n}\nf(); // nothing to pass...\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4758"},"#4758")," Make getBinding ignore labels; add Scope#getLabel, Scope#hasLabel, Scope#registerLabel. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kangax"},"@kangax"),")"),(0,l.kt)("p",null,"Track ",(0,l.kt)("inlineCode",{parentName:"p"},"LabeledStatement")," separately (not part of bindings)."),(0,l.kt)("h2",{id:"-polish"},"\ud83d\udc85 Polish"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4690"},"#4690")," Consolidate contiguous var declarations in destructuring transform. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// in\nconst [a, b] = [1, 2];\n// out\nvar a = 1,\n    b = 2;\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4685"},"#4685")," Better error messaging when preset options are given without a corresponding preset. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kaicataldo"},"@kaicataldo"),")"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"We've had a few reports of users not wrapping a preset in ",(0,l.kt)("inlineCode",{parentName:"p"},"[]")," when passing in options so we added an extra error message for this.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// incorrect, and current gives a unexpected error message\n{\n  "presets": [\n    "preset",\n    { "presetOptions": \'hi\' } // gets parsed as another preset instead of being part of the "preset"\n  ]\n}\n// correct\n{\n  "presets": [\n    ["preset",\n      {\n        "presetOptions": \'hi\'\n      }\n    ]\n  ]\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'ReferenceError: [BABEL] /test.js: Unknown option: base.loose2. Check out http://babeljs.io/docs/usage/options/ for more information about options.\n\nA common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:\n\nInvalid:\n  `{ presets: [{option: value}] }`\nValid:\n  `{ presets: [["presetName", {option: value}]] }`\n\nFor more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options.\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4646"},"#4646")," Change babel-generator to output ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")," instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"bool")," for the ",(0,l.kt)("inlineCode",{parentName:"p"},"BooleanTypeAnnotation")," AST node. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/existentialism"},"@existentialism"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"var a: Promise<boolean>[];\n// instead of\nvar a: Promise<bool>[];\n")),(0,l.kt)("h2",{id:"-documentation"},"\ud83d\udcdd Documentation"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4653"},"#4653")," Tweak license for GitHub display. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/existentialism"},"@existentialism"),")"),(0,l.kt)("p",null,"So that our MIT License ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/blog/2252-license-now-displayed-on-repository-overview"},"shows up"),"."),(0,l.kt)("h2",{id:"-bug-fixes"},"\ud83d\udc1b Bug Fixes"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4765"},"#4765")," Don't treat ",(0,l.kt)("inlineCode",{parentName:"p"},"JSXIdentifier")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"JSXMemberExpression")," as HTML tag. Closes ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/issues/4027"},"#4027"),". (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/DrewML"},"@DrewML"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'// transform-react-inline-elements\n// issue with imported components that were JSXMemberExpression\nimport { form } from "./export";\n\nfunction ParentComponent() {\n  return <form.TestComponent />;\n}\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4763"},"#4763")," Handle remapping of JSXIdentifier to MemberExpression in CommonJS transform. Closes ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/issues/3728"},"#3728"),". (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/DrewML"},"@DrewML"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'// transform-react-inline-elements\nimport { Modal } from "react-bootstrap";\nexport default CustomModal = () => <Modal.Header>foobar</Modal.Header>;\n')),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4736"},"#4736")," Fix replacing for-of if inside label. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danez"},"@danez"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"if ( true ) {\n  loop: for (let ch of []) {}\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4502"},"#4502")," Make special case for class property initializers in ",(0,l.kt)("inlineCode",{parentName:"p"},"shadow-functions"),". (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"class A {\n  prop1 = () => this;\n  static prop2 = () => this;\n  prop3 = () => arguments;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4719"},"#4719")," Fixed incorrect compilation of async iterator methods. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/Jamesernator"},"@Jamesernator"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// in\nclass C {\n  async *g() { await 1; }\n}\n// out\nclass C {\n  g() { // was incorrectly outputting the method with a generator still `*g(){`\n    return _asyncGenerator.wrap(function* () {\n      yield _asyncGenerator.await(1);\n    })();\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4690"},"#4690")," Consolidate contiguous var declarations in destructuring transform. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// was wrapping variables in an IIFE incorrectly\nfor ( let i = 0, { length } = list; i < length; i++ ) {\n    console.log( i + ': ' + list[i] )\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4666"},"#4666")," Fix error when constructor default arg refers to self or own static property. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danharper"},"@danharper"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// was producing invalid code\nclass Ref {\n  static nextId = 0\n  constructor(id = ++Ref.nextId, n = id) {\n    this.id = n\n  }\n}\n\nassert.equal(1, new Ref().id)\nassert.equal(2, new Ref().id)\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4674"},"#4674")," Handle side effects correctly in rest params index expressions (#4348). (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"function first(...values) {\n    let index = 0;\n    return values[index++]; // ++ was happening twice\n}\n\nconsole.log(first(1, 2));\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4669"},"#4669")," Fix block scoping transform for declarations in labeled statements. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"let x = 10;\nif (1)\n{\n    ca: let x = 20;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4672"},"#4672")," Avoid repeating impure (template) literals when desugaring **= (#4403). (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"a[`${b++}`] **= 1;\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4642"},"#4642")," Exclude super from being assign to ref variable. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danez"},"@danez"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"foo = {\n  bar() {\n    return super.baz **= 12;\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4670"},"#4670")," Retain return types on ObjectMethods in transform-es2015-shorthand-properties. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danharper"},"@danharper"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// @flow\nvar obj = {\n  method(a: string): number {\n    return 5 + 5;\n  }\n};\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4668"},"#4668")," Retain method return types on transform-es2015-classes (Closes ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/issues/4665"},"#4665"),"). (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danharper"},"@danharper"),")"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"// @flow\nclass C {\n  m(x: number): string {\n    return 'a';\n  }\n}\n")),(0,l.kt)("h2",{id:"-internal"},"\ud83c\udfe0 Internal"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4725"},"#4725")," Remove babel-doctor from babel-cli. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/kaicataldo"},"@kaicataldo"),")"),(0,l.kt)("p",null,"It's a one-time use tool (helpful after the initial release when upgrading from v5 to v6) that doesn't need to be a part of ",(0,l.kt)("inlineCode",{parentName:"p"},"babel-cli"),". We'll publish it as a standalone package it someone asks for it."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4764"},"#4764")," Add TEST_DEBUG env var option for test.sh, to enable node 6 debugger. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/DrewML"},"@DrewML"),")"),(0,l.kt)("p",null,"Will be useful for contributors: ",(0,l.kt)("inlineCode",{parentName:"p"},"TEST_DEBUG=true make test")," to run ",(0,l.kt)("inlineCode",{parentName:"p"},"node --inspect")," on node v6+."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4735"},"#4735")," Automatically generate missing expected.js fixtures. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/motiz88"},"@motiz88"),")"),(0,l.kt)("p",null,"Also amazing for contributors: if you create an ",(0,l.kt)("inlineCode",{parentName:"p"},"actual.js")," test file without the ",(0,l.kt)("inlineCode",{parentName:"p"},"expected.js")," it will generate it for you (like snapshot tests but with babel output)."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4734"},"#4734"),' Change usage of "suite"/"test" in unit-tests to "describe"/"it". (',(0,l.kt)("a",{parentName:"p",href:"https://github.com/DrewML"},"@DrewML"),")"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4564"},"#4564")," Enable babel for tests. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/danez"},"@danez"),")"),(0,l.kt)("p",null,"The non-fixture tests finally are also transpiled as well!"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4732"},"#4732")," Run ESLint on test files, and fix lint errors in test files.. (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/DrewML"},"@DrewML"),")"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/4680"},"#4680")," Update: Eslint to 3.0 and update CI builds (Closes ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/issues/4638"},"#4638"),"). (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gyandeeps"},"@gyandeeps"),")"),(0,l.kt)("p",null,"Allows us to use the latest version of eslint which drops support of node < 4 by only running lint on the lastest node which should save CI time."),(0,l.kt)("h2",{id:"-first-merged-pull-request"},"\ud83c\udf89 First Merged Pull Request!"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Andrew Levine (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/DrewML"},"DrewML"),")"),(0,l.kt)("li",{parentName:"ul"},"Eric Rozell (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/rozele"},"rozele"),")"),(0,l.kt)("li",{parentName:"ul"},"Gyandeep Singh (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/gyandeeps"},"gyandeeps"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Jamesernator"},"Jamesernator")),(0,l.kt)("li",{parentName:"ul"},"Jordan Gensler (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kesne"},"kesne"),")"),(0,l.kt)("li",{parentName:"ul"},"Nazim Hajidin (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/nhajidin"},"nhajidin"),")"),(0,l.kt)("li",{parentName:"ul"},"Simen Bekkhus (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/SimenB"},"SimenB"),")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/sugargreenbean"},"sugargreenbean"))),(0,l.kt)("h2",{id:"-committers-17"},"\ud83c\udf0f Committers: 17"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Brian Ng (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/existentialism"},"existentialism"),")"),(0,l.kt)("li",{parentName:"ul"},"Dan Harper (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/danharper"},"danharper"),")"),(0,l.kt)("li",{parentName:"ul"},"Daniel Tschinder (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/danez"},"danez"),")"),(0,l.kt)("li",{parentName:"ul"},"Greenkeeper (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/greenkeeperio-bot"},"greenkeeperio-bot"),")"),(0,l.kt)("li",{parentName:"ul"},"Henry Zhu (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/hzoo"},"hzoo"),")"),(0,l.kt)("li",{parentName:"ul"},"Juriy Zaytsev (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kangax"},"kangax"),")"),(0,l.kt)("li",{parentName:"ul"},"Kai Cataldo (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/kaicataldo"},"kaicataldo"),")"),(0,l.kt)("li",{parentName:"ul"},"Moti Zilberman (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/motiz88"},"motiz88"),")"),(0,l.kt)("li",{parentName:"ul"},"Sam Goldman (",(0,l.kt)("a",{parentName:"li",href:"https://github.com/samwgoldman"},"samwgoldman"),")")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"Check out ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/releases/tag/v6.18.0"},"Github")," for the whole changelog!"))}b.isMDXComponent=!0}}]);