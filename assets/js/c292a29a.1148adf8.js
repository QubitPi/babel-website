"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["5059"],{87942:function(e,n,s){s.r(n),s.d(n,{default:()=>u,frontMatter:()=>a,metadata:()=>i,assets:()=>d,toc:()=>p,contentTitle:()=>c});var i=JSON.parse('{"id":"babel-preset-typescript","title":"@babel/preset-typescript","description":"This preset is recommended if you use TypeScript, a typed superset of JavaScript. It includes the following plugins:","source":"@site/../docs/preset-typescript.md","sourceDirName":".","slug":"/babel-preset-typescript","permalink":"/docs/babel-preset-typescript","draft":false,"unlisted":false,"editUrl":"https://github.com/babel/website/edit/main/docs/../docs/preset-typescript.md","tags":[],"version":"current","frontMatter":{"id":"babel-preset-typescript","title":"@babel/preset-typescript"},"sidebar":"docs","previous":{"title":"transform-react-jsx-development","permalink":"/docs/babel-plugin-transform-react-jsx-development"},"next":{"title":"transform-typescript","permalink":"/docs/babel-plugin-transform-typescript"}}'),l=s("85893"),t=s("50065"),r=s("58168"),o=s("97645");let a={id:"babel-preset-typescript",title:"@babel/preset-typescript"},c=void 0,d={},p=[{value:"Example",id:"example",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"With a configuration file (Recommended)",id:"with-a-configuration-file-recommended",level:3},{value:"Via CLI",id:"via-cli",level:3},{value:"Via Node API",id:"via-node-api",level:3},{value:"Options",id:"options",level:2},{value:"<code>isTSX</code>",id:"istsx",level:3},{value:"<code>jsxPragma</code>",id:"jsxpragma",level:3},{value:"<code>jsxPragmaFrag</code>",id:"jsxpragmafrag",level:3},{value:"<code>allExtensions</code>",id:"allextensions",level:3},{value:"<code>allowNamespaces</code>",id:"allownamespaces",level:3},{value:"<code>allowDeclareFields</code>",id:"allowdeclarefields",level:3},{value:"<code>disallowAmbiguousJSXLike</code>",id:"disallowambiguousjsxlike",level:3},{value:"<code>ignoreExtensions</code>",id:"ignoreextensions",level:3},{value:"<code>onlyRemoveTypeImports</code>",id:"onlyremovetypeimports",level:3},{value:"<code>optimizeConstEnums</code>",id:"optimizeconstenums",level:3},{value:"<code>rewriteImportExtensions</code>",id:"rewriteimportextensions",level:3}];function h(e){let n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["This preset is recommended if you use ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html",children:"TypeScript"}),", a typed superset of JavaScript. It includes the following plugins:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"/docs/babel-plugin-transform-typescript",children:"@babel/plugin-transform-typescript"})}),"\n"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["You will need to specify ",(0,l.jsx)(n.code,{children:'--extensions ".ts"'})," for ",(0,l.jsx)(n.code,{children:"@babel/cli"})," & ",(0,l.jsx)(n.code,{children:"@babel/node"})," cli's to handle ",(0,l.jsx)(n.code,{children:".ts"})," files."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"In"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const x: number = 0;\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Out"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:"const x = 0;\n"})}),"\n",(0,l.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,l.jsx)(o.Z,{value:"npm",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"npm install --save-dev @babel/preset-typescript\n"})})}),(0,l.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"yarn add --dev @babel/preset-typescript\n"})})}),(0,l.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"pnpm add --save-dev @babel/preset-typescript\n"})})})]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.h3,{id:"with-a-configuration-file-recommended",children:"With a configuration file (Recommended)"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "presets": ["@babel/preset-typescript"]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"via-cli",children:"Via CLI"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-sh",metastring:'title="Shell"',children:"babel --presets @babel/preset-typescript script.ts\n"})}),"\n",(0,l.jsx)(n.h3,{id:"via-node-api",children:"Via Node API"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",metastring:'title="JavaScript"',children:'require("@babel/core").transformSync("code", {\n  presets: ["@babel/preset-typescript"],\n  filename: \'script.ts\',\n});\n'})}),"\n",(0,l.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,l.jsx)(n.h3,{id:"istsx",children:(0,l.jsx)(n.code,{children:"isTSX"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Forcibly enables ",(0,l.jsx)(n.code,{children:"jsx"})," parsing. Otherwise angle brackets will be treated as typescript's legacy type assertion ",(0,l.jsx)(n.code,{children:"var foo = <string>bar;"}),". Also, ",(0,l.jsx)(n.code,{children:"isTSX: true"})," requires ",(0,l.jsx)(n.code,{children:"allExtensions: true"}),"."]}),"\n",(0,l.jsx)(n.h3,{id:"jsxpragma",children:(0,l.jsx)(n.code,{children:"jsxPragma"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"string"}),", defaults to ",(0,l.jsx)(n.code,{children:"React"})]}),"\n",(0,l.jsx)(n.p,{children:"Replace the function used when compiling JSX expressions. This is so that we know that the import is not a type import, and should not be removed."}),"\n",(0,l.jsx)(n.h3,{id:"jsxpragmafrag",children:(0,l.jsx)(n.code,{children:"jsxPragmaFrag"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"string"}),", defaults to ",(0,l.jsx)(n.code,{children:"React.Fragment"})]}),"\n",(0,l.jsx)(n.p,{children:"Replace the function used when compiling JSX fragment expressions. This is so that we know that the import is not a type import, and should not be removed."}),"\n",(0,l.jsx)(n.h3,{id:"allextensions",children:(0,l.jsx)(n.code,{children:"allExtensions"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Indicates that every file should be parsed as TS, TSX, or as TS without JSX ambiguities (depending on the ",(0,l.jsx)(n.code,{children:"isTSX"})," and ",(0,l.jsx)(n.code,{children:"disallowAmbiguousJSXLike"})," options)."]}),"\n",(0,l.jsx)(n.h3,{id:"allownamespaces",children:(0,l.jsx)(n.code,{children:"allowNamespaces"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", uses the default set by ",(0,l.jsx)(n.a,{href:"https://babeljs.io/docs/en/babel-plugin-transform-typescript#allownamespaces",children:(0,l.jsx)(n.code,{children:"@babel/plugin-transform-typescript"})}),"."]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.6.0"})]}),"\n",(0,l.jsx)(n.p,{children:"Enables compilation of TypeScript namespaces."}),"\n",(0,l.jsx)(n.h3,{id:"allowdeclarefields",children:(0,l.jsx)(n.code,{children:"allowDeclareFields"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.7.0"})]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"NOTE: This will be enabled by default in Babel 8"}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When enabled, type-only class fields are only removed if they are prefixed with the ",(0,l.jsx)(n.code,{children:"declare"})," modifier:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"class A {\n  declare foo: string; // Removed\n  bar: string; // Initialized to undefined\n  prop?: string; // Initialized to undefined\n  prop1!: string // Initialized to undefined\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"disallowambiguousjsxlike",children:(0,l.jsx)(n.code,{children:"disallowAmbiguousJSXLike"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"true"})," for ",(0,l.jsx)(n.code,{children:".mts"})," and ",(0,l.jsx)(n.code,{children:".cts"})," files and to ",(0,l.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.16.0"})]}),"\n",(0,l.jsxs)(n.p,{children:["Even when JSX parsing is not enabled, this option disallows using syntax that would be ambiguous with JSX (",(0,l.jsx)(n.code,{children:"<X> y"})," type assertions and ",(0,l.jsx)(n.code,{children:"<X>() => {}"})," type arguments). It matches the ",(0,l.jsx)(n.code,{children:"tsc"})," behavior when parsing ",(0,l.jsx)(n.code,{children:".mts"})," and ",(0,l.jsx)(n.code,{children:".mjs"})," files."]}),"\n",(0,l.jsx)(n.h3,{id:"ignoreextensions",children:(0,l.jsx)(n.code,{children:"ignoreExtensions"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.21.4"})]}),"\n",(0,l.jsxs)(n.p,{children:["When it is set to ",(0,l.jsx)(n.code,{children:"false"}),", Babel will automatically provide required plugins for ",(0,l.jsx)(n.code,{children:"*.ts"}),", ",(0,l.jsx)(n.code,{children:"*.tsx"}),", ",(0,l.jsx)(n.code,{children:"*.mts"})," and ",(0,l.jsx)(n.code,{children:"*.cts"})," files."]}),"\n",(0,l.jsxs)(n.p,{children:["When it is set to ",(0,l.jsx)(n.code,{children:"true"}),", Babel will provide a general TS plugin. If you want to transpile source as if it were ",(0,l.jsx)(n.code,{children:"*.tsx"}),", enable the ",(0,l.jsx)(n.code,{children:"@babel/preset-react"})," preset and this plugin should work with the JSX transform seamlessly. For example,"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",metastring:'title="babel.config.json"',children:'{\n  "presets": ["@babel/preset-react"],\n  "overrides": [{\n    "test": "*.vue",\n    "presets": [\n      ["@babel/preset-typescript"], { "ignoreExtensions": true }\n    ]\n  }]\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"onlyremovetypeimports",children:(0,l.jsx)(n.code,{children:"onlyRemoveTypeImports"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.9.0"})]}),"\n",(0,l.jsxs)(n.p,{children:["When set to ",(0,l.jsx)(n.code,{children:"true"}),", the transform will only remove ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html#type-only-imports-exports",children:"type-only imports"})," (introduced in TypeScript 3.8). This should only be used if you are using TypeScript >= 3.8."]}),"\n",(0,l.jsx)(n.h3,{id:"optimizeconstenums",children:(0,l.jsx)(n.code,{children:"optimizeConstEnums"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.15.0"})]}),"\n",(0,l.jsxs)(n.p,{children:["When set to ",(0,l.jsx)(n.code,{children:"true"}),", Babel will inline enum values rather than using the usual ",(0,l.jsx)(n.code,{children:"enum"})," output:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'// Input\nconst enum Animals {\n  Fish\n}\nconsole.log(Animals.Fish);\n\n// Default output\nvar Animals;\n\n(function (Animals) {\n  Animals[Animals["Fish"] = 0] = "Fish";\n})(Animals || (Animals = {}));\n\nconsole.log(Animals.Fish);\n\n// `optimizeConstEnums` output\nconsole.log(0);\n'})}),"\n",(0,l.jsxs)(n.p,{children:["This option differs from TypeScript's ",(0,l.jsx)(n.code,{children:"--isolatedModules"})," behavior, which ignores the ",(0,l.jsx)(n.code,{children:"const"})," modifier and compiles them as normal enums, and aligns Babel's behavior with TypeScript's default behavior."]}),"\n",(0,l.jsxs)(n.p,{children:["However, when ",(0,l.jsx)(n.em,{children:"exporting"})," a ",(0,l.jsx)(n.code,{children:"const enum"})," Babel will compile it to a plain object literal so that it doesn't need to rely on cross-file analysis when compiling it:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"// Input\nexport const enum Animals {\n  Fish,\n}\n\n// `optimizeConstEnums` output\nexport var Animals = {\n  Fish: 0,\n};\n"})}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["You can read more about configuring preset options ",(0,l.jsx)(n.a,{href:"https://babeljs.io/docs/en/presets#preset-options",children:"here"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"rewriteimportextensions",children:(0,l.jsx)(n.code,{children:"rewriteImportExtensions"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"boolean"}),", defaults to ",(0,l.jsx)(n.code,{children:"false"})]}),"\n",(0,l.jsxs)(n.p,{children:["Added in: ",(0,l.jsx)(n.code,{children:"v7.23.0"})]}),"\n",(0,l.jsxs)(n.p,{children:["When set to ",(0,l.jsx)(n.code,{children:"true"}),", Babel will rewrite ",(0,l.jsx)(n.code,{children:".ts"}),"/",(0,l.jsx)(n.code,{children:".mts"}),"/",(0,l.jsx)(n.code,{children:".cts"})," extensions in import declarations to ",(0,l.jsx)(n.code,{children:".js"}),"/",(0,l.jsx)(n.code,{children:".mjs"}),"/",(0,l.jsx)(n.code,{children:".cjs"}),". This options mirrors TypeScripts's ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig/#rewriteRelativeImportExtensions",children:(0,l.jsx)(n.code,{children:"rewriteRelativeImportExtensions"})})," option."]}),"\n",(0,l.jsxs)(n.p,{children:["This option, when used together with TypeScript's ",(0,l.jsx)(n.a,{href:"https://www.typescriptlang.org/tsconfig#allowImportingTsExtensions",children:(0,l.jsx)(n.code,{children:"allowImportingTsExtension"})})," option, allows to write complete relative specifiers in import declarations while using the same extension used by the source files."]}),"\n",(0,l.jsxs)(n.p,{children:["As an example, given this project structure (where ",(0,l.jsx)(n.code,{children:"src"})," contains the source files, and ",(0,l.jsx)(n.code,{children:"dist"})," the compiled files):"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:".\n\u251C\u2500\u2500 src\n\u2502   \u251C\u2500\u2500 main.ts\n\u2502   \u2514\u2500\u2500 dep.ts\n\u251C\u2500\u2500 dist\n\u2502   \u251C\u2500\u2500 main.js\n\u2502   \u2514\u2500\u2500 dep.js\n\u251C\u2500\u2500 babel.config.json\n\u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,l.jsx)(n.p,{children:"and with the following configuration files:"}),"\n",(0,l.jsxs)("table",{children:[(0,l.jsxs)("tr",{children:[(0,l.jsx)("th",{children:"babel.config.json"}),(0,l.jsx)("th",{children:"tsconfig.json"})]}),(0,l.jsxs)("tr",{children:[(0,l.jsx)("td",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "presets": [\n    ["@babel/preset-typescript", {\n      "rewriteImportExtensions": true\n    }]\n  ]\n}\n'})})}),(0,l.jsx)("td",{children:(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "lib": ["esnext"],\n    "noEmit": true,\n    "isolatedModules": true,\n    "moduleResolution": "nodenext",\n    "allowImportingTsExtensions": true\n  }\n}\n\n'})})})]})]}),"\n",(0,l.jsxs)(n.p,{children:["you will be able to write ",(0,l.jsx)(n.code,{children:'import x from "./dep.ts"'})," in ",(0,l.jsx)(n.code,{children:"main.ts"}),", and Babel will transform it to ",(0,l.jsx)(n.code,{children:'import x from "./dep.js"'})," when compiling ",(0,l.jsx)(n.code,{children:"main.ts"})," to ",(0,l.jsx)(n.code,{children:"main.js"}),"."]})]})}function u(e={}){let{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},97645:function(e,n,s){s.d(n,{Z:()=>t});var i=s("85893");s("67294");var l=s("90496");function t(e){let{children:n,hidden:s,className:t}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,l.Z)("tabItem_Ymn6",t),hidden:s,children:n})}},58168:function(e,n,s){s.d(n,{Z:()=>b});var i=s("85893"),l=s("67294"),t=s("90496"),r=s("34718"),o=s("16550"),a=s("8714"),c=s("89207"),d=s("69413"),p=s("54510");function h(e){return l.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||l.isValidElement(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){let{value:n,tabValues:s}=e;return s.some(e=>e.value===n)}var x=s("6735");function j(e){let{className:n,block:s,selectedValue:l,selectValue:o,tabValues:a}=e,c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),p=e=>{let n=e.currentTarget,s=a[c.indexOf(n)].value;s!==l&&(d(n),o(s))},h=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{let s=c.indexOf(e.currentTarget)+1;n=c[s]??c[0];break}case"ArrowLeft":{let s=c.indexOf(e.currentTarget)-1;n=c[s]??c[c.length-1]}}n?.focus()};return(0,i.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.Z)("tabs",{"tabs--block":s},n),children:a.map(e=>{let{value:n,label:s,attributes:r}=e;return(0,i.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>{c.push(e)},onKeyDown:h,onClick:p,...r,className:(0,t.Z)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":l===n}),children:s??n},n)})})}function m(e){let{lazy:n,children:s,selectedValue:r}=e,o=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){let e=o.find(e=>e.props.value===r);return e?(0,l.cloneElement)(e,{className:(0,t.Z)("margin-top--md",e.props.className)}):null}return(0,i.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==r}))})}function f(e){let n=function(e){let{defaultValue:n,queryString:s=!1,groupId:i}=e,t=function(e){let{values:n,children:s}=e;return(0,l.useMemo)(()=>{let e=n??h(s).map(e=>{let{props:{value:n,label:s,attributes:i,default:l}}=e;return{value:n,label:s,attributes:i,default:l}});return!function(e){let n=(0,d.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}(e),[r,x]=(0,l.useState)(()=>(function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:s}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}let i=s.find(e=>e.default)??s[0];if(!i)throw Error("Unexpected error: 0 tabValues");return i.value})({defaultValue:n,tabValues:t})),[j,m]=function(e){let{queryString:n=!1,groupId:s}=e,i=(0,o.k6)(),t=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,c._X)(t),(0,l.useCallback)(e=>{if(!t)return;let n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})},[t,i])]}({queryString:s,groupId:i}),[f,b]=function(e){let{groupId:n}=e,s=n?`docusaurus.tab.${n}`:null,[i,t]=(0,p.Nk)(s);return[i,(0,l.useCallback)(e=>{s&&t.set(e)},[s,t])]}({groupId:i}),g=(()=>{let e=j??f;return u({value:e,tabValues:t})?e:null})();return(0,a.Z)(()=>{g&&x(g)},[g]),{selectedValue:r,selectValue:(0,l.useCallback)(e=>{if(!u({value:e,tabValues:t}))throw Error(`Can't select invalid tab value=${e}`);x(e),m(e),b(e)},[m,b,t]),tabValues:t}}(e);return(0,i.jsxs)("div",{className:(0,t.Z)("tabs-container","tabList__CuJ"),children:[(0,i.jsx)(j,{...n,...e}),(0,i.jsx)(m,{...n,...e})]})}function b(e){let n=(0,x.Z)();return(0,i.jsx)(f,{...e,children:h(e.children)},String(n))}},50065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return r}});var i=s(67294);let l={},t=i.createContext(l);function r(e){let n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);