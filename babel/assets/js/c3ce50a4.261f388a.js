"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9286],{35318:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return f}});var r=n(27378);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),l=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=l(t.components);return r.createElement(c.Provider,{value:e},t.children)},u="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),u=l(n),d=o,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||a;return n?r.createElement(f,i(i({ref:e},m),{},{components:n})):r.createElement(f,i({ref:e},m))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s[u]="string"==typeof t?t:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47249:function(t,e,n){n.r(e),n.d(e,{assets:function(){return m},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(25773),o=n(30808),a=(n(27378),n(35318)),i=["components"],s={layout:"post",title:"Zero-config code transformation with babel-plugin-macros",author:"Kent C. Dodds",authorURL:"https://twitter.com/kentcdodds",date:new Date("2017-09-11T11:00:00.000Z"),categories:"announcements",share_text:"Zero-config code transformation with babel-plugin-macros",custom_js_with_timestamps:["docs.js"],guest_post:!0,guest_description:'This is a guest post from Kent C. Dodds. Kent works at PayPal and\nteaches about JavaScript and <a href="https://kentcdodds.com/workshops/#code-transformation-and-linting">writing Babel plugins</a>\non <a href="http://kcd.im/egghead">Egghead.io</a> and <a href="https://frontendmasters.com/courses/">Frontend Masters</a>.\nFollow Kent on <a href="https://github.com/kentcdodds">GitHub</a>,\nand <a href="https://twitter.com/kentcdodds">Twitter</a>.\n'},c=void 0,l={permalink:"/babel-website/blog/2017/09/11/zero-config-with-babel-macros",source:"@site/blog/2017-09-11-zero-config-with-babel-macros.md",title:"Zero-config code transformation with babel-plugin-macros",description:"Babel started out as a transpiler to let you write the latest version of the ECMAScript specification but ship to environments that don't implement those features yet. But it has become much more than that. \"Compilers are the New Frameworks\" says Tom Dale and I could not agree more. We're seeing more and more compile-time optimizations for libraries and frameworks. I'm not talking about syntax extensions to the language, but simple code transformations that enable patterns that would be difficult to accomplish otherwise.",date:"2017-09-11T11:00:00.000Z",formattedDate:"September 11, 2017",tags:[],readingTime:4.785,hasTruncateMarker:!0,authors:[{name:"Kent C. Dodds",url:"https://twitter.com/kentcdodds"}],frontMatter:{layout:"post",title:"Zero-config code transformation with babel-plugin-macros",author:"Kent C. Dodds",authorURL:"https://twitter.com/kentcdodds",date:"2017-09-11T11:00:00.000Z",categories:"announcements",share_text:"Zero-config code transformation with babel-plugin-macros",custom_js_with_timestamps:["docs.js"],guest_post:!0,guest_description:'This is a guest post from Kent C. Dodds. Kent works at PayPal and\nteaches about JavaScript and <a href="https://kentcdodds.com/workshops/#code-transformation-and-linting">writing Babel plugins</a>\non <a href="http://kcd.im/egghead">Egghead.io</a> and <a href="https://frontendmasters.com/courses/">Frontend Masters</a>.\nFollow Kent on <a href="https://github.com/kentcdodds">GitHub</a>,\nand <a href="https://twitter.com/kentcdodds">Twitter</a>.\n'},prevItem:{title:"Planning for 7.0",permalink:"/babel-website/blog/2017/09/12/planning-for-7.0"},nextItem:{title:"Contributing to Babel: Three Lessons to Remember",permalink:"/babel-website/blog/contributing-to-babel-three-lessons-to-remember"}},m={authorsImageUrls:[void 0]},u=[],p={toc:u};function d(t){var e=t.components,n=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Babel started out as a transpiler to let you write the latest version of the ECMAScript specification but ship to environments that don't implement those features yet. But it has become much more than that. ",(0,a.kt)("a",{parentName:"p",href:"https://tomdale.net/2017/09/compilers-are-the-new-frameworks/"},'"Compilers are the New Frameworks"')," says ",(0,a.kt)("a",{parentName:"p",href:"https://twitter.com/tomdale"},"Tom Dale")," and I could not agree more. We're seeing more and more compile-time optimizations for libraries and frameworks. I'm not talking about syntax extensions to the language, but simple code transformations that enable patterns that would be difficult to accomplish otherwise."))}d.isMDXComponent=!0}}]);