"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1117],{35318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||l;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},64289:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=n(25773),r=n(30808),l=(n(27378),n(35318)),o=["components"],i={layout:"post",title:"Function Bind Syntax",author:"James Kyle",authorURL:"https://twitter.com/thejameskyle",date:new Date("2015-05-14T19:30:00.000Z"),categories:"announcements",share_text:"New in Babel 5.4: Function Bind Syntax"},s=void 0,p={permalink:"/babel-website/blog/2015/05/14/function-bind",source:"@site/blog/2015-05-14-function-bind.md",title:"Function Bind Syntax",description:"Babel 5.4 was just released and with it comes support for a new",date:"2015-05-14T19:30:00.000Z",formattedDate:"May 14, 2015",tags:[],readingTime:2.015,hasTruncateMarker:!0,authors:[{name:"James Kyle",url:"https://twitter.com/thejameskyle"}],frontMatter:{layout:"post",title:"Function Bind Syntax",author:"James Kyle",authorURL:"https://twitter.com/thejameskyle",date:"2015-05-14T19:30:00.000Z",categories:"announcements",share_text:"New in Babel 5.4: Function Bind Syntax"},prevItem:{title:"React on ES6+",permalink:"/babel-website/blog/2015/07/07/react-on-es6-plus"},nextItem:{title:"5.0.0 Released",permalink:"/babel-website/blog/2015/03/31/5.0.0"}},c={authorsImageUrls:[void 0]},u=[{value:"Virtual Methods",id:"virtual-methods",level:3},{value:"Method Extraction",id:"method-extraction",level:3},{value:"Usage",id:"usage",level:3}],m={toc:u},h="wrapper";function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,l.kt)(h,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Babel 5.4 was just released and with it comes support for a new\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing/es-function-bind"},"experimental ES7 syntax"),"\nproposed by Kevin Smith (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing"},"@zenparsing"),") and\nimplemented in Babel by Ingvar Stepanyan\n(",(0,l.kt)("a",{parentName:"p",href:"https://github.com/RReverser"},"@RReverser"),")."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"Warning: This syntax is highly experimental and you should not use\nit for anything serious (yet)."))," If you do use this syntax, please\nprovide feedback on ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing/es-function-bind"},"GitHub"),".")),(0,l.kt)("p",null,"The function bind syntax introduces a new operator ",(0,l.kt)("inlineCode",{parentName:"p"},"::")," which performs function\nbinding and method extraction."),(0,l.kt)("h3",{id:"virtual-methods"},"Virtual Methods"),(0,l.kt)("p",null,'Using an iterator library implemented as a module of "virtual methods":'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES7 */\nimport { map, takeWhile, forEach } from "iterlib";\n\ngetPlayers()\n::map(x => x.character())\n::takeWhile(x => x.strength > 100)\n::forEach(x => console.log(x));\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES6 */\nimport { map, takeWhile, forEach } from "iterlib";\n\nlet _val;\n_val = getPlayers();\n_val = map.call(_val, x => x.character());\n_val = takeWhile.call(_val, x => x.strength > 100);\n_val = forEach.call(_val, x => console.log(x));\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," Babel's ",(0,l.kt)("a",{parentName:"p",href:"/repl/#?experimental=true&evaluate=false&loose=false&spec=false&playground=false&code=import%20%7B%20map%2C%20takeWhile%2C%20forEach%20%7D%20from%20%22iterlib%22%3B%0A%0AgetPlayers()%0A%3A%3Amap(x%20%3D%3E%20x.character())%0A%3A%3AtakeWhile(x%20%3D%3E%20x.strength%20%3E%20100)%0A%3A%3AforEach(x%20%3D%3E%20console.log(x))%3B"},"output"),"\nlooks different than this in order to be more concise.")),(0,l.kt)("p",null,"Using a jquery-like library of virtual methods:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES7 */\n// Create bindings for just the methods that we need\nlet { find, html } = jake;\n\n// Find all the divs with class="myClass", then get all of the\n// "p"s and replace their content.\ndocument.querySelectorAll("div.myClass")::find("p")::html("hahaha");\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES6 */\nlet _val;\n_val = document.querySelectorAll("div.myClass");\n_val = find.call(_val, "p");\n_val = html.call(_val, "hahaha");\n')),(0,l.kt)("h3",{id:"method-extraction"},"Method Extraction"),(0,l.kt)("p",null,"Using method extraction to print the eventual value of a promise to the console:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"/* ES7 */\nPromise.resolve(123).then(::console.log);\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"/* ES6 */\n// Which could be written in ES6 as:\nPromise.resolve(123).then(console.log.bind(console));\n")),(0,l.kt)("p",null,"Using method extraction to call an object method when a DOM event occurs:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES7 */\n$(".some-link").on("click", ::view.reset);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'/* ES6 */\n$(".some-link").on("click", view.reset.bind(view));\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"Note:")," You can read more about this syntax in the\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing/es-function-bind"},"Function Bind Syntax proposal"),".")),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("p",null,"Enable by stage:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Shell"',title:'"Shell"'},"$ babel --stage 0\n")),(0,l.kt)("p",null,"Enable by transformer:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Shell"',title:'"Shell"'},"$ babel --optional es7.functionBind\n")),(0,l.kt)("hr",null),(0,l.kt)("p",null,"The function bind syntax will only make it into ES7 if there is enough interest.\nIf you would like to see this syntax make it in, please give it a star on\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing/es-function-bind"},"GitHub")," and provide any\nfeedback you have on ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zenparsing/es-function-bind/issues"},"GitHub issues"),"."),(0,l.kt)("p",null,"Special thanks to Ingvar Stepanyan (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/RReverser"},"@RReverser"),")\nfor the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/pull/1518"},"implementation")," in Babel."),(0,l.kt)("p",{class:"text-right"},"\u2014 The Babel team"))}d.isMDXComponent=!0}}]);