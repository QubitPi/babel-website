"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5855],{35318:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return b}});var l=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=l.createContext({}),u=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return l.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,b=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?l.createElement(b,a(a({ref:t},s),{},{components:n})):l.createElement(b,a({ref:t},s))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:r,a[1]=i;for(var u=2;u<o;u++)a[u]=n[u];return l.createElement.apply(null,a)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8876:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var l=n(25773),r=n(30808),o=(n(27378),n(35318)),a=["components"],i={id:"babel-plugin-proposal-record-and-tuple",title:"@babel/plugin-proposal-record-and-tuple",sidebar_label:"record-and-tuple"},p=void 0,u={unversionedId:"babel-plugin-proposal-record-and-tuple",id:"babel-plugin-proposal-record-and-tuple",title:"@babel/plugin-proposal-record-and-tuple",description:"Installation",source:"@site/../docs/plugin-proposal-record-and-tuple.md",sourceDirName:".",slug:"/babel-plugin-proposal-record-and-tuple",permalink:"/babel-website/docs/babel-plugin-proposal-record-and-tuple",draft:!1,editUrl:"https://github.com/babel/website/edit/main/docs/../docs/plugin-proposal-record-and-tuple.md",tags:[],version:"current",frontMatter:{id:"babel-plugin-proposal-record-and-tuple",title:"@babel/plugin-proposal-record-and-tuple",sidebar_label:"record-and-tuple"},sidebar:"plugins",previous:{title:"private-methods",permalink:"/babel-website/docs/babel-plugin-proposal-private-methods"},next:{title:"throw-expressions",permalink:"/babel-website/docs/babel-plugin-proposal-throw-expressions"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"With a configuration file (Recommended)",id:"with-a-configuration-file-recommended",level:3},{value:"Via CLI",id:"via-cli",level:3},{value:"Via Node API",id:"via-node-api",level:3},{value:"Options",id:"options",level:2},{value:"<code>importPolyfill</code>",id:"importpolyfill",level:3},{value:"<code>polyfillModuleName</code>",id:"polyfillmodulename",level:3}],d={toc:c},m="wrapper";function b(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)(m,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Shell"',title:'"Shell"'},"$ npm install --save-dev @babel/plugin-proposal-record-and-tuple\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"with-a-configuration-file-recommended"},"With a configuration file (Recommended)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": ["@babel/plugin-proposal-record-and-tuple"]\n}\n')),(0,o.kt)("h3",{id:"via-cli"},"Via CLI"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh",metastring:'title="Shell"',title:'"Shell"'},"$ babel --plugins @babel/plugin-proposal-record-and-tuple script.js\n")),(0,o.kt)("h3",{id:"via-node-api"},"Via Node API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'require("@babel/core").transformSync("code", {\n  plugins: [["@babel/plugin-proposal-record-and-tuple"]],\n});\n')),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("h3",{id:"importpolyfill"},(0,o.kt)("inlineCode",{parentName:"h3"},"importPolyfill")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"boolean"),", defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("p",null,"By default this plugin only transforms the proposal syntax, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"Record")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Tuple")," globals:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},"let a = #[1, 2, 3];\n\n// \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07\n\nlet a = Tuple(1, 2, 3);\n")),(0,o.kt)("p",null,"You either need to load a polyfill, or you can pass the ",(0,o.kt)("inlineCode",{parentName:"p"},'"importPolyfill": true')," option to inject imports to ",(0,o.kt)("inlineCode",{parentName:"p"},"@bloomberg/record-tuple-polyfill"),", maintained by the proposal authors:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="babel.config.json"',title:'"babel.config.json"'},'{\n  "plugins": [\n    [\n      "@babel/plugin-proposal-record-and-tuple",\n      {\n        "importPolyfill": true\n      }\n    ]\n  ]\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="JavaScript"',title:'"JavaScript"'},'let a = #[1, 2, 3];\n\n// \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07 \u2b07\n\nimport { Tuple as _Tuple } from "@bloomberg/record-tuple-polyfill";\n\nlet a = _Tuple(1, 2, 3);\n')),(0,o.kt)("p",null,"Don't forget to add ",(0,o.kt)("inlineCode",{parentName:"p"},"@bloomberg/record-tuple-polyfill")," to your dependencies!"),(0,o.kt)("h3",{id:"polyfillmodulename"},(0,o.kt)("inlineCode",{parentName:"h3"},"polyfillModuleName")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"string"),", defaults to ",(0,o.kt)("inlineCode",{parentName:"p"},'"@bloomberg/record-tuple-polyfill"'),"."),(0,o.kt)("p",null,"If you wish to inject imports to a polyfill different from ",(0,o.kt)("inlineCode",{parentName:"p"},"@bloomberg/record-tuple-polyfill"),", you can use this option to specify its name."))}b.isMDXComponent=!0}}]);