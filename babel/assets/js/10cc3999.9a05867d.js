"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7269],{35318:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(27378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),b=a,d=u["".concat(s,".").concat(b)]||u[b]||m[b]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},43824:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var n=r(25773),a=r(30808),o=(r(27378),r(35318)),i=["components"],p={layout:"post",title:"7.12.0 Released: TypeScript 4.1, strings as import/export names, and class static blocks",author:"Nicol\xf2 Ribaudo",authorURL:"https://twitter.com/NicoloRibaudo",date:new Date("2020-10-12T00:00:00.000Z"),categories:"announcements",share_text:"Babel 7.12.0 Released"},s=void 0,l={permalink:"/babel-website/blog/2020/10/15/7.12.0",source:"@site/blog/2020-10-15-7.12.0.md",title:"7.12.0 Released: TypeScript 4.1, strings as import/export names, and class static blocks",description:"We just published a new minor version of Babel!",date:"2020-10-12T00:00:00.000Z",formattedDate:"October 12, 2020",tags:[],readingTime:3.945,hasTruncateMarker:!0,authors:[{name:"Nicol\xf2 Ribaudo",url:"https://twitter.com/NicoloRibaudo"}],frontMatter:{layout:"post",title:"7.12.0 Released: TypeScript 4.1, strings as import/export names, and class static blocks",author:"Nicol\xf2 Ribaudo",authorURL:"https://twitter.com/NicoloRibaudo",date:"2020-10-12T00:00:00.000Z",categories:"announcements",share_text:"Babel 7.12.0 Released"},prevItem:{title:"7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets",permalink:"/babel-website/blog/2021/02/22/7.13.0"},nextItem:{title:"7.11.0 Released: ECMAScript 2021 support in preset-env, TypeScript 4.0 support, printing config and the future of `babel-eslint`",permalink:"/babel-website/blog/2020/07/30/7.11.0"}},c={authorsImageUrls:[void 0]},u=[],m={toc:u},b="wrapper";function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(b,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We just published a new minor version of Babel!"),(0,o.kt)("p",null,"This release includes support for the new TypeScript 4.1 beta features: ",(0,o.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#template-literal-types"},"template literal types")," and ",(0,o.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#key-remapping-mapped-types"},"key remapping in mapped types"),"."),(0,o.kt)("p",null,"Additionally, we implemented two new ECMAScript proposals: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-class-static-block"},"class static blocks")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tc39/ecma262/pull/2154"},"imports and exports with string names"),"."),(0,o.kt)("p",null,"Lastly, we renamed ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/plugin-syntax-module-attributes")," (and the corresponding parser plugin ",(0,o.kt)("inlineCode",{parentName:"p"},"moduleAttributes"),") to ",(0,o.kt)("inlineCode",{parentName:"p"},"@babel/plugin-syntax-import-assertions")," (and ",(0,o.kt)("inlineCode",{parentName:"p"},"importAssertions"),"), to match the recent ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-import-assertions"},"proposal")," updates. The old plugin will work until Babel 8, but it's deprecated now."),(0,o.kt)("p",null,"You can read the whole changelog ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/babel/babel/releases/tag/v7.12.0"},"on GitHub"),"."))}d.isMDXComponent=!0}}]);