<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Babel Blog</title>
        <link>https://paion-data.github.io/babel-website/blog</link>
        <description>Babel Blog</description>
        <lastBuildDate>Mon, 20 Feb 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[7.21.0 Released: Inline RegExp modifiers, TypeScript 5.0, and Decorators updates]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2023/02/20/7.21.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2023/02/20/7.21.0</guid>
            <pubDate>Mon, 20 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.21.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.21.0!</p><p>Babel now supports the <a href="https://github.com/tc39/proposal-regexp-modifiers" target="_blank" rel="noopener noreferrer">Inline RegExp modifiers</a> proposal, the latest version of the <a href="https://github.com/tc39/proposal-decorators/" target="_blank" rel="noopener noreferrer">Decorators</a> proposal, and the new <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/" target="_blank" rel="noopener noreferrer">TypeScript 5.0</a> syntax.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.21.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="inline-regexp-modifiers">Inline RegExp modifiers<a href="#inline-regexp-modifiers" class="hash-link" aria-label="Direct link to Inline RegExp modifiers" title="Direct link to Inline RegExp modifiers">​</a></h3><p>The <a href="https://github.com/tc39/proposal-regexp-modifiers" target="_blank" rel="noopener noreferrer">Inline RegExp modifiers</a> Stage 3 proposal allows you to enable or disable the <code>i</code>, <code>m</code> and <code>s</code> for <em>part</em> of a regular expression, without affecting other parts.</p><p>You can use the <code>(?enableFlags:subPattern)</code> syntax to enable flags, <code>(?-disableFlags:subPattern)</code> to disable them, and <code>(?enableFlags-disableFlags:subPattern)</code> to enable some and disable others at the same time. You can think of non-capturing group <code>(?:subPattern)</code> as a special case where no flags are modified.</p><p>As an example, <code>/(?i:a)a/</code> matches an <code>a</code> ignoring its case, followed by a lowercase <code>a</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">(?i:a)a</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"aa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token plain">i</span><span class="token operator">:</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain">a</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Aa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token plain">i</span><span class="token operator">:</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain">a</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"aA"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// false</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>/a(?-i:a)/i</code> is equivalent: the regular expression is case insensitive, expect for the second <code>a</code> which must be lowercase.</p><p>You can enable this proposal by installing the <code>@babel/plugin-proposal-regexp-modifiers</code> package and adding it to your Babel configuration:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// Add this!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-regexp-modifiers"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="decorators-updates">Decorators updates<a href="#decorators-updates" class="hash-link" aria-label="Direct link to Decorators updates" title="Direct link to Decorators updates">​</a></h3><p>TC39, the committee that standardizes JavaScript, <a href="https://github.com/babel/proposals/issues/86#issuecomment-1414202318" target="_blank" rel="noopener noreferrer">recently approved</a> some changes to the <a href="https://github.com/tc39/proposal-decorators/" target="_blank" rel="noopener noreferrer">Decorators proposal</a> based on feedback from the TypeScript team.</p><ul><li><p>Decorators on exported classes can now come either before or after the <code>export</code> keyword, but not in both places at the same time:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// valid</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@dec</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// valid</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> @dec </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">B</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// invalid</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@dec</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> @dec </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This relaxed restriction aims at simplifying migration from the "<em>legacy</em>" decorators version, by reducing the syntactic differences.</p></li><li><p>The methods on the <code>context.access</code> object provided to decorators expect the target object as their first parameter, rather than as their <code>this</code> receiver:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> accessX</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">dec</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">desc</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> context</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  accessX </span><span class="token operator">=</span><span class="token plain"> context</span><span class="token punctuation">.</span><span class="token property-access">access</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> dec</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @dec #x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// old semantics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">accessX</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">get</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// new semantics</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">accessX</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">get</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><code>context.access</code> has a new <code>.has</code> method, to check if an object has the corresponding element. Continuing the example above:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// #x in new A</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">accessX</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">has</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>You can enable this new version of the decorators proposal by setting the <code>version</code> option of <code>"@babel/plugin-proposal-decorators"</code> to <code>"2023-01"</code>:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token property">"version"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"2023-01"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also try the new decorators proposal in the online Babel <a href="https://babeljs.io/repl#?code_lz=GYVwdgxgLglg9mABAGzgczQUwE4AoCUiA3gFCKID0FiA8gA6ZICecI2A5AM6IBG2cAd045EEBJzjJMAGjKVqAQzAATRIwU8piAEQBRAG4LkIBVEzbEMJFAAWmRJxjLMPBdgCEcsWAlSAdKhouG5oIAC2jFCc-ADcJAC-JCQQyAqc3ACCxHIAAoFY2HIRtnDKBMSJ8UA&amp;presets=stage-3&amp;version=7.21.0" target="_blank" rel="noopener noreferrer">REPL</a>, enabling the "Stage 3" (or lower) preset in the sidebar and choosing the <code>2023-01</code> decorators version.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-50">TypeScript 5.0<a href="#typescript-50" class="hash-link" aria-label="Direct link to TypeScript 5.0" title="Direct link to TypeScript 5.0">​</a></h3><p>TypeScript 5.0, currently released as a beta prerelease, introduces two new syntactic features:</p><ul><li><p><code>const</code> modifiers for type parameters</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">TypeScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:#4271ae">getName</span><span class="token generic-function generic class-name operator" style="color:#eab700">&lt;</span><span class="token generic-function generic class-name keyword" style="color:#8959a8">const</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name constant" style="color:#f5871f">T</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name keyword" style="color:#8959a8">extends</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name punctuation" style="color:#eab700">{</span><span class="token generic-function generic class-name" style="color:#eab700"> name</span><span class="token generic-function generic class-name operator" style="color:#eab700">:</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name builtin" style="color:#f5871f">string</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name punctuation" style="color:#eab700">}</span><span class="token generic-function generic class-name operator" style="color:#eab700">&gt;</span><span class="token punctuation">(</span><span class="token plain">user</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"name"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">return</span><span class="token plain"> user</span><span class="token punctuation">.</span><span class="token plain">name</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">getName</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Babel"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">//  ^? inferred type: "Babel", instead of just string.</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><code>export type *</code> declarations</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">TypeScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./mod"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">as</span><span class="token plain"> ns </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./mod"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel relies on this new syntax to safely remove the re-<code>export</code> declaration while compiling from TypeScript to JavaScript.</p></li></ul><p>Additionally, TypeScript 5.0 introduces support for the standard Decorators proposal, that you can enable in Babel using <code>@babel/plugin-proposal-decorators</code>.</p><p>You can read more about the new TypeScript features in their <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-5-0-beta/" target="_blank" rel="noopener noreferrer">release post</a>!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-support-for-cts-configuration-files">Experimental support for <code>.cts</code> configuration files<a href="#experimental-support-for-cts-configuration-files" class="hash-link" aria-label="Direct link to experimental-support-for-cts-configuration-files" title="Direct link to experimental-support-for-cts-configuration-files">​</a></h3><p>If you installed <code>@babel/preset-typescript</code>, or if you are running Babel using <code>ts-node</code>, you can now use <code>babel.config.cts</code> as a Babel configuration file written in TypeScript and CommonJS. You can read more about this in the <a href="https://babeljs.io/docs/config-files#supported-file-extensions" target="_blank" rel="noopener noreferrer">documentation</a>.</p><p>It's not possible yet to use <code>babel.config.ts</code> and <code>babel.config.mts</code> files, pending stabilization of the <a href="https://nodejs.org/api/esm.html#loaders" target="_blank" rel="noopener noreferrer">Node.js ESM loader</a> API.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="source-maps-improvements">Source maps improvements<a href="#source-maps-improvements" class="hash-link" aria-label="Direct link to Source maps improvements" title="Direct link to Source maps improvements">​</a></h3><p>Source maps generated by Babel now support <a href="https://developer.chrome.com/blog/devtools-modern-web-debugging/#friendly-call-frames" target="_blank" rel="noopener noreferrer">Friendly Call Frames</a>, to show better names for trasformed functions in devtools.</p><p>Additionally, <code>@babel/generator</code> now accepts input source maps generated from other tools in the build pipeline: this allows to properly merge source maps even when using <code>@babel/generator</code> directly without <code>@babel/core</code>, and improves the general performance of source map merging in when using Babel.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.20.0 Released: Deno target and TypeScript 4.9]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2022/10/27/7.20.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2022/10/27/7.20.0</guid>
            <pubDate>Thu, 27 Oct 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.20.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.20.0!</p><p>This release includes support for <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/" target="_blank" rel="noopener noreferrer">TypeScript 4.9</a>, and parser support for the <a href="https://github.com/tc39/proposal-import-reflection/" target="_blank" rel="noopener noreferrer">Import Reflection</a> and <a href="https://github.com/tc39/proposal-explicit-resource-management/" target="_blank" rel="noopener noreferrer">Explicit Resource Management</a> Stage 2 proposals. Additionally, you can now use <a href="https://deno.land/" target="_blank" rel="noopener noreferrer">Deno</a> as one of your compilation targets.</p><p>In the past few releases we have made gradual improvements <code>@babel/generator</code>'s code location tracking, which lead to higher source map quality and better positioning of comments in the generated output.</p><p>We are also releasing version 9.0.0 of <a href="https://github.com/babel/babel-loader/" target="_blank" rel="noopener noreferrer"><code>babel-loader</code></a>, the Babel loader for Webpack.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.20.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-49-14211">TypeScript 4.9 (<a href="https://github.com/babel/babel/pull/14211" target="_blank" rel="noopener noreferrer">#14211</a>)<a href="#typescript-49-14211" class="hash-link" aria-label="Direct link to typescript-49-14211" title="Direct link to typescript-49-14211">​</a></h3><p>TypeScript 4.9 introduces a new keyword operator, <code>satisfies</code>, that lets you assert that an expression has a given type without actually casting that expression:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">as</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">const</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">//  ^ type is { x: 1, y: 2 }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> a satisfies </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">key</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">number</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">//  ^ type is still { x: 1, y: 2 }, and not { [key: string]: number }!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">a satisfies </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">key</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// error! a does not satisfies that type</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can read more about this in the TypeScript 4.9 <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-9-beta/#hamilton" target="_blank" rel="noopener noreferrer">release post</a> 😉.</p><p>Babel can now parse and strip away those annotations when using <code>@babel/plugin-transform-typescript</code> or <code>@babel/preset-typescript</code>, allowing you to start using the new TypeScript version.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deno-compilation-target-14944">Deno compilation target (<a href="https://github.com/babel/babel/pull/14944" target="_blank" rel="noopener noreferrer">#14944</a>)<a href="#deno-compilation-target-14944" class="hash-link" aria-label="Direct link to deno-compilation-target-14944" title="Direct link to deno-compilation-target-14944">​</a></h3><p>When compiling for Deno, you can configure <code>@babel/preset-env</code> to only compile the features not supported by your Deno version. While Deno usually ships new ECMAScript features as soon as possible, you might need to support older engine versions.</p><p>You can enable it using the <a href="https://babeljs.io/docs/en/options#targets" target="_blank" rel="noopener noreferrer"><code>targets</code></a> option:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSON</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token property">"deno"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"1.20"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-loader-900"><code>babel-loader</code> 9.0.0<a href="#babel-loader-900" class="hash-link" aria-label="Direct link to babel-loader-900" title="Direct link to babel-loader-900">​</a></h3><p>This new major version of <a href="https://github.com/babel/babel-loader/releases/tag/v9.0.0" target="_blank" rel="noopener noreferrer"><code>babel-loader</code></a> drops support for Webpack &lt; 5, for Babel &lt; 7.12 and for Node.js &lt; 14.15 LTS.</p><p>Loader options cannot be specified using the query parameters: instead of specifying options inline (for example, <code>loader: "babel-loader?presets=@babel/preset-env"</code>) you will have to use the <code>options</code> object:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">loader</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-loader"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">options</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also use a dedicated <a href="https://babeljs.io/docs/en/config-files#project-wide-configuration" target="_blank" rel="noopener noreferrer">Babel configuration file</a>, such as <code>babel.config.json</code>.</p><p>If you are not using query parameters to specify Babel options, and if you are on a modern version of Webpack, Babel and Node.js, you should be able to update without changes to your Webpack or Babel configurations.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.19.0 Released: Stage 3 decorators and more RegExp features!]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2022/09/05/7.19.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2022/09/05/7.19.0</guid>
            <pubDate>Mon, 05 Sep 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.19.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.19.0!</p><p>This release updates our implementation of the <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">decorators proposal</a>, which reached Stage 3 in March. It also includes support for the new <a href="https://github.com/tc39/proposal-duplicate-named-capturing-groups" target="_blank" rel="noopener noreferrer">duplicate named capturing groups proposal</a> for regular expressions.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.19.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-default-values">New default values<a href="#new-default-values" class="hash-link" aria-label="Direct link to New default values" title="Direct link to New default values">​</a></h3><p>Given the stabilization of the <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">decorators</a> and <a href="https://github.com/tc39/proposal-record-tuple" target="_blank" rel="noopener noreferrer">Record and Tuple</a> proposal, we set some default values for their <a href="https://babeljs.io/docs/en/babel-parser#plugins-options" target="_blank" rel="noopener noreferrer">parser plugin</a> options:</p><ul><li><code>decorators</code>/<code>@babel/plugin-proposal-decorators</code>'s <code>decoratorsBeforeExport</code> now defaults to <code>false</code>;</li><li><code>recordAndTuple</code>/<code>@babel/plugin-proposal-record-and-tuple</code>'s <code>syntaxType</code> option now defaults to <code>hash</code>.</li></ul><p>These options will be removed in Babel 8.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-decorators-14836">Stage 3 decorators (<a href="https://github.com/babel/babel/pull/14836" target="_blank" rel="noopener noreferrer">#14836</a>)<a href="#stage-3-decorators-14836" class="hash-link" aria-label="Direct link to stage-3-decorators-14836" title="Direct link to stage-3-decorators-14836">​</a></h3><p>The decorators proposal was promoted to Stage 3 with some minor but observable changes. You can enable the new version using the <code>"version": "2022-03"</code> option of <code>@babel/plugin-proposal-decorators</code>:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token property">"version"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"2022-03"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you are migrating from the <code>2021-12</code> version, the following breaking changes might affect you:</p><ul><li>the <code>initialize</code> method of the object returned by accessor decorators has been renamed to <code>init</code>;</li><li>the <code>isPrivate</code> and <code>isStatic</code> properties of the <code>context</code> parameter received by the decorators (the second one) have been renamed to <code>private</code> and <code>static</code>;</li><li>the <code>context</code> parameter now always has an <code>access</code> property, regardless of the decorated element type;</li><li>support for metadata (<code>getMetadata</code>/<code>setMetadata</code>) has been removed and <a href="https://github.com/tc39/proposal-decorator-metadata" target="_blank" rel="noopener noreferrer">postponed to a future proposal</a>;</li><li><code>@(expression)()</code>-style decorators are disallowed, and you must use <code>@(expression())</code>;</li><li>decorators are applied in the following order, instead of in a single pass:<ol><li>static method decorators</li><li>proto method decorators</li><li>static field decorators</li><li>instance field decorators</li><li>class decorators.</li></ol></li></ul><p>If you are migrating from an older version of the proposal, we suggest reading <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">the full README</a>. 😉</p><blockquote><p>💡 TypeScript <a href="https://github.com/microsoft/TypeScript/issues/48885" target="_blank" rel="noopener noreferrer">plans to implement</a> this version of the proposal. After almost a decade, it will be possible to write decorators without worrying if they will be compiled by Babel or tsc!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="regexp-duplicate-named-capturing-groups-14805">RegExp duplicate named capturing groups (<a href="https://github.com/babel/babel/pull/14805" target="_blank" rel="noopener noreferrer">#14805</a>)<a href="#regexp-duplicate-named-capturing-groups-14805" class="hash-link" aria-label="Direct link to regexp-duplicate-named-capturing-groups-14805" title="Direct link to regexp-duplicate-named-capturing-groups-14805">​</a></h3><p>Babel now supports the <a href="https://github.com/tc39/proposal-duplicate-named-capturing-groups/" target="_blank" rel="noopener noreferrer">RegExp duplicate named capturing groups</a> proposal, which allows re-using the same group name in alternative RegExp branches:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> dateRE </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">(?&lt;year&gt;\d\d\d\d)-(?&lt;month&gt;\d\d)|(?&lt;month&gt;\d\d)-(?&lt;year&gt;\d\d)</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"2022-12"</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">match</span><span class="token punctuation">(</span><span class="token plain">dateRE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">groups</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// { year: "2022", month: "12" }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"12-2022"</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">match</span><span class="token punctuation">(</span><span class="token plain">dateRE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">groups</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// { year: "2022", month: "12" }</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can enable this proposal using the <code>@babel/plugin-proposal-duplicate-named-capturing-groups-regex</code> plugin:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/proposal-duplicate-named-capturing-groups-regex"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel relies on different third-party packages to transform regular expressions: this is possible thanks to the maintainers of <a href="https://github.com/jviereck/regjsparser/" target="_blank" rel="noopener noreferrer">regjsparser</a>, <a href="http://github.com/benjamn/regjsgen" target="_blank" rel="noopener noreferrer">regjsgen</a> and <a href="https://github.com/mathiasbynens/regexpu-core/" target="_blank" rel="noopener noreferrer">regexpu-core</a> who took time to review our pull requests!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.18.0 Released: Destructuring private elements and TypeScript 4.7]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2022/05/19/7.18.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2022/05/19/7.18.0</guid>
            <pubDate>Thu, 19 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.18.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.18.0!</p><p>This release includes support for the <a href="https://github.com/tc39/proposal-destructuring-private" target="_blank" rel="noopener noreferrer">private destructuring</a> proposal and for TypeScript 4.7.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.18.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="private-destructuring-14304">Private destructuring (<a href="https://github.com/babel/babel/pull/14304" target="_blank" rel="noopener noreferrer">#14304</a>)<a href="#private-destructuring-14304" class="hash-link" aria-label="Direct link to private-destructuring-14304" title="Direct link to private-destructuring-14304">​</a></h3><p>Babel supports transforming the <a href="https://github.com/tc39/proposal-destructuring-private" target="_blank" rel="noopener noreferrer">private destructuring</a> proposal. Now you can use private fields or methods in destructuring patterns:</p><table><tbody><tr><th>Input</th><th>Output</th></tr><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  y </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">equals</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">obj</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> #x</span><span class="token operator">:</span><span class="token plain"> x</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token plain"> y </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      x </span><span class="token operator">===</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token plain"> </span><span class="token operator">&amp;&amp;</span><span class="token plain"> y </span><span class="token operator">===</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  y </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">equals</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">obj</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">{</span><span class="token plain"> y </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      x </span><span class="token operator">===</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token plain"> </span><span class="token operator">&amp;&amp;</span><span class="token plain"> y </span><span class="token operator">===</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>You can enable it by adding the <code>@babel/plugin-proposal-destructuring-private</code> plugin to your configuration.</p><p>To minimize the transpiling footprint, the code generated by this plugin will still expect non-private destructuring and private elements support. If you need to compile them further, you can enable the relevant plugins (or you can use <code>@babel/preset-env</code>).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-47-support-14359-14457-14476">TypeScript 4.7 support (<a href="https://github.com/babel/babel/pull/14359" target="_blank" rel="noopener noreferrer">#14359</a>, <a href="https://github.com/babel/babel/pull/14457" target="_blank" rel="noopener noreferrer">#14457</a>, <a href="https://github.com/babel/babel/pull/14476" target="_blank" rel="noopener noreferrer">#14476</a>)<a href="#typescript-47-support-14359-14457-14476" class="hash-link" aria-label="Direct link to typescript-47-support-14359-14457-14476" title="Direct link to typescript-47-support-14359-14457-14476">​</a></h3><p>TypeScript 4.7 supports different new syntactic features:</p><ul><li><p>instantiation expressions, which allow specifying type arguments of functions without invoking them:</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> identity </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token constant" style="color:#f5871f">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token plain">val</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> val</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> stringIdentity </span><span class="token operator">=</span><span class="token plain"> identity</span><span class="token operator">&lt;</span><span class="token builtin" style="color:#f5871f">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// (val: string) =&gt; string;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>explicit variance annotations for type arguments, to guide the TypeScript type checker when computing compatibility between different types:</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Provider</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name" style="color:#eab700">out </span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Consumer</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name keyword" style="color:#8959a8">in</span><span class="token class-name" style="color:#eab700"> </span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">void</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Mapper</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name keyword" style="color:#8959a8">in</span><span class="token class-name" style="color:#eab700"> </span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name punctuation" style="color:#eab700">,</span><span class="token class-name" style="color:#eab700"> out </span><span class="token class-name constant" style="color:#f5871f">U</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">U</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Processor</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name keyword" style="color:#8959a8">in</span><span class="token class-name" style="color:#eab700"> out </span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, <code>Provide&lt;string&gt;</code> is a subtype of <code>Provider&lt;string | number&gt;</code> while <code>Consumer&lt;string | number&gt;</code> is a subtype of <code>Consumer&lt;string&gt;</code>.</p></li><li><p>constraints for the <code>infer</code> operator in conditional types:</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">GetColor</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> color</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">infer</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"red"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"pink"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token operator">?</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"unknown color"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>You can read the full TypeScript 4.7 release announcement <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-7/" target="_blank" rel="noopener noreferrer">on their blog</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="inline-regenerator-runtime-helper-14538">Inline <code>regenerator-runtime</code> helper (<a href="https://github.com/babel/babel/pull/14538" target="_blank" rel="noopener noreferrer">#14538</a>)<a href="#inline-regenerator-runtime-helper-14538" class="hash-link" aria-label="Direct link to inline-regenerator-runtime-helper-14538" title="Direct link to inline-regenerator-runtime-helper-14538">​</a></h3><p>Starting from Babel 7.18.0, <code>regenerator-runtime</code> is automatically injected in the same way that Babel injects the other runtime helpers, without relying on an implicit <code>regeneratorRuntime</code> global. When not using <a href="https://babeljs.io/docs/en/babel-plugin-transform-runtime" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-transform-runtime</code></a>, Babel will automatically inline the <code>regeneratorRuntime</code> helper:</p><ul><li>you can stop manually loading <code>regenerator-runtime</code> (with <code>import</code>, <code>require</code> or <code>&lt;script&gt;</code>);</li><li>you can delete <code>"regenerator-runtime"</code> from your dependencies in <code>package.json</code>.</li></ul><p>For example this is the output difference between old and new Babel versions when compiling <code>var f = function*() {};</code>:</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">function _regeneratorRuntime() { /* ... */ }</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">var f = /*#__PURE__*/regeneratorRuntime.mark(function f() {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">var f = /*#__PURE__*/_regeneratorRuntime().mark(function f() {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">  return regeneratorRuntime.wrap(function f$(_context) {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">  return _regeneratorRuntime().wrap(function f$(_context) {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    while (1) {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">      switch (_context.prev = _context.next) {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">        case 0:</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">        case "end":</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">          return _context.stop();</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">      }</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">    }</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  }, f);</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">});</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.17.0 Released: RegExp 'v' mode and ... 🥁 decorators!]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2022/02/02/7.17.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2022/02/02/7.17.0</guid>
            <pubDate>Wed, 02 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.17.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.17.0!</p><p>After years of <a href="https://babeljs.io/blog/2018/09/17/decorators" target="_blank" rel="noopener noreferrer">iterations</a>, rewrites and adjustments it looks like the <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">decorators proposal</a> has finally stabilized again on a new design! This release includes both parse and transform support for the new proposal.</p><p>We also implemented the <a href="https://github.com/tc39/proposal-regexp-set-notation" target="_blank" rel="noopener noreferrer">RegExp <code>v</code> flag proposal</a> and added parsing support for <a href="https://github.com/tc39/proposal-destructuring-private" target="_blank" rel="noopener noreferrer">destructuring private fields</a>, both currently Stage 2. Lastly, a new experimental implementation of <code>@babel/register</code>.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.17.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel#category-CONTRIBUTE" target="_blank" rel="noopener noreferrer">Open Collective</a> or <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">GitHub Sponsors</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="decorators-14004-13681">Decorators (<a href="https://github.com/babel/babel/pull/14004" target="_blank" rel="noopener noreferrer">#14004</a>, <a href="https://github.com/babel/babel/pull/13681" target="_blank" rel="noopener noreferrer">#13681</a>)<a href="#decorators-14004-13681" class="hash-link" aria-label="Direct link to decorators-14004-13681" title="Direct link to decorators-14004-13681">​</a></h3><p>After receiving feedback from JavaScript developers, engine developers and language experts, <a href="https://github.com/tc39/proposal-decorators/" target="_blank" rel="noopener noreferrer">the decorators proposal</a> was rewritten to take into account multiple constraints and desires. We collaborated with the current proposal author, <a href="https://www.pzuraq.com/" target="_blank" rel="noopener noreferrer">@pzuraq</a> to implement the new Stage 2 proposal in Babel.</p><p>The new implementation also supports decorating private class elements, as well as the new "class auto accessors" syntax:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">@</span><span class="token function" style="color:#4271ae">defineElement</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"button"</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Button</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @reactive accessor enabled </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// class auto accessors</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">event</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"onClick"</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// decorator on a private method</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"clicked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can enable the new proposal by passing the <code>"version": "2021-12"</code> option to <a href="https://babeljs.io/docs/en/babel-plugin-proposal-decorators" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-decorators</code></a>:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token property">"version"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"2021-12"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>⚠️ While the new decorators syntax is compatible with the previous proposal, the semantics are different: decorators already written for Babel <em>"legacy"</em>, Babel <em>older-but-not-legacy</em>, or TypeScript will not work with the new proposal.</p></blockquote><p>If you want to help move the proposal forward, you can try using it and leave feedback in <a href="https://github.com/tc39/proposal-decorators/issues" target="_blank" rel="noopener noreferrer">their GitHub repository</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="regexp-set-notation-and-properties-of-strings-14125">RegExp set notation and properties of strings (<a href="https://github.com/babel/babel/pull/14125" target="_blank" rel="noopener noreferrer">#14125</a>)<a href="#regexp-set-notation-and-properties-of-strings-14125" class="hash-link" aria-label="Direct link to regexp-set-notation-and-properties-of-strings-14125" title="Direct link to regexp-set-notation-and-properties-of-strings-14125">​</a></h3><p>Babel now supports the <a href="https://github.com/tc39/proposal-regexp-set-notation/" target="_blank" rel="noopener noreferrer">RegExp set notation and properties of strings</a> proposal, which introduces three new regular expression features behind a new <code>v</code> flag:</p><ul><li>Extended set notation, which allows computing difference, intersection and union of characters or strings sets<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">/</span><span class="token punctuation">[</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token maybe-class-name">Decimal_Number</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">0</span><span class="token operator">-</span><span class="token number" style="color:#f5871f">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token plain">v</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Non-ASCII decimal digits</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">/</span><span class="token punctuation">[</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token constant" style="color:#f5871f">ASCII</span><span class="token punctuation">}</span><span class="token operator">&amp;&amp;</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token maybe-class-name">Letter</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token plain">v</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ASCII letters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">/</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token constant" style="color:#f5871f">ASCII</span><span class="token punctuation">}</span><span class="token operator">&amp;&amp;</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token maybe-class-name">Letter</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token known-class-name class-name" style="color:#eab700">Number</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token plain">v</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ASCII letters, or any digit</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li>Properties of strings, which allow using <code>\p</code> escapes with multi-codepoint properties<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token string" style="color:#718c00">"Did you see the 👩🏿‍❤️‍💋‍👩🏾 emoji?"</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">match</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token plain">\p</span><span class="token punctuation">{</span><span class="token maybe-class-name">RGI_Emoji</span><span class="token punctuation">}</span><span class="token operator">/</span><span class="token plain">v</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ["👩🏿‍❤️‍💋‍👩🏾"]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li>Multi-codepoint strings in sets, using a new <code>\q</code> escape<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">/</span><span class="token punctuation">[</span><span class="token plain">\r\n\q</span><span class="token punctuation">{</span><span class="token plain">\r\n</span><span class="token operator">|</span><span class="token constant" style="color:#f5871f">NEWLINE</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token plain">v</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Matches \r, \n, \r\n or NEWLINE</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><p>You can enable this proposal using the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-unicode-sets-regex" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-unicode-sets-regex</code></a> plugin:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-unicode-sets-regex"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel relies on different third-party packages to transform regular expressions: we are grateful to the maintainers of <a href="https://github.com/jviereck/regjsparser/" target="_blank" rel="noopener noreferrer">regjsparser</a>, <a href="https://github.com/bnjmnt4n/regjsgen" target="_blank" rel="noopener noreferrer">regjsgen</a> and <a href="https://github.com/mathiasbynens/regexpu-core/" target="_blank" rel="noopener noreferrer">regexpu-core</a> who took time to review our pull requests!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="-and--topic-tokens-for-hack-style-pipes-13973"><code>@@</code> and <code>^^</code> topic tokens for Hack-style pipes (<a href="https://github.com/babel/babel/pull/13973" target="_blank" rel="noopener noreferrer">#13973</a>)<a href="#-and--topic-tokens-for-hack-style-pipes-13973" class="hash-link" aria-label="Direct link to -and--topic-tokens-for-hack-style-pipes-13973" title="Direct link to -and--topic-tokens-for-hack-style-pipes-13973">​</a></h3><p>We are continuing to help the proposal authors evaluate different tokens for the <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">pipeline operator</a> proposal: one of the champions, <a href="https://jschoi.org/" target="_blank" rel="noopener noreferrer">J. S. Choi</a>, added support for two new tokens that you can try with the <code>topicToken</code> option:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-pipeline-operator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"proposal"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"hack"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"topicToken"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"^^"</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// or "@@"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can read more about the supported variations in the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-pipeline-operator</code></a> docs.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-babelregister-rewrite-13782">Experimental <code>@babel/register</code> rewrite (<a href="https://github.com/babel/babel/pull/13782" target="_blank" rel="noopener noreferrer">#13782</a>)<a href="#experimental-babelregister-rewrite-13782" class="hash-link" aria-label="Direct link to experimental-babelregister-rewrite-13782" title="Direct link to experimental-babelregister-rewrite-13782">​</a></h3><p>We plan to release Babel 8 as an ESM package. However, this poses a big problem: how to load and run it synchronously in CommonJS packages?</p><p>Usually most Babel consumers can run Babel asynchronously, or at least <em>load</em> it asynchronously. This isn't true for <a href="https://www.npmjs.com/package/@babel/eslint-parser" target="_blank" rel="noopener noreferrer"><code>@babel/eslint-parser</code></a> (which integrates Babel's parser with ESLint) and <a href="https://babeljs.io/docs/en/babel-register" target="_blank" rel="noopener noreferrer"><code>@babel/register</code></a> (which can be used to transpile Node.js files on-the-fly), where we need to move parsing and transforming to a separate worker.</p><p>Babel 7.16.0 exposes the new experimental <code>@babel/register</code> implementation at <code>@babel/register/experimental-worker</code>: it internally runs Babel asynchronously, so it's compatible with <a href="https://babeljs.io/docs/en/config-files#configuration-file-types" target="_blank" rel="noopener noreferrer"><code>.mjs</code> configuration files</a> and with <code>.mjs</code> Babel plugins. It will be enabled by default in Babel 8, and you can already use it as a replacement for <code>@babel/register</code> with a few caveats:</p><ul><li>If you programmatically specify <code>@babel/register</code> options (using <code>require("@babel/register")({ /* ... options */ })</code>), you must make sure that they are serializable. This means that you cannot pass plugin functions defined inline, but you must move them to a separate <code>./my-plugin.js</code> file or to a <code>babel.config.js</code> file.</li><li>The new implementation is still experimental: it <em>should</em> have the same features as the existing one, but there are a few <a href="https://github.com/babel/babel/pull/14025#issuecomment-1003547657" target="_blank" rel="noopener noreferrer">improvements</a> that we are exploring.</li></ul><p>We already released the new experimental <code>@babel/eslint-parser</code> implementation in <a href="https://babeljs.io/blog/2021/07/26/7.15.0#preparing-babeleslint-parser-for-babel-8-13398httpsgithubcombabelbabelpull13398" target="_blank" rel="noopener noreferrer">Babel 7.15.0</a>, exposed at <code>@babel/eslint-parser/experimental-worker</code>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.16.0 Released: ESLint 8 and TypeScript 4.5]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2021/10/29/7.16.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2021/10/29/7.16.0</guid>
            <pubDate>Fri, 29 Oct 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.16.0!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.16.0!</p><p>This release enables <a href="https://github.com/tc39/proposal-class-static-block" target="_blank" rel="noopener noreferrer">class static initialization blocks</a> by default. It includes support for a new variant of the <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">pipeline operator</a> proposal, as well as TypeScript 4.5 compatibility.</p><p>Furthermore, <code>@babel/eslint-parser</code> now supports ESLint 8.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.16.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="class-static-blocks-enabled-by-default-13713">Class static blocks enabled by default (<a href="https://github.com/babel/babel/pull/13713" target="_blank" rel="noopener noreferrer">#13713</a>)<a href="#class-static-blocks-enabled-by-default-13713" class="hash-link" aria-label="Direct link to class-static-blocks-enabled-by-default-13713" title="Direct link to class-static-blocks-enabled-by-default-13713">​</a></h3><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">doSomeInitialization</span><span class="token punctuation">(</span><span class="token maybe-class-name">MyClass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"MyClass initialized!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Static blocks, that <a href="https://github.com/tc39/notes/blob/HEAD/meetings/2021-08/aug-31.md#class-static-initialization-blocks-for-stage-4" target="_blank" rel="noopener noreferrer">reached Stage 4 in August</a>, are now enabled by default in <code>@babel/parser</code> and <code>@babel/preset-env</code>.</p><p>If you were using the <code>classStaticBlock</code> parser plugin, or <code>@babel/plugin-syntax-class-static-block</code>, you can safely remove them from your config.</p><p>If you already use <code>@babel/preset-env</code>, you can now remove <code>@babel/plugin-proposal-class-static-block</code> from your config.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-45-features-13802-13838">TypeScript 4.5 features (<a href="https://github.com/babel/babel/pull/13802" target="_blank" rel="noopener noreferrer">#13802</a>, <a href="https://github.com/babel/babel/pull/13838" target="_blank" rel="noopener noreferrer">#13838</a>)<a href="#typescript-45-features-13802-13838" class="hash-link" aria-label="Direct link to typescript-45-features-13802-13838" title="Direct link to typescript-45-features-13802-13838">​</a></h3><p>TypeScript 4.5 introduces a new syntax for marking imports as type-only: rather than marking the whole import statement, you can mark a single specifier:</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// TypeScript 4.4</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> Foo </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"my-module"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> fooInstance </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"my-module"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// TypeScript 4.5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token punctuation">,</span><span class="token plain"> fooInstance </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"my-module"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It also supports two new file extensions: <code>.mts</code> and <code>.cts</code>, that mirror <code>.mjs</code> and <code>.cjs</code>. When passing an <code>.mts</code> or <code>.cts</code> file to Babel with <code>@babel/preset-typescript</code> enabled, it uses the file extension to detect the desired source type (<code>"module"</code> or <code>"script"</code>).</p><p><code>.mts</code> and <code>.cts</code> file cannot contain JSX code by default, but they cannot contain TypeScript annotations that would be ambiguous with JSX (<code>&lt;Type&gt; cast</code> and <code>&lt;T&gt;() =&gt; {}</code>).</p><p>You can read the full TypeScript 4.5 release post <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-5/" target="_blank" rel="noopener noreferrer">on their blog</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="-topic-token-for-hack-style-pipes-13749"><code>^</code> topic token for Hack-style pipes (<a href="https://github.com/babel/babel/pull/13749" target="_blank" rel="noopener noreferrer">#13749</a>)<a href="#-topic-token-for-hack-style-pipes-13749" class="hash-link" aria-label="Direct link to -topic-token-for-hack-style-pipes-13749" title="Direct link to -topic-token-for-hack-style-pipes-13749">​</a></h3><p>The champions of the <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">pipeline operator</a> proposal are considering <a href="https://github.com/tc39/proposal-pipeline-operator/wiki/Bikeshedding-the-Hack-topic-token" target="_blank" rel="noopener noreferrer">various topic tokens</a> (the reference to the value from the previous pipeline step).</p><p><code>@babel/plugin-proposal-pipeline-operator</code> (and the <code>"pipelineOperator"</code> parser plugin) now support three of them: <code>#</code>, <code>^</code> and <code>%</code>.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> values </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">getNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"default"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">concat</span><span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">loadValues</span><span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can enable the current version of the pipeline operator proposal using the <code>proposal: "hack"</code> option, and you can choose the topic token using <code>topicToken: "^"</code>:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-pipeline-operator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"proposal"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"hack"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"topicToken"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"^"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="eslint-8-support-in-babeleslint-parser-13782">ESLint 8 support in <code>@babel/eslint-parser</code> (<a href="https://github.com/babel/babel/pull/13782" target="_blank" rel="noopener noreferrer">#13782</a>)<a href="#eslint-8-support-in-babeleslint-parser-13782" class="hash-link" aria-label="Direct link to eslint-8-support-in-babeleslint-parser-13782" title="Direct link to eslint-8-support-in-babeleslint-parser-13782">​</a></h3><p><code>@babel/eslint-parser</code> now supports ESLint 8: you can update your <code>"eslint"</code> dependency and it will just work.</p><p>If you are an ESLint plugin author, pay attention to the breaking change in the AST for class fields and private methods: when using ESLint 7 they follow the <a href="https://github.com/babel/babel/blob/v7.16.0/packages/babel-parser/ast/spec.md" target="_blank" rel="noopener noreferrer">Babel AST shape</a>; when using ESLint 8 they follow ESLint and the <a href="https://github.com/estree/estree/blob/91f49977f1f05dea86c112a070a703bb37f5722d/es2022.md#propertydefinition" target="_blank" rel="noopener noreferrer">ESTree specification</a>. This is because ESLint introduced support for these new class features starting from ESLint 8.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.15.0 Released: Hack-style pipelines, TypeScript const enums and Rhino target support]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2021/07/26/7.15.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2021/07/26/7.15.0</guid>
            <pubDate>Mon, 26 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[This release enables parsing top-level await (Stage 4 at the May meeting) and transforming ergonomic brand checks for private fields (Stage 4 at the July meeting) by default. There is also now support for the Hack-style pipeline operator. We also improved our TypeScript support, implementing transform support for const enums and namespace aliases, and we expanded our heuristics to add .displayName to React components created by React.createContext() (#13501).]]></description>
            <content:encoded><![CDATA[<p>This release enables parsing top-level await (Stage 4 at the <a href="https://github.com/tc39/agendas/blob/master/2021/05.md" target="_blank" rel="noopener noreferrer">May</a> meeting) and transforming ergonomic brand checks for private fields (Stage 4 at the <a href="https://github.com/tc39/agendas/blob/master/2021/07.md" target="_blank" rel="noopener noreferrer">July</a> meeting) by default. There is also now support for the <a href="https://github.com/js-choi/proposal-hack-pipes" target="_blank" rel="noopener noreferrer">Hack-style</a> pipeline operator. We also improved our TypeScript support, implementing transform support for <code>const</code> enums and namespace aliases, and we expanded our heuristics to add <code>.displayName</code> to React components created by <code>React.createContext()</code> (<a href="https://github.com/babel/babel/pull/13501" target="_blank" rel="noopener noreferrer">#13501</a>).</p><p>We also introduced a new compiler assumption, <a href="https://babeljs.io/docs/en/assumptions#noincompletensimportdetection" target="_blank" rel="noopener noreferrer"><code>noIncompleteNsImportDetection</code></a>, to produce a smaller output when compiling ECMAScript modules to CommonJS without worrying about partially initialized namespace imports caused by module cycles.</p><p>Additionally, you can now specify <a href="https://mozilla.github.io/rhino/" target="_blank" rel="noopener noreferrer">Rhino</a> as a compilation target.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.15.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>We're really grateful for all the support the community has shown over the last months, since our <a href="https://babeljs.io/blog/2021/05/10/funding-update" target="_blank" rel="noopener noreferrer">funding post</a> update in May. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss about sponsorships!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="ecmascript-features-enabled-by-default">ECMAScript features enabled by default<a href="#ecmascript-features-enabled-by-default" class="hash-link" aria-label="Direct link to ECMAScript features enabled by default" title="Direct link to ECMAScript features enabled by default">​</a></h3><p>In the last two meetings, the <a href="https://github.com/tc39/proposal-top-level-await" target="_blank" rel="noopener noreferrer">top-level <code>await</code></a> and <a href="https://github.com/tc39/proposal-private-fields-in-in" target="_blank" rel="noopener noreferrer">ergonomic brand checks for private fields</a> proposals reached Stage 4.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports operator">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#8959a8">as</span><span class="token imports"> db</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"database"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> db</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// top-level await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">DBConnector</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #password</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">isConnector</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">obj</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> #password </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> obj</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ergonomic brand checks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel now supports them by default, so you can remove the following plugins from your configuration:</p><ul><li><code>@babel/plugin-syntax-top-level-await</code></li><li><code>@babel/plugin-syntax-private-property-in-object</code></li><li><code>@babel/plugin-proposal-private-property-in-object</code></li></ul><p>Please note that Babel can currently only parse top-level <code>await</code> and cannot transform it.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-typescript-features-13324-13528">New TypeScript features (<a href="https://github.com/babel/babel/pull/13324" target="_blank" rel="noopener noreferrer">#13324</a>, <a href="https://github.com/babel/babel/pull/13528" target="_blank" rel="noopener noreferrer">#13528</a>)<a href="#new-typescript-features-13324-13528" class="hash-link" aria-label="Direct link to new-typescript-features-13324-13528" title="Direct link to new-typescript-features-13324-13528">​</a></h3><p><a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-4/" target="_blank" rel="noopener noreferrer">TypeScript 4.4</a> doesn't include any new syntax that we had to implement, other than a minor restriction: you cannot specify the value of an abstract class field.</p><div class="language-typescript= codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript= codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">abstract class C {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    abstract prop = 1; // now a SyntaxError!</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, we did add two TypeScript features that we have been missing for a long time: <code>const</code> enums and namespace aliases (<code>import Alias = Namespace</code>).</p><p>Previously we presented an error when using <code>const</code> enums since it requires type information to compile correctly. As a workaround, the community built plugins such as <a href="https://github.com/dosentmatter/babel-plugin-const-enum#readme" target="_blank" rel="noopener noreferrer"><code>babel-plugin-const-enum</code></a>. Babel now ignores the <code>const</code> modifier when compiling enums, which matches TypeScript's behavior when using the <code>--isolatedModules</code> option.</p><p>If you want a more optimized output similar to the default code produced by TypeScript, you can enable the <a href="https://babeljs.io/docs/en/babel-preset-typescript#optimizeconstenums" target="_blank" rel="noopener noreferrer"><code>optimizeConstEnums</code></a> option of <code>@babel/plugin-tranform-typescript</code> or <code>@babel/preset-typescript</code>.</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">enum</span><span class="token plain"> Animals </span><span class="token punctuation">{</span><span class="token plain"> Dog </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token builtin" style="color:#f5871f">console</span><span class="token punctuation">.</span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">Animals</span><span class="token punctuation">.</span><span class="token plain">Dog</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Output (default)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> Animals</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">Animals</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  Animals</span><span class="token punctuation">[</span><span class="token plain">Animals</span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"Dog"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Dog"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token plain">Animals </span><span class="token operator">||</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">Animals </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token builtin" style="color:#f5871f">console</span><span class="token punctuation">.</span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">Animals</span><span class="token punctuation">.</span><span class="token plain">Dog</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Output with `optimizeConstEnums`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token builtin" style="color:#f5871f">console</span><span class="token punctuation">.</span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="hack-style-pipeline-operator-support-13191-13416">Hack-style pipeline operator support (<a href="https://github.com/babel/babel/pull/13191" target="_blank" rel="noopener noreferrer">#13191</a>, <a href="https://github.com/babel/babel/pull/13416" target="_blank" rel="noopener noreferrer">#13416</a>)<a href="#hack-style-pipeline-operator-support-13191-13416" class="hash-link" aria-label="Direct link to hack-style-pipeline-operator-support-13191-13416" title="Direct link to hack-style-pipeline-operator-support-13191-13416">​</a></h3><p><a href="https://github.com/js-choi/proposal-hack-pipes/" target="_blank" rel="noopener noreferrer">"Hack-style pipelines"</a> is a new flavor of the <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">pipeline operator</a> proposal, intended to replace the "smart mix" variant.</p><p>Hack-style pipelines require you to <em>always</em> use a "topic token" (such as <code>#</code>) to reference the value of the previous pipeline step:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token string" style="color:#718c00">"World"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">#</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">!</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">alert</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref</span><span class="token punctuation">,</span><span class="token plain"> _ref2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_ref2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">_ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"World"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">_ref</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">!</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">alert</span><span class="token punctuation">(</span><span class="token plain">_ref2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can test this proposal by enabling the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator#usage" target="_blank" rel="noopener noreferrer"><code>proposal: "hack"</code></a> option in <code>@babel/plugin-proposal-pipeline-operator</code>. You must also choose which topic token to use, between <code>"#"</code> and <code>"%"</code>:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-pipeline-operator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"proposal"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"hack"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"topicToken"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"#"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="preparing-babeleslint-parser-for-babel-8-13398">Preparing <code>@babel/eslint-parser</code> for Babel 8 (<a href="https://github.com/babel/babel/pull/13398" target="_blank" rel="noopener noreferrer">#13398</a>)<a href="#preparing-babeleslint-parser-for-babel-8-13398" class="hash-link" aria-label="Direct link to preparing-babeleslint-parser-for-babel-8-13398" title="Direct link to preparing-babeleslint-parser-for-babel-8-13398">​</a></h3><p>We have been slowly continuing to work on Babel 8 in the past months. We are not ready for a Babel 8 beta release yet, but we are starting to expose the first experimental changes.</p><p>We plan to fully convert Babel from CommonJS to ECMAScript modules, but this has a problem: configuration loading will be asynchronous <em>more often</em>, and <code>@babel/eslint-parser</code> can only work synchronously (because ESLint only supports synchronous parsers).</p><p><code>@babel/eslint-parser</code> 7.15.0 exposes a new entry-point: <code>@babel/eslint-parser/experimental-worker</code>. It moves the Babel config loading and parsing task to a separate worker which is managed synchronously from the main thread, while still supporting async configuration loading. As an immediate advantage for Babel 7, it allows using native ECMAScript modules for Babel configuration files even when using <code>@babel/eslint-parser</code>.</p><p>You can help us by testing it now in your existing projects, and reporting any bug <a href="https://github.com/babel/babel/issues/new?assignees=&amp;labels=i%3A+needs+triage&amp;template=bug_report.yml&amp;title=%5BBug%5D%3A+" target="_blank" rel="noopener noreferrer">on our issues page</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// .eslintrc.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">parser</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"@babel/eslint-parser/experimental-worker"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>ℹ️ This entry-point requires Node.js &gt;= 12.3.0</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel is used by millions, so why are we running out of money?]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2021/05/10/funding-update</link>
            <guid>https://paion-data.github.io/babel-website/blog/2021/05/10/funding-update</guid>
            <pubDate>Mon, 10 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Since 2018, Babel has been doing a funding experiment: can full time work on Babel be sustained? We've learned the answer might be no.]]></description>
            <content:encoded><![CDATA[<p>Since 2018, Babel has been doing a <a href="https://babeljs.io/blog/2019/11/08/babels-funding-plans" target="_blank" rel="noopener noreferrer">funding experiment</a>: can full time work on Babel be sustained? We've learned the answer might be no.</p><p>In November 2019, after successfully paying <a href="https://twitter.com/left_pad" target="_blank" rel="noopener noreferrer">Henry</a> a salary for over a year, we <a href="https://babeljs.io/blog/2019/11/08/babels-funding-plans" target="_blank" rel="noopener noreferrer">expanded our goal</a> to also support three additional maintainers: <a href="https://twitter.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a>, <a href="https://twitter.com/kai_cataldo" target="_blank" rel="noopener noreferrer">Kai</a>, and <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a>.</p><p>Part of the Babel team (<a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a>, <a href="https://twitter.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a> and <a href="https://twitter.com/left_pad" target="_blank" rel="noopener noreferrer">Henry</a>) is still being paid a salary to work on Babel, but we now need to make some adjustments in light of the donations we are currently receiving. This update is to talk about that and ask for further support from the community.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="looking-back">Looking Back<a href="#looking-back" class="hash-link" aria-label="Direct link to Looking Back" title="Direct link to Looking Back">​</a></h2><p>In 2018, Henry <a href="https://www.henryzoo.com/in-pursuit-of-open-source-part-1/" target="_blank" rel="noopener noreferrer">left his job</a> to see if he could make a living working on open source and Babel, looking to people like <a href="https://twitter.com/youyuxi" target="_blank" rel="noopener noreferrer">Evan You</a> as an example and for advice. He had already started work on getting more funding through the <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> that we had set up in 2017 to support the project and specifically our previous core team member <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan Smyth</a>, but it was difficult to do so early on while working half-time.</p><p>After a few months, the fundraising efforts allowed paying Henry every month: we settled on \$11,000 per month as a baseline salary for working full-time on open source. We had a large grant (\$10k for 10 months) from <a href="https://handshake.org/grant-sponsors/" target="_blank" rel="noopener noreferrer">Handshake</a> which initially helped boost our funds, but even when it ended we didn't have problems paying our team thanks to some amazing sponsors such as Airbnb, Trivago, Gatsby, AMP, and Salesforce.</p><p>We didn't want to stop there. We thought that by demonstrating our ability to create and <em>pay</em> a strong team, more features and improvements (and in turn, value) would be delivered via Babel, which would continue the momentum of funding and sponsorship. We decided to start paying <a href="https://twitter.com/jlhwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a>, <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> and <a href="https://twitter.com/kai_cataldo" target="_blank" rel="noopener noreferrer">Kai</a> a "part-time" rate: we could initially afford \$2,000 USD per month. Our hope was by <a href="https://babeljs.io/blog/2019/11/08/babels-funding-plans" target="_blank" rel="noopener noreferrer">announcing this plan</a> and continuing our fundraising efforts, we would be able to increase the budget and raise them to the full-time rate.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="where-babel-is-today">Where Babel is Today<a href="#where-babel-is-today" class="hash-link" aria-label="Direct link to Where Babel is Today" title="Direct link to Where Babel is Today">​</a></h2><p>It has been more than a year since then and we've both done and learned a lot.</p><p><a href="https://babel.dev/docs/en/features-timeline" target="_blank" rel="noopener noreferrer">We've implemented</a> support for many new ECMAScript proposals, kept up with every new TypeScript and Flow release, and designed <a href="https://babel.dev/assumptions" target="_blank" rel="noopener noreferrer">new features</a> to allow producing smaller compiled output. We are now nearing the next major release, Babel 8.</p><p>Babel continues to be used by thousands of <a href="https://babeljs.io/en/users.html" target="_blank" rel="noopener noreferrer">companies all over the world</a>. It's integrated into all kinds of frameworks in the JavaScript ecosystem, whether it's React, Next.js, Vue, Ember, Angular, etc. We are hitting over <a href="https://www.npmjs.com/package/@babel/core" target="_blank" rel="noopener noreferrer">117 million downloads/month</a>. It powers custom plugins and optimizations in varied scenarios like CSS-in-JS, GraphQL, or localization across enormous code bases.</p><p>Babel also has become the intersection where practioners and language designers meet. We believe that it's become a vital part of the process used to test new ECMAscript proposals (hopefully, not with too many unstable proposals in production!). This creates the ability for JavaScript developers to try new features and give feedback to the TC39 committee and ultimately influence how the language evolves. Babel doesn't represent any individual company's interest but hopefully the JavaScript users eagerness to participate in new ideas. Even if you or your company don't directly use Babel, you can still directly benefit from how it can help standardizing language features.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="our-current-funding-situation">Our Current Funding Situation<a href="#our-current-funding-situation" class="hash-link" aria-label="Direct link to Our Current Funding Situation" title="Direct link to Our Current Funding Situation">​</a></h2><p>Every project has unique funding propositions and problems. For Babel, people often don't directly interact with it: like most build tools, you set them up once at the beginning and then forget about them (until you find a bug, sometimes!).</p><p>You won't see job offers for a "Babel developer", even if most of the major JS frameworks are used with Babel. Additionally, with the growth of pre-configured frameworks such as Next.js that lift the responsibility of managing the underlying build tools from their users, it's not uncommon to use Babel without even knowing it. This makes it harder for our users to justify sponsoring us to their companies.</p><p>From the beginning, we knew we wouldn't have enough to pay anyone a full time salary, so Henry has been spending a lot of time attempting to get continued funding, giving talks at conferences and talking to companies. However, 2020 has negatively affected our funding, despite the tech industry's growth during this time. We lost some big sponsors, and Kai had to step down to get full-time work at another job.</p><p>We were hoping to see a continued increase in donations to be able to increase what Jùnliàng and Nicolò where taking, but it didn't happen.</p><p><img loading="lazy" src="https://i.imgur.com/bsSHoRF.png" alt="Chart showing our OpenCollective balance decreasing since mid 2020" class="img_SS3x"></p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-future">The Future<a href="#the-future" class="hash-link" aria-label="Direct link to The Future" title="Direct link to The Future">​</a></h2><p>Despite these funding difficulties, we still want to keep paying our core team, in order to continue improving Babel. We want to focus on making Babel easier to configure, more performant, and produce more optimized output. We want to continue implementing new proposals while also ensuring that existing features are rock solid. We want to be able to spend time on better documentation of not just Babel itself but JavaScript and language design, creating an environment where any developer can tinker with making their own syntax if they choose. There's a large scope not in terms of the code we write but opportunities to bring more people into the language design space for people who might not have ever considered it. We have also published <a href="https://babeljs.io/docs/en/roadmap#babel-2021-roadmap" target="_blank" rel="noopener noreferrer">a roadmap</a> to better communicate our medium-term goals.</p><p>We strongly believe that working in open source should be a viable and sustainable career path. We should be bringing everyone <em>up</em> to the same level, not <em>down</em>. However, we need to face the fact that this would mean draining <a href="https://opencollective.com/babel#category-BUDGET" target="_blank" rel="noopener noreferrer">our current balance</a> in just a few months.</p><p>Everyone taking smaller and smaller amounts ends up creating a false sense of sustainability. It lowers how we value our own work, and what sponsors perceive to be sustainable amount of funding.</p><p>The reality is that, without more funding, we risk not being able to maintain the high standard of support and development that Babel and its users deserve. We risk losing more team members, who deserve to make a decent living in line with their skill level. The open source ecosystem also risks under-supporting a critical and widely used piece of technology.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="our-ask">Our Ask<a href="#our-ask" class="hash-link" aria-label="Direct link to Our Ask" title="Direct link to Our Ask">​</a></h2><p>For now, Nicolò, Henry, and Jùnliàng will all be paid a temporary rate of \$6,000 per month. This doesn't solve the problem, but it gives us time while increasing the initial temporary \$2,000 USD salaries. The burn rate will still be more than the donations we currently receive each month, but our current balance allows us to sustain this amount until the end of 2021.</p><p>We'll do our best to balance all the priorities, while at reduced capacity due to being able to fund less of people's time and needing to spend some of that time finding new sponsors. Babel is not a company, a product, or service. And we have a small team, so we are the same people working on engineering and on funding. But it's a compromise we don't think we should have to make, considering the huge value that Babel delivers.</p><p>To fully fund the currently paid maintainers (but we would like to expand who is being paid, to include the whole core team), we need at least \$333,000 per year, which is 2x what we're currently bringing in. Considering the amounts of money in the tech sector, this seems tiny in comparison—but it would make a big difference to Babel. Our story and stories like it make a big difference to the health and sustainability of the open source ecosystem overall.</p><p><strong>So, our ask is to help fund our work</strong>, via <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and <a href="https://github.com/sponsors/babel" target="_blank" rel="noopener noreferrer">GitHub Sponsors</a>. Though individual contributions do matter (and we deeply appreciate them), we are really looking for more companies to step up and become <a href="https://opencollective.com/babel/contribute" target="_blank" rel="noopener noreferrer">corporate sponsors</a>, alongside our current sponsors like AMP, Airbnb, Salesforce, GitPod, and others. If it would be better for your company to sustain us in other ways, we are also open to hearing any ideas. Reach out to us directly or by email at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a>.</p><p>We intensely hope that we'll reach our goals: more and more companies use Babel to deliver their products, and what we are asking for is a tiny fraction of the value we provide. Babel is relied upon by a big part of the web, and it's in the interests of everyone to ensure that the project continues being maintained at the same quality levels as it is now.</p><div style="display:flex;justify-content:space-around;align-items:center"><a href="https://opencollective.com/babel/donate" target="_blank" rel="noopener noreferrer" style="all:unset;cursor:pointer"><img loading="lazy" alt="Donate to our OpenCollective!" src="https://opencollective.com/babel/donate/button@2x.png?color=blue" width="300" class="img_SS3x"></a><iframe src="https://github.com/sponsors/babel/button" title="Sponsor Babel on GitHub" height="35" width="300" style="border:0;background:transparent"></iframe></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2021/04/29/7.14.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2021/04/29/7.14.0</guid>
            <pubDate>Thu, 29 Apr 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Babel 7.14.0 is out!]]></description>
            <content:encoded><![CDATA[<p>Babel 7.14.0 is out!</p><p>This release enables class fields and private methods by default (they were promoted to Stage 4 during the recent April <a href="https://github.com/tc39/agendas/blob/master/2021/04.md" target="_blank" rel="noopener noreferrer">TC39 meeting</a>!) and adds brand checks for private fields and static class blocks to <code>@babel/preset-env</code>'s <code>shippedProposals</code> option.</p><p>We added support for Stage 1 <a href="https://github.com/tc39/proposal-async-do-expressions" target="_blank" rel="noopener noreferrer">async do expressions</a> (using <code>@babel/plugin-proposal-async-do-expressions</code>), which extends the Stage 1 <a href="https://github.com/tc39/proposal-do-expressions" target="_blank" rel="noopener noreferrer">do expression</a> proposal.</p><p>Thanks to <a href="https://github.com/sosukesuzuki" target="_blank" rel="noopener noreferrer">Sosuke Suzuki</a> and <a href="https://github.com/g-plane" target="_blank" rel="noopener noreferrer">Pig Fang</a>, Babel can now handle <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-beta/" target="_blank" rel="noopener noreferrer">TypeScript 4.3</a> features. <code>@babel/parser</code>  also has a new option to correctly parse <a href="https://www.typescriptlang.org/docs/handbook/declaration-files/introduction.html" target="_blank" rel="noopener noreferrer">TypeScript declaration</a> files.</p><p>Finally, we introduced a new <code>importInterop: node</code> option to make it easier to produce dual modules by compiling ECMAScript imports to CommonJS that follow Node.js semantics.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.14.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-class-features-enabled-by-default">New class features enabled by default<a href="#new-class-features-enabled-by-default" class="hash-link" aria-label="Direct link to New class features enabled by default" title="Direct link to New class features enabled by default">​</a></h3><p>The class fields and private methods proposals just reached Stage 4 and will be officially included in ECMAScript 2022! This was more of a formality since the semantics were already finalized and they've already been implemented in all the major browsers.</p><p>You can read more details about this new syntax on MDN (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields" target="_blank" rel="noopener noreferrer">public fields</a>, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields" target="_blank" rel="noopener noreferrer">private fields and methods</a>).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Check</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> className </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Check"</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// static public class field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #value </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// # means private!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">get</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#double</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// private getter</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#value</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// using a private field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thus, you can remove <code>@babel/plugin-proposal-class-properties</code> and <code>@babel/plugin-proposal-private-methods</code>, since they are now enabled by default in <a href="https://babeljs.io/docs/en/babel-preset-env" target="_blank" rel="noopener noreferrer"><code>@babel/preset-env</code></a>.</p><blockquote><p>⚠️ Webpack supports this syntax natively as of <a href="https://github.com/webpack/webpack/releases/tag/v5.36.0" target="_blank" rel="noopener noreferrer">v5.36.0</a>.
For older versions, a workaround that works with simpler Webpack setups is to manually enable the <code>acorn-stage3</code> plugin, by installing <code>acorn-stage3</code> and adding these lines at the beginning of your <code>webpack.config.js</code> file:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> acorn </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token plain">require</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"acorn"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">paths</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">require</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"webpack"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Require webpack's acorn dependency</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">acorn</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Parser</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> acorn</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Parser</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">extend</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"acorn-stage3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Enable the Stage 3 plugin</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If this doesn't work for you, or if you use a different tool that doesn't support class fields, you still need to use the Babel plugins to transform them.</p></blockquote><p>If you are using <code>@babel/preset-env</code>'s <a href="https://babeljs.io/docs/en/babel-preset-env#shippedproposals" target="_blank" rel="noopener noreferrer"><code>shippedProposals</code></a> option, it now also includes the <code>@babel/plugin-proposal-private-property-in-object</code> (introduced in <a href="https://babel.dev/blog/2020/05/25/7.10.0#private-fields-in-in-11372httpsgithubcombabelbabelpull11372" target="_blank" rel="noopener noreferrer">7.10</a>) and <code>@babel/plugin-proposal-class-static-block</code> (introduced in <a href="https://babel.dev/blog/2020/10/15/7.12.0#class-static-blocks-12079httpsgithubcombabelbabelpull12079-12143httpsgithubcombabelbabelpull12143" target="_blank" rel="noopener noreferrer">7.12</a>) plugins: you can safely remove them from your configuration.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #bar </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">obj</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> #bar </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> obj</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// private-property-in-object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> #x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> y</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// static block</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">doSomethingWith</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"unknown"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="better-esm-cjs-interop">Better ESM-CJS interop<a href="#better-esm-cjs-interop" class="hash-link" aria-label="Direct link to Better ESM-CJS interop" title="Direct link to Better ESM-CJS interop">​</a></h3><p>When importing a CommonJS file from an ECMAScript module, Node.js has different semantics than most of the tools in the JavaScript ecosystem.</p><p>Suppose that you are depending on the following library:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And the author of this library doesn't publish it as-is, but compiles it to CommonJS:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token string" style="color:#718c00">"use strict"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token plain">exports</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"__esModule"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">exports</span><span class="token punctuation">.</span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> two</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When importing this library with Babel (or TypeScript, Rollup or similar tools) and compiling your code to CommonJS, it will look like:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">two</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"two"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>One day, you decide to provide two versions of your code: a compiled CommonJS one, and one using native ECMAScript modules.</p><p>While the compiled version works, the ESM one will throw <code>TypeError: two is not a function</code>. This is because in Node.js, the default import is <em>not</em> the dependency's <code>exports.default</code>, but the whole <code>module.exports</code> object instead.</p><p>You could change your code to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">two</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"two"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">two</span><span class="token punctuation">.</span><span class="token keyword module" style="color:#8959a8">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, this new code has a problem: it now doesn't work when compiled, because <code>two.default</code> is not a function.</p><p>Babel v7.14.0 adds a new <code>importInterop: "node"</code> option in the <a href="https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-transform-modules-commonjs</code></a> plugin that allows <code>import</code> statements to match the native Node.js behavior. You can read more about this option <a href="https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#importInterop" target="_blank" rel="noopener noreferrer">in the docs</a>.</p><p><a href="https://github.com/nicolo-ribaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> from our team also <a href="https://github.com/rollup/plugins/pull/838" target="_blank" rel="noopener noreferrer">contributed</a> a similar option to <code>@rollup/plugin-commonjs</code>, which will be out in the next release. Our goal is to help the ecosystem migrate to native ECMAScript modules by providing an easier migration path.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-43">TypeScript 4.3<a href="#typescript-43" class="hash-link" aria-label="Direct link to TypeScript 4.3" title="Direct link to TypeScript 4.3">​</a></h3><p>The new TypeScript version, which will be released as stable in May, supports a few new features:</p><ul><li><code>override</code> modifiers in class elements</li><li>static index signatures (<code>[key: KeyType]: ValueType</code>) in classes</li><li><code>get</code>/<code>set</code> in type declarations</li></ul><p>You can read more about them in the <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-3/" target="_blank" rel="noopener noreferrer">TypeScript 4.3 release post</a>. This is supported through <a href="https://babeljs.io/docs/en/babel-preset-typescript" target="_blank" rel="noopener noreferrer">@babel/preset-typescript</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="async-do-expressions"><code>async do</code> expressions<a href="#async-do-expressions" class="hash-link" aria-label="Direct link to async-do-expressions" title="Direct link to async-do-expressions">​</a></h3><p><a href="https://github.com/tc39/proposal-async-do-expressions" target="_blank" rel="noopener noreferrer"><code>async do</code> expressions</a> are a Stage 1 proposal built on top of the <a href="https://github.com/tc39/proposal-do-expressions" target="_blank" rel="noopener noreferrer"><code>do</code> expressions</a> proposal.</p><p>They allow using asynchronous blocks within synchronous code, and those blocks are evaluated as a promise:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">async</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">do</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> res </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Third!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Second!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    res</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"First!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  x</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token property-access">log</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Logs:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// - "First!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// - "Second!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// - "Third!"</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can test this proposal (and report feedback!) by adding the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-do-expressions" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-do-expressions</code></a> and <a href="https://babeljs.io/docs/en/babel-plugin-proposal-async-do-expressions" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-async-do-expressions</code></a> plugins to your Babel configuration.</p><blockquote><p>⚠️ These proposals are <em>highly experimental</em>. They can, and likely will continue to evolve. It could take years before they are standardized, and may even be rejected altogether. You are welcome to test them, but we do not recommend using them in production.</p></blockquote><hr><p>Do you have any comment or question? Discuss <a href="https://github.com/babel/babel/discussions/13230" target="_blank" rel="noopener noreferrer">on GitHub</a>!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2021/02/22/7.13.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2021/02/22/7.13.0</guid>
            <pubDate>Fri, 01 Jan 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published Babel 7.13.0, the first minor release of 2021!]]></description>
            <content:encoded><![CDATA[<p>We just published Babel 7.13.0, the first minor release of 2021!</p><p>This release includes some important features to <code>@babel/core</code>: a <code>targets</code> option (similar to <code>@babel/preset-env</code>'s one) that can be shared across different plugins, an <code>assumptions</code> option to precisely tune your configuration to produce a smaller compilation output, and support for plugins and presets written using native ECMAScript modules.</p><p>Babel now supports transforming the <a href="https://github.com/tc39/proposal-record-tuple" target="_blank" rel="noopener noreferrer">Records and Tuples</a> ECMAScript proposal, which brings immutable data structures and structural equality to JavaScript, and parsing the <a href="https://github.com/tc39/proposal-js-module-blocks" target="_blank" rel="noopener noreferrer">Module Blocks</a> proposal.</p><p>Additionally, we added support for some new Flow and TypeScript features.</p><p>You can read the full changelog on <a href="https://github.com/babel/babel/releases/tag/v7.13.0" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="funding-update">Funding Update<a href="#funding-update" class="hash-link" aria-label="Direct link to Funding Update" title="Direct link to Funding Update">​</a></h3><p>We have joined the "GitHub Sponsors for organizations" program, so you can now sponsor us directly through GitHub 😊.</p><iframe src="https://github.com/sponsors/babel/button" title="Sponsor Babel on GitHub" height="35" width="116" style="border:0;margin:auto;display:block"></iframe><p>These funds are used to support our team's (currently one full-time and three part-time maintainers) continued efforts in improving stability and developing new features.</p><p>Both our donations and expenses are openly tracked through our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> page, where we will also track donations coming from GitHub Sponsors.</p><p>We welcome donations from both individual and companies. If your company is interested in becoming a Gold tier sponsor (\$1k/month) and wants to discuss more, please reach out to <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a>!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="top-level-targets-option-12189-rfc">Top-level <code>targets</code> option (<a href="https://github.com/babel/babel/pull/12189" target="_blank" rel="noopener noreferrer">#12189</a>, <a href="https://github.com/babel/rfcs/pull/2" target="_blank" rel="noopener noreferrer">RFC</a>)<a href="#top-level-targets-option-12189-rfc" class="hash-link" aria-label="Direct link to top-level-targets-option-12189-rfc" title="Direct link to top-level-targets-option-12189-rfc">​</a></h3><p><code>@babel/preset-env</code>'s <code>targets</code> option allows users to specify their target environments, automatically choosing which syntax to transform and what polyfills to inject. Since releasing <code>@babel/preset-env</code>, we've learned that plugins <em>themselves</em> can also benefit from knowing your targets. Currently, this can a bit cumbersome, as you have to specify your targets twice (for example, if you are using our <a href="https://github.com/babel/babel-polyfills" target="_blank" rel="noopener noreferrer">new polyfill plugins</a>). By introducing <code>targets</code> as a top level option, you now only have to specify your targets once:</p><table><tbody style="width:100%;display:table;table-layout:fixed"><tr><th>Old configuration</th><th>New configuration</th></tr><tr><td><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"&gt;1%, not ie 11"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"polyfill-es-shims"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"&gt;1%, not ie 11"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSON</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"&gt;1%, not ie 11"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"polyfill-es-shims"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>We recommended converting your Babel config to use the new top-level <code>targets</code> option, as it has the following additional benefits:</p><ol><li>It has better handling of the <a href="https://babel.dev/docs/en/options#targetsesmodules" target="_blank" rel="noopener noreferrer"><code>esmodules: true</code></a> target. (it's intersected with the other targets, rather than replacing them)</li><li>As we introduce additional <code>targets</code>-related support in our plugins, you'll automatically benefit from more optimized output!</li></ol><p>You can read the details about this new option in its <a href="https://github.com/babel/rfcs/blob/master/rfcs/0002-top-level-targets.md" target="_blank" rel="noopener noreferrer">RFC</a>.</p><blockquote><p>🔮 In the future we might explore moving <code>@babel/preset-env</code> into <code>@babel/core</code> so that you don't have to install an additional package to get started with Babel. This new option can be seen as the first step in that direction!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="top-level-assumptions-option-12219-rfc">Top-level <code>assumptions</code> option (<a href="https://github.com/babel/babel/pull/12219" target="_blank" rel="noopener noreferrer">#12219</a>, <a href="https://github.com/babel/rfcs/pull/5" target="_blank" rel="noopener noreferrer">RFC</a>)<a href="#top-level-assumptions-option-12219-rfc" class="hash-link" aria-label="Direct link to top-level-assumptions-option-12219-rfc" title="Direct link to top-level-assumptions-option-12219-rfc">​</a></h3><p>Many of our plugins have a <code>loose</code> option, which tells Babel to generate smaller/faster output by making certain assumptions about your code and ignoring certain edge cases in the JavaScript spec.</p><p>However, <code>loose</code> has some problems that lead to user confusion: the term itself does not help to describe how exactly it affects the compiler's behavior and, worse, sometimes requires setting configuration for multiple plugins to ensure everything compiles.</p><p>To help fix these problems, we've added a new top level option to tell Babel which assumptions it can make about your code: <code>assumptions</code>! Similar to the new <code>targets</code> option, every plugin will now receive the assumptions you've enabled, eliminating the need to set the option individually. This is really valuable since a plugin can be influenced by multiple assumptions, and an assumption can influence multiple plugins.</p><blockquote><p>⚠️ This is <strong>advanced</strong> functionality. Like the previous <code>loose</code> option, please be careful when enabling assumptions, because they are <em>not</em> spec-compliant and may break your code in unexpected ways.</p></blockquote><p>For example, when transforming classes, Babel will generate this output by default:</p><table><tbody style="width:100%;display:table;table-layout:fixed"><tr><th>Input</th><th>Output</th></tr><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Test</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// You can test the thrown error in the console:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Uncaught TypeError: class constructors must be invoked with 'new'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">instance</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter maybe-class-name" style="color:#f5871f">Constructor</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token plain">instance </span><span class="token keyword" style="color:#8959a8">instanceof</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Constructor</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">TypeError</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Test</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token maybe-class-name">Test</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// You can test the thrown error in the console:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Uncaught TypeError: class constructors must be invoked with 'new'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>However, enabling the <code>noClassCalls</code> assumption tells Babel "I'm never trying to call classes without <code>new</code>, so you can compile without worrying about it":</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSON</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"firefox 30"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"assumptions"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token property">"noClassCalls"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><table><tbody style="width:100%;display:table;table-layout:fixed"><tr><th>Input</th><th>Output</th></tr><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Test</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Won't throw since we violated the assumption</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Test</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Won't throw since we violated the assumption</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function maybe-class-name" style="color:#4271ae">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>Check out the full list of assumptions <a href="https://babeljs.io/assumptions" target="_blank" rel="noopener noreferrer">over in our documentation</a>, where you can individually enable or disable them to see how they affect the compiled output.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="records-and-tuples-support-12145">Records and Tuples support (<a href="https://github.com/babel/babel/pull/12145" target="_blank" rel="noopener noreferrer">#12145</a>)<a href="#records-and-tuples-support-12145" class="hash-link" aria-label="Direct link to records-and-tuples-support-12145" title="Direct link to records-and-tuples-support-12145">​</a></h3><p>Thanks to a collaboration with <a href="https://www.techatbloomberg.com/" target="_blank" rel="noopener noreferrer">Bloomberg</a>, Babel now supports transforming the <a href="https://github.com/tc39/proposal-record-tuple" target="_blank" rel="noopener noreferrer">"Records and Tuples" stage 2 proposal</a>.</p><p>The Babel plugin transforms records and tuples syntax using the global <code>Record</code> and <code>Tuple</code> functions:</p><table><tbody style="width:100%;display:table;table-layout:fixed"><tr><th>Input</th><th>Output</th></tr><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> data </span><span class="token operator">=</span><span class="token plain"> #</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Babel"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">ids</span><span class="token operator">:</span><span class="token plain"> #</span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> data </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Record</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Babel"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">ids</span><span class="token operator">:</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Tuple</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>This means that you will need to load a polyfill for those global functions, such as <a href="https://www.npmjs.com/package/@bloomberg/record-tuple-polyfill" target="_blank" rel="noopener noreferrer"><code>@bloomberg/record-tuple-polyfill</code></a>, either by importing it in your code or with a <code>&lt;script&gt;</code> tag:</p><div class="language-html codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-html codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">script</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#f5871f">=</span><span class="token tag attr-value punctuation" style="color:#f5871f">"</span><span class="token tag attr-value" style="color:#f5871f">https://unpkg.com/@bloomberg/record-tuple-polyfill@0.0.3/lib/index.umd.js</span><span class="token tag attr-value punctuation" style="color:#f5871f">"</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>NOTE</strong>: No engine currently supports records and tuples, so you always need to load the polyfill.</p></blockquote><p>In order to enable this transform, you need to add <code>@babel/plugin-proposal-record-and-tuple</code> to your configuration.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-flow-features-12193-12234">New Flow features (<a href="https://github.com/babel/babel/pull/12193" target="_blank" rel="noopener noreferrer">#12193</a>, <a href="https://github.com/babel/babel/pull/12234" target="_blank" rel="noopener noreferrer">#12234</a>)<a href="#new-flow-features-12193-12234" class="hash-link" aria-label="Direct link to new-flow-features-12193-12234" title="Direct link to new-flow-features-12193-12234">​</a></h3><p>Babel 7.13.0 has support for two new Flow features:</p><ul><li><p><code>this</code> type annotation in functions, that allow you to specify the type of the <code>this</code> object as if it was a parameter</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">getPerson</span><span class="token punctuation">(</span><span class="token parameter keyword" style="color:#8959a8">this</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter maybe-class-name" style="color:#f5871f">Database</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter literal-property property" style="color:#f5871f">id</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">instanceof</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Database</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><code>enum</code> declarations with unknown members</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">enum</span><span class="token plain"> </span><span class="token maybe-class-name">PetKind</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token maybe-class-name">Dog</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token maybe-class-name">Cat</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token maybe-class-name">Snake</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-42-support-12628">TypeScript 4.2 support (<a href="https://github.com/babel/babel/pull/12628" target="_blank" rel="noopener noreferrer">#12628</a>)<a href="#typescript-42-support-12628" class="hash-link" aria-label="Direct link to typescript-42-support-12628" title="Direct link to typescript-42-support-12628">​</a></h3><p><a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/" target="_blank" rel="noopener noreferrer">TypeScript 4.2</a> supports some new syntax features such as abstract constructor signatures.</p><p>You can read more about the changes in <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/" target="_blank" rel="noopener noreferrer">the TypeScript release post</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="automatic-es-modules-in-babelruntime-12632">Automatic ES modules in <code>@babel/runtime</code> (<a href="https://github.com/babel/babel/pull/12632" target="_blank" rel="noopener noreferrer">#12632</a>)<a href="#automatic-es-modules-in-babelruntime-12632" class="hash-link" aria-label="Direct link to automatic-es-modules-in-babelruntime-12632" title="Direct link to automatic-es-modules-in-babelruntime-12632">​</a></h3><p><code>@babel/runtime</code> contains all of the Babel runtime helpers in both CommonJS and ECMAScript module formats.</p><p>Until now, you had to manually choose which one you wanted to use, specifying the <code>useESModules</code> option of <code>@babel/plugin-transform-runtime</code>.</p><p>We have now reorganized <code>@babel/runtime</code>'s internal structure, leveraging the new <a href="https://nodejs.org/api/packages.html#packages_package_entry_points" target="_blank" rel="noopener noreferrer"><code>"exports"</code></a> <code>package.json</code> field supported by Node.js and bundlers, so that they are able to automatically choose between CJS and ESM.</p><p>For this reason, the <code>useESModules</code> option is now deprecated and will be removed in Babel 8.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.12.0 Released: TypeScript 4.1, strings as import/export names, and class static blocks]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/10/15/7.12.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/10/15/7.12.0</guid>
            <pubDate>Mon, 12 Oct 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[We just published a new minor version of Babel!]]></description>
            <content:encoded><![CDATA[<p>We just published a new minor version of Babel!</p><p>This release includes support for the new TypeScript 4.1 beta features: <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#template-literal-types" target="_blank" rel="noopener noreferrer">template literal types</a> and <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#key-remapping-mapped-types" target="_blank" rel="noopener noreferrer">key remapping in mapped types</a>.</p><p>Additionally, we implemented two new ECMAScript proposals: <a href="https://github.com/tc39/proposal-class-static-block" target="_blank" rel="noopener noreferrer">class static blocks</a> and <a href="https://github.com/tc39/ecma262/pull/2154" target="_blank" rel="noopener noreferrer">imports and exports with string names</a>.</p><p>Lastly, we renamed <code>@babel/plugin-syntax-module-attributes</code> (and the corresponding parser plugin <code>moduleAttributes</code>) to <code>@babel/plugin-syntax-import-assertions</code> (and <code>importAssertions</code>), to match the recent <a href="https://github.com/tc39/proposal-import-assertions" target="_blank" rel="noopener noreferrer">proposal</a> updates. The old plugin will work until Babel 8, but it's deprecated now.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.12.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights">Highlights<a href="#highlights" class="hash-link" aria-label="Direct link to Highlights" title="Direct link to Highlights">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-41-12129-12131">TypeScript 4.1 (<a href="https://github.com/babel/babel/pull/12129" target="_blank" rel="noopener noreferrer">#12129</a>, <a href="https://github.com/babel/babel/pull/12131" target="_blank" rel="noopener noreferrer">#12131</a>)<a href="#typescript-41-12129-12131" class="hash-link" aria-label="Direct link to typescript-41-12129-12131" title="Direct link to typescript-41-12129-12131">​</a></h3><p>TypeScript 4.1 beta <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/#key-remapping-mapped-types" target="_blank" rel="noopener noreferrer">was announced</a> a few weeks ago, and it includes new syntax features for types.</p><p><strong>Template literal types</strong> allow concatenating strings at the type-level, using the template literal syntax:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Events</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Click"</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Focus"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Handler</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token constant" style="color:#f5871f">K</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">on</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">Events</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">Function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> handler</span><span class="token operator">:</span><span class="token plain"> Handler </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Ok</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">onFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Ok</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">onHover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Error!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Together with <strong>key remapping in mapped types</strong>, they can be used to represent complex object transformations:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Getters</span><span class="token class-name operator" style="color:#eab700">&lt;</span><span class="token class-name constant" style="color:#f5871f">T</span><span class="token class-name operator" style="color:#eab700">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token constant" style="color:#f5871f">K</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">keyof</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">as</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">get</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">Capitalize</span><span class="token template-string interpolation operator">&lt;</span><span class="token template-string interpolation constant" style="color:#f5871f">K</span><span class="token template-string interpolation operator">&gt;</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">=&gt;</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token punctuation">[</span><span class="token constant" style="color:#f5871f">K</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Dog</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">;</span><span class="token plain"> age</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">number</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> lazyDog</span><span class="token operator">:</span><span class="token plain"> Getters</span><span class="token operator">&lt;</span><span class="token plain">Dog</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/* ... */</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">lazyDog</span><span class="token punctuation">.</span><span class="token function" style="color:#4271ae">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">lazyDog</span><span class="token punctuation">.</span><span class="token plain">age</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// error!</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can read more about TypeScript 4.1 in the <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-1-beta/" target="_blank" rel="noopener noreferrer">release announcement</a>, or check <a href="https://github.com/ghoullier/awesome-template-literal-types" target="_blank" rel="noopener noreferrer">other examples</a> of what capabilities these new features unlock. However, remember that TypeScript 4.1 is still experimental!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="class-static-blocks-12079-12143">Class static blocks (<a href="https://github.com/babel/babel/pull/12079" target="_blank" rel="noopener noreferrer">#12079</a>, <a href="https://github.com/babel/babel/pull/12143" target="_blank" rel="noopener noreferrer">#12143</a>)<a href="#class-static-blocks-12079-12143" class="hash-link" aria-label="Direct link to class-static-blocks-12079-12143" title="Direct link to class-static-blocks-12079-12143">​</a></h3><blockquote><p><a href="https://babel.dev/repl/build/29530/#?browsers=&amp;build=&amp;builtIns=false&amp;spec=false&amp;loose=true&amp;code_lz=MYGwhgzhAEDC0G8BQ1oQC5nQS2NAHtALzQAsATANwpqY54Ce1qGWuiNq6ATgx6gOjoAFtggA6PiQAmAewDKsgLYBTEdgB2AcwDq2EQAp1E_AEpmAgL6dowLMGH9BQ0RKnQARAFcNAaw2yAO4aHhao1uFIlkA&amp;debug=false&amp;forceAllTransforms=false&amp;shippedProposals=false&amp;circleciRepo=&amp;evaluate=false&amp;fileSize=false&amp;timeTravel=false&amp;sourceType=module&amp;lineWrap=true&amp;presets=stage-2%2Ctypescript&amp;prettier=true&amp;targets=&amp;version=7.11.6%2Bpr.12143&amp;externalPlugins=" target="_blank" rel="noopener noreferrer">Example on Babel REPL</a></p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> #x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> y</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">doSomethingWith</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">y</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"unknown"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This stage 2 proposal allows you to apply additional static initializations when a class definition is evaluated. It is not intended to replace static fields but to enable new use cases that could not be accomplished before. In the example above, the static property <code>y</code> is initialized using <code>#x</code>. If <code>doSomethingWith(this.#x)</code> throws, <code>y</code> will be assigned by a default value <code>"unknown"</code>.</p><p>You can read more about it in the <a href="https://github.com/tc39/proposal-class-static-block/blob/master/README.md" target="_blank" rel="noopener noreferrer">proposal's description</a>.</p><p>Thanks to <a href="https://twitter.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a>, you can test this proposal by installing
the <code>@babel/plugin-proposal-class-static-block</code> plugin and adding it to your Babel config. Since it is likely you're already using other class feature plugins, be sure to place this plugin <em>before</em> the others:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-class-static-block"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-class-properties"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>ℹ️ Babel implements an <a href="https://github.com/tc39/proposal-class-static-block/pull/15" target="_blank" rel="noopener noreferrer">updated</a> version of spec, which addresses <a href="https://github.com/tc39/proposal-class-static-block/issues?q=is%3Aissue+author%3AJLHwung+created%3A%3C2020-10-07" target="_blank" rel="noopener noreferrer">feedback</a> we have provided based on the <a href="https://github.com/tc39/proposal-class-static-block/commit/1bfccb28a8174f6ca3f92242bd9589985190100c" target="_blank" rel="noopener noreferrer">current</a> spec.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="imports-and-exports-with-string-names-12091">Imports and exports with string names (<a href="https://github.com/babel/babel/pull/12091" target="_blank" rel="noopener noreferrer">#12091</a>)<a href="#imports-and-exports-with-string-names-12091" class="hash-link" aria-label="Direct link to imports-and-exports-with-string-names-12091" title="Direct link to imports-and-exports-with-string-names-12091">​</a></h3><p>Consensus was achieved during the last TC39 meeting with <a href="https://github.com/tc39/ecma262/pull/2154" target="_blank" rel="noopener noreferrer">a PR</a> to allow strings as the name of imported and exported variables:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// emojis.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> happy </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"wooo!"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> happy </span><span class="token keyword module" style="color:#8959a8">as</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"😃"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// main.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"😃"</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">as</span><span class="token plain"> smile </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./emojis.js"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">smile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// wooo!</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This allows using any valid UTF-16 name across modules, making JavaScript fully compatible with other languages such as WebAssembly.</p><p>You can enable <em>parsing</em> support for this feature by adding <code>@babel/plugin-syntax-module-string-names</code> to your configuration:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string" style="color:#718c00">"presets:"</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/syntax-module-string-names"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This feature will be enabled by <em>default</em> as soon as the syntax is merged into the main ECMAScript specification.</p><p>Please note that it's not possible to transpile arbitrary strings to ES2015-style imports and exports: they will only be transpiled when targeting a different modules system such as CommonJS.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="import-assertions-parsing-12139">Import assertions parsing (<a href="https://github.com/babel/babel/pull/12139" target="_blank" rel="noopener noreferrer">#12139</a>)<a href="#import-assertions-parsing-12139" class="hash-link" aria-label="Direct link to import-assertions-parsing-12139" title="Direct link to import-assertions-parsing-12139">​</a></h2><p>The "module attributes" proposal has been significantly changed and also renamed to "import assertions".</p><p>We've implemented parsing support for this new version of the proposal, which can be enabled using the <code>@babel/plugin-syntax-import-assertions</code> plugin (or, if you are directly using <code>@babel/parser</code>, <code>importAssertions</code>):</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  "plugins": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">    ["@babel/syntax-module-attributes", { "version": "may-2020" }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">    "@babel/syntax-import-assertions"</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">  ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The most significant syntax changes are that the <code>with</code> keyword has been replaced with <code>assert</code> and assertions are now wrapped in curly braces:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">json</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./foo.json"</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">assert</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"json"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"foo.json"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">assert</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"json"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can read more about these changes in the <a href="https://github.com/tc39/proposal-import-assertions#readme" target="_blank" rel="noopener noreferrer">proposal's README</a>.</p><blockquote><p>⚠️ <code>@babel/plugin-syntax-module-attributes</code> will continue working until we release Babel 8.0.0, but will no longer be maintained, so we highly recommended migrating to the new plugin.</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.11.0 Released: ECMAScript 2021 support in preset-env, TypeScript 4.0 support, printing config and the future of `babel-eslint`]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/07/30/7.11.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/07/30/7.11.0</guid>
            <pubDate>Thu, 30 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[We just released a new minor version of Babel!]]></description>
            <content:encoded><![CDATA[<p>We just released a new minor version of Babel!</p><p>This 7.11 release includes:</p><ul><li><code>preset-env</code> support for Logical Assignments (<code>??=</code>), Numeric Separators (<code>1_2</code>) and Namespace re-exports (<code>export * as ns from ...</code>)</li><li>TypeScript 4.0 support</li><li>Parser support for the Stage-1 <a href="https://github.com/tc39/proposal-decimal" target="_blank" rel="noopener noreferrer">Decimal proposal</a> (<code>7.11m</code>)</li><li>An environment flag to print the resolved Babel configuration for a given file (<code>BABEL_SHOW_CONFIG_FOR</code>)</li></ul><p>In addition to this, we are now releasing the successor of <code>babel-eslint</code>: <code>@babel/eslint-parser</code>!</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.11.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>Also if you have any questions or something you want to discuss, we've enabled <a href="https://github.com/babel/babel/discussions" target="_blank" rel="noopener noreferrer">GitHub Discussions</a> on our repository!</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="ecmascript-2021-support-11864">ECMAScript 2021 support (<a href="https://github.com/babel/babel/pull/11864" target="_blank" rel="noopener noreferrer">#11864</a>)<a href="#ecmascript-2021-support-11864" class="hash-link" aria-label="Direct link to ecmascript-2021-support-11864" title="Direct link to ecmascript-2021-support-11864">​</a></h2><p>During the last <a href="https://github.com/tc39/agendas/blob/master/2020/09.md" target="_blank" rel="noopener noreferrer">meeting</a>, TC39 moved both the logical assignment and numeric separator proposals to Stage 4! Babel already had support these proposals via the <code>@babel/plugin-proposal-logical-assignment-operators</code> and <code>@babel/plugin-proposal-numeric-separators</code> plugins. They are now included in <code>@babel/preset-env</code> and compiled based on your targets, like any other ECMAScript feature.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="logical-assignment"><a href="https://babeljs.io/docs/en/babel-plugin-proposal-logical-assignment-operators" target="_blank" rel="noopener noreferrer">Logical Assignment</a><a href="#logical-assignment" class="hash-link" aria-label="Direct link to logical-assignment" title="Direct link to logical-assignment">​</a></h3><p>Logical assignment offers a shorthand notation combining logical operators and assignment expression:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">disabled</span><span class="token plain"> </span><span class="token operator">??=</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">disabled</span><span class="token plain"> </span><span class="token operator">??</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">disabled</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">clicked </span><span class="token operator">&amp;&amp;=</span><span class="token plain"> </span><span class="token operator">!</span><span class="token function" style="color:#4271ae">isDoubleClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">clicked </span><span class="token operator">=</span><span class="token plain"> clicked </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token operator">!</span><span class="token function" style="color:#4271ae">isDoubleClicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">hasDups </span><span class="token operator">||=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">prev </span><span class="token operator">===</span><span class="token plain"> cur</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token plain">hasDup</span><span class="token punctuation">)</span><span class="token plain"> hasDups </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">prev </span><span class="token operator">===</span><span class="token plain"> cur</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="numeric-separator"><a href="https://babeljs.io/docs/en/babel-plugin-proposal-numeric-separator" target="_blank" rel="noopener noreferrer">Numeric Separator</a><a href="#numeric-separator" class="hash-link" aria-label="Direct link to numeric-separator" title="Direct link to numeric-separator">​</a></h3><p>The numeric separator (<code>_</code>) is a character you can insert between digits in numeric literals to help with visual separation:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">1_000_000_000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">0.000_000_000_1</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="export-namespace-from-11849"><a href="https://babeljs.io/docs/en/babel-plugin-proposal-export-namespace-from" target="_blank" rel="noopener noreferrer">Export namespace from</a> (<a href="https://github.com/babel/babel/pull/11849" target="_blank" rel="noopener noreferrer">#11849</a>)<a href="#export-namespace-from-11849" class="hash-link" aria-label="Direct link to export-namespace-from-11849" title="Direct link to export-namespace-from-11849">​</a></h3><p>An imported module can be re-exported as a new namespace:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports operator">*</span><span class="token exports"> </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> ns</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>ℹ️ This was already included in ECMAScript 2020, but it wasn't supported by <code>@babel/preset-env</code> yet</p></blockquote><p>Since version 7.11, <code>@babel/preset-env</code> skips <code>@babel/plugin-proposal-export-namespace-from</code> if the <code>caller</code> supports it: this can leave <code>export * as ns</code> as-is to be directly processed by the bundlers. <em>Note</em>: <code>babel-loader</code> and <code>@rollup/plugin-babel</code> don't yet tell Babel they supports this syntax, but we are working on it with the relevant maintainers.</p><p>If <code>{ modules: false }</code> is set, Babel will assume that the transpiled code will be run in engines that have native ESM support. <code>export * as ns</code> will be compiled based on <code>targets</code>, like any other ECMAScript feature.</p><p>If you intend to bundle the transpiled code, please remove <code>{ modules: false }</code> option. By default <code>preset-env</code> will determine the module transforms from <code>caller</code> data passed from <code>babel-loader</code> and <code>@rollup/plugin-babel</code>.</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "presets": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ["@babel/env", {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">     "targets": ["defaults"],</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">     "modules": false,</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you provide a different value for the <code>modules</code> option, <code>export * as ns</code> will always be transformed.</p><hr><p>If you were directly using any of</p><ul><li><code>@babel/plugin-proposal-export-namespace-from</code></li><li><code>@babel/plugin-proposal-logical-assignment-operators</code></li><li><code>@babel/plugin-proposal-numeric-separators</code></li></ul><p>you can remove them from your config as they will be included by default:</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "presets": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ["@babel/env", { "targets": ["defaults"] }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "plugins": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/plugin-proposal-export-namespace-from",</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/plugin-proposal-logical-assignment-operators",</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/plugin-proposal-numeric-separators"</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-40-support-11760">TypeScript 4.0 support (<a href="https://github.com/babel/babel/pull/11760" target="_blank" rel="noopener noreferrer">#11760</a>)<a href="#typescript-40-support-11760" class="hash-link" aria-label="Direct link to typescript-40-support-11760" title="Direct link to typescript-40-support-11760">​</a></h2><p>TypeScript 4.0 introduces several <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-beta/" target="_blank" rel="noopener noreferrer">new features</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="variadic-tuple-types">Variadic Tuple Types<a href="#variadic-tuple-types" class="hash-link" aria-label="Direct link to Variadic Tuple Types" title="Direct link to Variadic Tuple Types">​</a></h3><p>You can now specify generic spreads in tuple types, and the spreads can be at any location:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Arr</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">readonly</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token generic-function function" style="color:#4271ae">collect</span><span class="token generic-function generic class-name operator" style="color:#eab700">&lt;</span><span class="token generic-function generic class-name constant" style="color:#f5871f">L</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name keyword" style="color:#8959a8">extends</span><span class="token generic-function generic class-name" style="color:#eab700"> Arr</span><span class="token generic-function generic class-name punctuation" style="color:#eab700">,</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name constant" style="color:#f5871f">M</span><span class="token generic-function generic class-name" style="color:#eab700"> </span><span class="token generic-function generic class-name keyword" style="color:#8959a8">extends</span><span class="token generic-function generic class-name" style="color:#eab700"> Arr</span><span class="token generic-function generic class-name operator" style="color:#eab700">&gt;</span><span class="token punctuation">(</span><span class="token plain">b</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">boolean</span><span class="token punctuation">,</span><span class="token plain"> l</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">L</span><span class="token punctuation">,</span><span class="token plain"> m</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">M</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token builtin" style="color:#f5871f">boolean</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">...</span><span class="token constant" style="color:#f5871f">L</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">...</span><span class="token constant" style="color:#f5871f">M</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">b</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">...</span><span class="token plain">l</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">...</span><span class="token plain">m</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="labeled-tuple-elements">Labeled Tuple Elements<a href="#labeled-tuple-elements" class="hash-link" aria-label="Direct link to Labeled Tuple Elements" title="Direct link to Labeled Tuple Elements">​</a></h3><p>Tuple elements can now be labeled:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Log</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">failed</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">boolean</span><span class="token punctuation">,</span><span class="token plain"> reason</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> Error</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">...</span><span class="token plain">stacks</span><span class="token operator">?</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// same as</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Log</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token builtin" style="color:#f5871f">boolean</span><span class="token punctuation">,</span><span class="token plain"> Error</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="unknown-on-catch-clause-bindings"><code>unknown</code> on <code>catch</code> Clause Bindings<a href="#unknown-on-catch-clause-bindings" class="hash-link" aria-label="Direct link to unknown-on-catch-clause-bindings" title="Direct link to unknown-on-catch-clause-bindings">​</a></h3><p>You can specify <code>unknown</code> type of <code>catch</code> clause variables:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">e</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">unknown</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// type error! Error() only accepts string | undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Error</span><span class="token punctuation">(</span><span class="token plain">e</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">typeof</span><span class="token plain"> e </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"string"</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// e is a string</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Error</span><span class="token punctuation">(</span><span class="token plain">e</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that only <code>unknown</code> and <code>any</code> are currently allowed in catch binding type annotations. <code>@babel/parser</code> does not enforce this check because neither type aliases (<code>type ANY = any</code>) nor intersections (<code>any | unknown</code>) are not evaluated at compile-time.</p><p>Starting from Babel 7.11, you can use these new features without any config changes. For more information, please checkout <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-beta" target="_blank" rel="noopener noreferrer">TypeScript 4.0 Announcement</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="decimal-literal-parser-support-11640">Decimal Literal parser support (<a href="https://github.com/babel/babel/pull/11640" target="_blank" rel="noopener noreferrer">#11640</a>)<a href="#decimal-literal-parser-support-11640" class="hash-link" aria-label="Direct link to decimal-literal-parser-support-11640" title="Direct link to decimal-literal-parser-support-11640">​</a></h2><p>The <a href="https://github.com/tc39/proposal-decimal" target="_blank" rel="noopener noreferrer">Decimal Literal Proposal</a> (Stage 1) provides a notation for decimal numbers, analogous to BigInt and integers.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">.</span><span class="token plain">1m </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">.</span><span class="token plain">2m </span><span class="token operator">===</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">.</span><span class="token plain">3m</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel now supports parsing these literals: you can add <code>@babel/plugin-syntax-decimal</code> plugin to your Babel config or, if you use <code>@babel/parser</code> directly, you can enable the <code>decimal</code> plugin. Babel doesn't provide polyfill implementations for decimals.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="print-config-11588">Print config (<a href="https://github.com/babel/babel/pull/11588" target="_blank" rel="noopener noreferrer">#11588</a>)<a href="#print-config-11588" class="hash-link" aria-label="Direct link to print-config-11588" title="Direct link to print-config-11588">​</a></h2><p>Babel can be configured in a number of ways (programmatically and via JSON/JavaScript configs). This flexibility, however, does not come for free: it can be difficult to understand what are the applicable config files within your project and how Babel merges these configs. You may also indirectly use Babel and the config is generated by a package residing within your node_modules. All these use cases show the need for a way to output config information to help debug any compilation problems.</p><p>Babel 7.11 offers an environment variable for this purpose:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain"># *nix or WSL</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">BABEL_SHOW_CONFIG_FOR=./src/myComponent.jsx npm start</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-powershell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-powershell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token variable" style="color:#c82829">$env</span><span class="token plain">:BABEL_SHOW_CONFIG_FOR = </span><span class="token string" style="color:#718c00">".\src\myComponent.jsx"</span><span class="token punctuation">;</span><span class="token plain"> npm </span><span class="token function" style="color:#4271ae">start</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>will print the effective config applied on <code>src/myComponent.jsx</code>.</p><p>Checkout <a href="https://babel.dev/docs/en/configuration#print-effective-configs" target="_blank" rel="noopener noreferrer">configuration</a> for the detailed usage and example output.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babeleslint-parser-10709"><code>@babel/eslint-parser</code> (<a href="https://github.com/babel/babel/issues/10709" target="_blank" rel="noopener noreferrer">#10709</a>)<a href="#babeleslint-parser-10709" class="hash-link" aria-label="Direct link to babeleslint-parser-10709" title="Direct link to babeleslint-parser-10709">​</a></h2><p><code>babel-eslint</code> has been moved to the Babel monorepo under a new name: <code>@babel/eslint-parser</code>. It offers better integration between Babel and ESLint, and features complete ES2020 support. In the <a href="https://babel.dev/blog/2020/07/13/the-state-of-babel-eslint" target="_blank" rel="noopener noreferrer">State of <code>babel-eslint</code></a> blog post, Kai has added more about the state of <code>@babel/eslint-parser</code>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The State of babel-eslint]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/07/13/the-state-of-babel-eslint</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/07/13/the-state-of-babel-eslint</guid>
            <pubDate>Mon, 13 Jul 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[babel-eslint is moved to @babel/eslint-parser!]]></description>
            <content:encoded><![CDATA[<p><code>babel-eslint</code> is moved to <code>@babel/eslint-parser</code>!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-past">The Past<a href="#the-past" class="hash-link" aria-label="Direct link to The Past" title="Direct link to The Past">​</a></h2><p>Existing as a compatibility layer between Babel and ESLint – two projects maintained by two separate teams – <code>babel-eslint</code> has been a difficult package to maintain since the beginning. Some of the challenges the team has faced while maintaining <code>babel-eslint</code>:</p><ul><li><code>babel-eslint</code> has historically been maintained by the Babel team, and ensuring that ESLint's core rules (which are released every two weeks) work with experimental syntax is a monumental task.</li><li>Babel's internal AST representation differs from <a href="https://github.com/estree/estree" target="_blank" rel="noopener noreferrer">ESTree</a>, the AST specification used by ESLint. As a result, ESLint-compatibility requires that Babel's parser has a plugin that outputs ASTs that are ESTree-compatible.</li><li>While Babel enables the use of experimental syntax, ESLint core only supports syntax once it reaches <a href="https://tc39.es/process-document/" target="_blank" rel="noopener noreferrer">Stage 4</a> and is finalized in the spec. This means that ESLint's core rules aren't designed to work with syntax that is Stage 3 and below. Additionally, ESLint has been blocked by the finalizing of the ESTree spec, leading to an even larger discrepancy in the syntax the two projects support.</li><li>The version of Babel's parser that <code>babel-eslint</code> relies on is a direct dependency in its <code>package.json</code> and the plugins it enables are hardcoded, leading to a potential mismatch in versions and enabled language features between compiling and linting. This has historically led to a lot of confusion and hard-to-debug issues, and we believe solving this issue is a big win for both maintainers and end users.</li><li><code>babel-eslint</code> has to be updated to handle changes in both upstream projects, and has often been out of sync with one or the other.</li></ul><p>The challenges above have added up to <code>babel-eslint</code> requiring more resources than the team has at its disposal, resulting in <code>babel-eslint</code> not getting the attention a widely used project (6M downloads a week at the time of this writing) requires to stay up-to-date.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-present">The Present<a href="#the-present" class="hash-link" aria-label="Direct link to The Present" title="Direct link to The Present">​</a></h2><p>With the next iteration of <code>babel-eslint</code>, we have decided to publish the package under a new name: <code>@babel/eslint-parser</code>. To alleviate some of the challenges discussed above, we are doing the following:</p><ul><li><code>@babel/eslint-parser</code> will require <code>@babel/core</code> as a peer dependency and will now use Babel core's APIs to read and apply your Babel configuration. This means that the same version of Babel with the same settings will be used for both compiling and linting. This is consistent with what we recommend and do with other packages in the Babel ecosystem.</li><li><code>@babel/eslint-parser</code> will live in the main <a href="https://github.com/babel/babel/tree/main/eslint/babel-eslint-parser" target="_blank" rel="noopener noreferrer"><code>babel/babel</code></a> monorepo with other Babel packages. We hope this will help to mitigate some of the syncing issues <code>babel-eslint</code> has seen in the past and allow us to lint the repo with the latest source code in GitHub, shortening the feedback loop of how changes in Babel affect linting.</li><li><a href="https://github.com/estree/estree" target="_blank" rel="noopener noreferrer">ESTree</a> - the AST specification that ESLint follows - has recently become active again, and the Babel team is now actively involved in the project. This will hopefully allow us to share what we learn about the AST representation of experimental syntax and help make the integration between tools easier.</li><li><a href="https://kaicataldo.com" target="_blank" rel="noopener noreferrer">Kai Cataldo</a> has been helping out with <code>babel-eslint</code> for a number of years now, and as a result of being a maintainer of both Babel and ESLint, is uniquely positioned to focus on the interoperability of these two tools. Over the past few months, he has been working on the code changes discussed above and will continue to support the new packages once they are released.</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-future">The Future<a href="#the-future" class="hash-link" aria-label="Direct link to The Future" title="Direct link to The Future">​</a></h2><p>We believe that these packages are ready to be released. Because of all the integrations and projects involved (Babel, ESLint, Prettier, frameworks, various plugins, text editor integrations, command-line tools, etc.), we're sure there will be things that need to be fixed, and we plan to iterate quickly.</p><p>Please note that <code>@babel/eslint-parser</code> will rely on <code>@babel/core</code> as a peer dependency and this package must be in your project's <code>node_modules</code>.</p><p>Once you have ensured that <code>@babel/core</code> has been installed, you can run the following commands to upgrade from <code>babel-eslint</code> and <code>babel-eslint-plugin</code> to the new packages:</p><div class="tabs-container tabList_J5MA"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_l0OV tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_l0OV">Yarn</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_wHwb"><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> uninstall babel-eslint babel-eslint-plugin</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> --save-dev @babel/eslint-parser @babel/eslint-plugin</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_wHwb" hidden=""><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">yarn</span><span class="token plain"> remove babel-eslint babel-eslint-plugin</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">yarn</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token plain"> --dev @babel/eslint-parser @babel/eslint-plugin</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">.eslintrc.js</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module.exports = {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token coord">---  parser: "babel-eslint",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token coord">+++  parser: "@babel/eslint-parser"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   plugins: [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token coord">---   "babel"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token coord">+++   "@babel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>@babel/eslint-parser</code> expects a standard Babel configuration file (<code>.babelrc</code> or <code>babel.config.js</code>). For cases where users might not want to use a Babel configuration file or are running Babel through another tool (such as Webpack with babel-loader), <code>@babel/eslint-parser</code> also supports applying <a href="https://babeljs.io/docs/en/options" target="_blank" rel="noopener noreferrer">Babel configuration</a> through your ESLint configuration. Please see the <a href="https://github.com/babel/babel/tree/main/eslint/babel-eslint-parser#additional-parser-configuration" target="_blank" rel="noopener noreferrer"><code>babelOptions</code></a> configuration option for more details.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="moving-forward-together">Moving Forward Together<a href="#moving-forward-together" class="hash-link" aria-label="Direct link to Moving Forward Together" title="Direct link to Moving Forward Together">​</a></h2><p>Our short-term goal in making the changes outlined above is to make it easier for <code>@babel/eslint-parser</code> to maintain and to make linting Babel-compiled code with ESLint easier and more reliable. We would love your help in this endeavor! Contributions on <a href="https://github.com/babel/babel" target="_blank" rel="noopener noreferrer">GitHub</a> and <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">financial donations</a> go a long way in helping us make this integration the best it can be for the community.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.10.0 Released: Class Fields in preset-env, '#private in' checks and better React tree-shaking]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/05/25/7.10.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/05/25/7.10.0</guid>
            <pubDate>Mon, 25 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[We just released a new minor version of Babel!]]></description>
            <content:encoded><![CDATA[<p>We just released a new minor version of Babel!</p><p>This 7.10 release includes:</p><ul><li>Full support for the new Stage 1 proposal, <code>#prop in obj</code> checks for private fields <a href="https://github.com/tc39/proposal-private-fields-in-in" target="_blank" rel="noopener noreferrer">proposal</a>.</li><li><code>@babel/preset-env</code> now compiles ES2015-style Unicode escapes (<code>\u{Babe1}</code>) to the equivalent legacy syntax (<code>\uDAAA\uDFE1</code>).</li><li>Two improvements to the <a href="https://github.com/tc39/proposal-optional-chaining" target="_blank" rel="noopener noreferrer">Optional Chaining</a> operator (<code>?.</code>)</li><li>Parser support for the new Stage 1 <a href="https://github.com/tc39/proposal-module-attributes" target="_blank" rel="noopener noreferrer">Module Attributes proposal</a> (<code>import a from "./a.json" with type: "json"</code>).</li><li>Better tree-shaking support for React code (i.e. <code>React.memo</code>)!</li><li>Setting up <a href="https://github.com/babel/rfcs" target="_blank" rel="noopener noreferrer">RFCs</a> repo and <a href="https://github.com/babel/babel/discussions" target="_blank" rel="noopener noreferrer">GitHub Discussions</a> pages!</li></ul><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.10.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>Alongside this Babel release, we are releasing the first experimental version of our new <a href="https://github.com/babel/babel-polyfills" target="_blank" rel="noopener noreferrer">polyfills compatibility architecture</a> (see below for more details), thanks to <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> and some awesome folks in the community! We began discussions about this over a year ago in a <a href="https://github.com/babel/babel/issues/10008" target="_blank" rel="noopener noreferrer">RFC issue</a> within the Babel repository.</p><p>As an aside, we now have an official RFC process for discussing changes that significantly impact our users: please check it out over in the <a href="https://github.com/babel/rfcs" target="_blank" rel="noopener noreferrer"><code>babel/rfcs</code></a> repository! In addition, we've enabled <a href="https://github.com/babel/babel/discussions" target="_blank" rel="noopener noreferrer">GitHub Discussions</a> on our repository if you have feedback or questions!</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-features-enabled-by-default">New features enabled by default<a href="#new-features-enabled-by-default" class="hash-link" aria-label="Direct link to New features enabled by default" title="Direct link to New features enabled by default">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="parsing-for-importmeta">Parsing for <code>import.meta</code><a href="#parsing-for-importmeta" class="hash-link" aria-label="Direct link to parsing-for-importmeta" title="Direct link to parsing-for-importmeta">​</a></h3><p>Now that it has reached Stage 4, <em>parsing</em> for <a href="https://github.com/tc39/proposal-import-meta" target="_blank" rel="noopener noreferrer"><code>import.meta</code></a> is enabled by default, thanks to <a href="https://github.com/kik-o" target="_blank" rel="noopener noreferrer">Kiko</a>. Please note that <code>@babel/preset-env</code> doesn't have any default support for <em>transforming</em> it, because what that object contains is up to the engine and is not defined in the ECMAScript specification.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">.</span><span class="token property-access">meta</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// { url: "file:///home/user/my-module.js" }</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="transforming-u-style-unicode-escapes-11377">Transforming <code>\<!-- -->​<!-- -->u{...}</code>-style Unicode escapes (<a href="https://github.com/babel/babel/pull/11377" target="_blank" rel="noopener noreferrer">#11377</a>)<a href="#transforming-u-style-unicode-escapes-11377" class="hash-link" aria-label="Direct link to transforming-u-style-unicode-escapes-11377" title="Direct link to transforming-u-style-unicode-escapes-11377">​</a></h3><p>We also discovered that we didn't have support for compiling a 5-year-old ECMAScript feature: <code>\u{...}</code>-style Unicode escapes! Thanks to <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a>, <code>@babel/preset-env</code> can now compile them in strings and identifiers by default.</p><blockquote><p><a href="https://codesandbox.io/embed/beautiful-sammet-msuiw?fontsize=18&amp;hidenavigation=1&amp;theme=dark&amp;view=preview" target="_blank" rel="noopener noreferrer">Example on CodeSandbox</a></p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> \u</span><span class="token punctuation">{</span><span class="token plain">1d49c</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"\u{Babe1}"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">\u</span><span class="token punctuation">{</span><span class="token plain">1d49c</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ud835_udc9c </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"\uDAAA\uDFE1"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">_ud835_udc9c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="class-properties-and-private-methods-to-shippedproposals-option-of-babelpreset-env-11451">Class Properties and Private Methods to <code>shippedProposals</code> option of <code>@babel/preset-env</code> (<a href="https://github.com/babel/babel/pull/11451" target="_blank" rel="noopener noreferrer">#11451</a>)<a href="#class-properties-and-private-methods-to-shippedproposals-option-of-babelpreset-env-11451" class="hash-link" aria-label="Direct link to class-properties-and-private-methods-to-shippedproposals-option-of-babelpreset-env-11451" title="Direct link to class-properties-and-private-methods-to-shippedproposals-option-of-babelpreset-env-11451">​</a></h3><p>Lastly, thanks to <a href="https://github.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a> we have added <code>@babel/plugin-proposal-class-properties</code> and <code>@babel/plugin-proposal-private-methods</code> to the <a href="https://babeljs.io/docs/en/babel-preset-env#shippedproposals" target="_blank" rel="noopener noreferrer"><code>shippedProposals</code></a> option of <code>@babel/preset-env</code>. These proposals are not Stage 4 (i.e. part of the ECMAScript standard) yet, but they are already enabled by default in <a href="https://github.com/tc39/proposal-class-fields#implementations" target="_blank" rel="noopener noreferrer">many JavaScript engines</a>.</p><p>If you aren't familiar:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bork</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// Public Fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  instanceProperty </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bork"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> staticProperty </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babelIsCool"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// Private Fields</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #xValue </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#xValue</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// Private methods</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">get</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#xValue</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">set</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#x</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">value</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#xValue</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> value</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">#clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#x</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you missed it from the last release, in 7.9 we added a new <a href="https://babeljs.io/blog/2020/03/16/7.9.0#babel-preset-env-s-bugfixes-option-11083-https-githubcom-babel-babel-pull-11083" target="_blank" rel="noopener noreferrer">option</a>: <code>"bugfixes": true</code> which can greatly reduce your code output.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"esmodules"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Use the targets that you was already using</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"bugfixes"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// will be default in Babel 8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="improved-optional-chaining--ergonomics-10961-11248">Improved optional chaining <code>?.</code> ergonomics (<a href="https://github.com/babel/babel/pull/10961" target="_blank" rel="noopener noreferrer">#10961</a>, <a href="https://github.com/babel/babel/pull/11248" target="_blank" rel="noopener noreferrer">#11248</a>)<a href="#improved-optional-chaining--ergonomics-10961-11248" class="hash-link" aria-label="Direct link to improved-optional-chaining--ergonomics-10961-11248" title="Direct link to improved-optional-chaining--ergonomics-10961-11248">​</a></h2><p>In <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-9/" target="_blank" rel="noopener noreferrer">TypeScript 3.9</a>, the interaction between non-null assertions (postfix <code>!</code>) and optional chaining <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-9.html#parsing-differences-in-optional-chaining-and-non-null-assertions" target="_blank" rel="noopener noreferrer">has been changed</a> to make it more useful.</p><div class="language-ts codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-ts codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">foo</span><span class="token operator">?.</span><span class="token plain">bar</span><span class="token operator">!</span><span class="token punctuation">.</span><span class="token plain">baz</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In TypeScript 3.8 and Babel 7.9, the above would be read as <code>(foo?.bar)!.baz</code>: "If <code>foo</code> is not nullish, get <code>.bar</code> from it. Then trust that <code>foo?.bar</code> is never nullish and always get <code>.bar</code> from it". This means that when <code>foo</code> is nullish that code would always throw, because we are trying to get <code>.baz</code> from <code>undefined</code>.</p><p>In TypeScript 3.9 and Babel 7.10, the code behaves similarly to <code>foo?.bar.baz</code>: "If <code>foo</code> is not nullish, get <code>.bar.baz</code> from it and trust me that <code>foo?.bar</code> isn't nullish". Thanks to <a href="https://github.com/macabeus" target="_blank" rel="noopener noreferrer">Bruno</a> for helping to implement this!</p><hr><p>Additionally, the class fields proposal <a href="https://github.com/tc39/proposal-class-fields/pull/301" target="_blank" rel="noopener noreferrer">recently added support</a> for mixing optional chaining <code>?.</code> with private fields. This means that the following code is now valid:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">obj</span><span class="token operator">?.</span><span class="token plain">property</span><span class="token punctuation">.</span><span class="token property-access">#priv</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">obj</span><span class="token operator">?.</span><span class="token plain">#priv</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that in the second example, if <code>obj</code> is not nullish and does not have the <code>#priv</code> field, it would still throw an error (exactly as <code>obj.#priv</code> would throw). You can read the next section to see how to avoid it!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="private-fields-in-in-11372">Private Fields in <code>in</code> (<a href="https://github.com/babel/babel/pull/11372" target="_blank" rel="noopener noreferrer">#11372</a>)<a href="#private-fields-in-in-11372" class="hash-link" aria-label="Direct link to private-fields-in-in-11372" title="Direct link to private-fields-in-in-11372">​</a></h2><blockquote><p><a href="https://i12c7.csb.app/" target="_blank" rel="noopener noreferrer">Example on CodeSandbox</a></p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #name</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">hug</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">other</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">#name </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> other</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation keyword" style="color:#8959a8">this</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">#name</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00"> 🤗 </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">other</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">#name</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">else</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"It's not a person!"</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This Stage 1 proposal allows you to statically check if a given object has a specific private field.</p><p>Private fields have a built-in "brand check": if you try to access them in an object where they aren't defined, it will throw an exception. You can determine if an object has a particular private field by leveraging this behavior with a <code>try</code>/<code>catch</code> statement, but this proposal gives us a more compact and robust syntax to do so.</p><p>You can read more about it in the <a href="https://github.com/tc39/proposal-private-fields-in-in/blob/master/README.md" target="_blank" rel="noopener noreferrer">proposal's description</a> and test this proposal by installing the <code>@babel/plugin-proposal-private-property-in-object</code> plugin and adding it to your Babel config. Thanks to <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a> for the PR!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="module-attributes-parser-support-10962">Module Attributes parser support (<a href="https://github.com/babel/babel/pull/10962" target="_blank" rel="noopener noreferrer">#10962</a>)<a href="#module-attributes-parser-support-10962" class="hash-link" aria-label="Direct link to module-attributes-parser-support-10962" title="Direct link to module-attributes-parser-support-10962">​</a></h2><p>The Modules Attributes proposal (Stage 1) allows providing the engine, module loader or bundler some additional information about the imported file. For example, you could explicitly specify that it should be parsed as JSON:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">metadata</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./package.json"</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">with</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"json"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Additionally, they can also be used with dynamic <code>import()</code>. Note the support for trailing commas to make it easier to add or remove the second parameter!</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> metadata </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string" style="color:#718c00">"./package.json"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">with</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"json"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks to <a href="https://twitter.com/VivekNayyar09/" target="_blank" rel="noopener noreferrer">Vivek</a>, Babel now supports parsing these attributes: you can add the <code>@babel/plugin-syntax-module-attributes</code> plugin to your Babel config or, if you are using <code>@babel/parser</code> directly, you can enable the <code>moduleAttributes</code> plugin. Currently, we only accept the <code>type</code> attribute but we might relax this restriction in the future depending on how the proposal evolves.</p><blockquote><p>ℹ️ Babel doesn't <em>transform</em> these attributes, and they should be handled directly by your bundler or a custom plugin. Currently babel module transformers <em>ignore</em> these attributes. We are <a href="https://github.com/airbnb/babel-plugin-dynamic-import-node/issues/92" target="_blank" rel="noopener noreferrer">discussing</a> whether we should pass through these attributes in the future.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="better-tree-shaking-for-react-components-11428">Better tree-shaking for React components (<a href="https://github.com/babel/babel/pull/11428" target="_blank" rel="noopener noreferrer">#11428</a>)<a href="#better-tree-shaking-for-react-components-11428" class="hash-link" aria-label="Direct link to better-tree-shaking-for-react-components-11428" title="Direct link to better-tree-shaking-for-react-components-11428">​</a></h2><p>React exposes <a href="https://github.com/babel/babel/blob/97f0b7c4a0589cf3cf1dae62fb09d1b7f1253829/packages/babel-plugin-transform-react-pure-annotations/src/index.js#L10" target="_blank" rel="noopener noreferrer">many</a> pure functions used to annotate or wrap elements, for example <code>React.forwardRef</code>, <code>React.memo</code> or <code>React.lazy</code>. However, minifiers and bundlers aren't aware that these functions are pure and thus they cannot remove them.</p><p>Thanks to <a href="https://twitter.com/devongovett" target="_blank" rel="noopener noreferrer">Devon</a> from the Parcel team, <code>@babel/preset-react</code> now injects <code>/*#__PURE__*/</code> annotations in those functions calls to mark them as being safe to be tree-shaken away. We had only previously done this with JSX itself (<code>&lt;a&gt;&lt;/a&gt;</code> =&gt; <code>/*#__PURE__*/React.createElement("a", null)</code>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'react'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token maybe-class-name">SomeComponent</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'./SomeComponent'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'react'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token maybe-class-name">SomeComponent</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/*#__PURE__*/</span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'./SomeComponent'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-experimental-polyfills-architecture-10008-babel-polyfills">New experimental polyfills architecture (<a href="https://github.com/babel/babel/issues/10008" target="_blank" rel="noopener noreferrer">#10008</a>, <a href="https://github.com/babel/babel-polyfills" target="_blank" rel="noopener noreferrer"><code>babel-polyfills</code></a>)<a href="#new-experimental-polyfills-architecture-10008-babel-polyfills" class="hash-link" aria-label="Direct link to new-experimental-polyfills-architecture-10008-babel-polyfills" title="Direct link to new-experimental-polyfills-architecture-10008-babel-polyfills">​</a></h2><p>In the last three years, <code>@babel/preset-env</code> has helped users reduce bundle sizes by only transpiling the syntax features and including the <code>core-js</code> polyfills needed by their target environments.
Currently Babel has three different ways to inject <code>core-js</code> polyfills in the source code:</p><ul><li>By using <code>@babel/preset-env</code>'s <code>useBuiltIns: "entry"</code> option, it is possible to inject polyfills for every ECMAScript functionality not natively supported by the target browsers;</li><li>By using <code>useBuiltIns: "usage"</code>, Babel will only inject polyfills for unsupported ECMAScript features but <em>only</em> if they are actually used in the input souce code;</li><li>By using <code>@babel/plugin-transform-runtime</code>, Babel will inject po<i>n</i>yfills (which are "pure" and don't pollute the global scope) for every used ECMAScript feature supported by <code>core-js</code>. This is usually used by library authors.</li></ul><p>Our position in the JavaScript ecosystem allows us to push these optimizations even further. <code>@babel/plugin-transform-runtime</code> has big advantages for some users over <code>useBuiltIns</code>, but it doesn't consider target environments: it's 2020 and probably very few people need to load an <code>Array.prototype.forEach</code> polyfill.</p><p>Additionally, why should we limit the ability to automatically inject only the necessary polyfills to <code>core-js</code>? There are also DOM polyfills, Intl polyfills, and polyfills for a myriad of other web platform APIs. Not everyone wants to use <code>core-js</code>; there are many other valid ECMAScript polyfills which have different tradeoffs (e.g. source size versus spec compliancy), and users should have the ability to use the polyfill of their choice. For example, we are actively working on an <a href="https://github.com/es-shims/" target="_blank" rel="noopener noreferrer"><strong><code>es-shims</code></strong></a> integration.</p><p>What if the logic to inject them was not related to the actual data about the available or required polyfills, so that they can be used and developed independently?</p><p>We are now releasing the first experimental version of four new packages:</p><ul><li><a href="https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-corejs3/README.md" target="_blank" rel="noopener noreferrer"><code>babel-plugin-polyfill-corejs3</code></a></li><li><a href="https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-es-shims/README.md" target="_blank" rel="noopener noreferrer"><code>babel-plugin-polyfill-es-shims</code></a></li><li><a href="https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-regenerator/README.md" target="_blank" rel="noopener noreferrer"><code>babel-plugin-polyfill-regenerator</code></a></li><li><a href="https://github.com/babel/babel-polyfills/blob/main/packages/babel-plugin-polyfill-corejs2/README.md" target="_blank" rel="noopener noreferrer"><code>babel-plugin-polyfill-corejs2</code></a> (legacy)</li></ul><p>These packages all support a <code>method</code> option for adjusting how they're injected (analogous to what <code>@babel/preset-env</code> and <code>@babel/plugin-transform-runtime</code> currently offer). You can inject a polyfill into an entry point (global scope only) or by direct usage in your code (both global scope and "pure" options). Below is a custom <a href="https://001iy.csb.app/" target="_blank" rel="noopener noreferrer">CodeSandbox</a> where you can try out the differences between the polyfill options.</p><p><a href="https://001iy.csb.app/" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://user-images.githubusercontent.com/588473/82951506-4a043080-9f75-11ea-969b-3ac2cd0007ed.png" alt="image" class="img_SS3x"></a></p><p>We are also releasing <a href="https://github.com/babel/babel-polyfills/blob/main/packages/babel-helper-define-polyfill-provider/README.md" target="_blank" rel="noopener noreferrer"><code>@babel/helper-define-polyfill-provider</code></a>: a new helper package which makes it possible for polyfill authors and users to define <em>their own</em> polyfill provider plugins.</p><p>Big thanks to <a href="https://twitter.com/ljharb" target="_blank" rel="noopener noreferrer">Jordan</a> for working with <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> to make it possible to build the <a href="https://github.com/es-shims/" target="_blank" rel="noopener noreferrer"><strong><code>es-shims</code></strong></a> plugin!</p><blockquote><p>ℹ️ If you want to read more about these packages, and learn how to set them up, you can check out the project's <a href="https://github.com/babel/babel-polyfills/blob/main/README.md" target="_blank" rel="noopener noreferrer"><code>README</code></a>.</p></blockquote><blockquote><p>⚠️ These packages are still experimental. We would appreciate feedback about them either on Twitter or on GitHub, but they are not ready for production yet. For example, we still need to wire some polyfills, and we haven't tested the plugins in production applications yet.</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.9.0 Released: Smaller preset-env output, Typescript 3.8 support and a new JSX transform]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/03/16/7.9.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/03/16/7.9.0</guid>
            <pubDate>Fri, 20 Mar 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[While preparing the Babel 8.0.0 release (in the next months), we just finished working on a new minor release which includes updates related to @babel/preset-env, TypeScript 3.8, Flow, and JSX!]]></description>
            <content:encoded><![CDATA[<p>While preparing the Babel 8.0.0 <a href="https://github.com/babel/babel/issues/10746" target="_blank" rel="noopener noreferrer">release</a> (in the next months), we just finished working on a new minor release which includes updates related to <code>@babel/preset-env</code>, TypeScript 3.8, Flow, and JSX!</p><p>A few months ago, <a href="https://twitter.com/_developit" target="_blank" rel="noopener noreferrer">Jason Miller</a> started working on <a href="https://github.com/babel/preset-modules" target="_blank" rel="noopener noreferrer"><code>@babel/preset-modules</code></a>: an experiment to greatly reduce bundle sizes when using the <a href="https://css-tricks.com/differential-serving/" target="_blank" rel="noopener noreferrer"><code>module</code>/<code>nomodule</code> pattern</a>. We are excited to announce that its functionality has now been merged into <code>@babel/preset-env</code>! This means that its optimizations can be applied to all <code>preset-env</code> targets values, without a separate preset.</p><p><em>Note: These optimizations will be enabled by default in Babel 8. They can be manually enabled in Babel 7.9 by passing in the option <code>{ bugfixes: true }</code> to <code>preset-env</code>.</em></p><p>This release also has full support for <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html" target="_blank" rel="noopener noreferrer">TypeScript 3.8</a>, which introduced explicit type-only imports and exports (i.e. <code>export type { foo }</code>), and for <a href="https://github.com/facebook/flow/blob/master/Changelog.md#01201" target="_blank" rel="noopener noreferrer">Flow 0.120</a>, which introduced the <code>declare</code> modifier for class fields (i.e. <code>class C { declare foo: string }</code>).</p><p>We also worked with the React team to provide a new <a href="https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md" target="_blank" rel="noopener noreferrer">JSX transform</a>, which will make it possible for React and React-like libraries to further optimize the creation of JSX elements with the addition of the <code>jsx</code> function vs. <code>React.createElement</code>.</p><p>Lastly, <code>@babel/parser</code> now supports an additional ECMAScript proposal: <a href="https://github.com/tc39/proposal-record-tuple" target="_blank" rel="noopener noreferrer">Record &amp; Tuple</a>. Please note that this is only parser support, and the transforms are still being worked on.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.9.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><hr><p>Special thanks go to <a href="https://twitter.com/lunaruan" target="_blank" rel="noopener noreferrer">Luna Ruan</a> from the React Team (<a href="https://opensource.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>) for contributing the new JSX transform, and <a href="https://twitter.com/rickbutton" target="_blank" rel="noopener noreferrer">Rick Button</a> (<a href="https://www.techatbloomberg.com/" target="_blank" rel="noopener noreferrer">Bloomberg</a>) who implemented parser support for the <a href="https://github.com/tc39/proposal-record-tuple" target="_blank" rel="noopener noreferrer">Record &amp; Tuple</a> proposal!</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babelpreset-envs-bugfixes-option-11083"><code>@babel/preset-env</code>'s <code>bugfixes</code> option (<a href="https://github.com/babel/babel/pull/11083" target="_blank" rel="noopener noreferrer">#11083</a>)<a href="#babelpreset-envs-bugfixes-option-11083" class="hash-link" aria-label="Direct link to babelpreset-envs-bugfixes-option-11083" title="Direct link to babelpreset-envs-bugfixes-option-11083">​</a></h2><p>The new <code>bugfixes</code> option in <code>@babel/preset-env</code> is the successor to using <code>@babel/preset-modules</code> directly.</p><blockquote><p>If you want more context about the issues that this change helps with, we'd suggest you listen to (or read) the recently published podcast episodes with Jason: <a href="https://podcast.babeljs.io/preset-env/" target="_blank" rel="noopener noreferrer">#2 Modern JavaScript and the Future of preset-env</a> and <a href="https://podcast.babeljs.io/dependencies" target="_blank" rel="noopener noreferrer">#3 Compiling Your Dependencies</a>.</p></blockquote><p>Until now, <code>@babel/preset-env</code> (and Babel plugins in general) grouped ECMAScript syntax features into collections of closely related smaller features. These groups can be large and include a lot of edge cases. For example, the "function arguments" group and plugin includes destructured, default and rest parameters.</p><p>From this grouping information, Babel enables or disables each group based on the browser support target you specify to <code>@babel/preset-env</code>’s <code>targets</code> option.</p><p>Here's the <em>problem</em>: if any version of any browser in that list contains a bug triggered by modern syntax, the only solution (that we considered at the time) was to enable the corresponding transform group that fixes that bug.</p><p>Over time more bugs would eventually be uncovered and reported to our issues, which caused <code>preset-env</code> to output more code for the sake of these edge cases. In the worst case, it meant that the output was the same as  just compiling everything to ES5, which <code>preset-env</code> was created to help prevent.</p><p>When the <code>bugfixes: true</code> option is enabled, <code>@babel/preset-env</code> takes a different approach: it transpiles the broken syntax to the closest <em>non-broken modern syntax</em>.</p><p>For example: all of the new syntax features relating to function parameters are grouped into the same Babel plugin (<code>@babel/plugin-transform-function-parameters</code>). When targeting <code>edge 16</code>, it has a bug related to parsing shorthand destructured parameters with default values within arrow functions:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// this breaks in Edge 16:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> a </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">1</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// .. but this doesn't:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> a </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">1</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> b </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// ... and neither does this:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter literal-property property" style="color:#f5871f">a</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> a </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">1</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This means that if we give <code>@babel/preset-env</code> this input and targeted Edge 16:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> a </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">1</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> b </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">2</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> b</span><span class="token punctuation">,</span><span class="token plain"> args</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It transforms it down to ES5-like parameters:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_ref</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> b</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> _ref</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">b </span><span class="token operator">===</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">void</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">   </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _len </span><span class="token operator">=</span><span class="token plain"> arguments</span><span class="token punctuation">.</span><span class="token property-access">length</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">     args </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Array</span><span class="token punctuation">(</span><span class="token plain">_len </span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> _len </span><span class="token operator">-</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">     _key </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain">  _key </span><span class="token operator">&lt;</span><span class="token plain"> _len</span><span class="token punctuation">;</span><span class="token plain"> _key</span><span class="token operator">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">   args</span><span class="token punctuation">[</span><span class="token plain">_key </span><span class="token operator">-</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> arguments</span><span class="token punctuation">[</span><span class="token plain">_key</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> b</span><span class="token punctuation">,</span><span class="token plain"> args</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, if we enable the <code>bugfixes</code> option, it only transforms the broken syntax:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter literal-property property" style="color:#f5871f">a</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> a </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">1</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> b </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter number" style="color:#f5871f">2</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> b</span><span class="token punctuation">,</span><span class="token plain"> args</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>You can see this example in action at our <a href="https://babeljs.io/repl#?browsers=Edge%2016&amp;code_lz=PTAEFEBMHMFNQIwDZQAsCGBnU7QCMBXaUAdzAAd0AnTASwDtjNUB7KgFw3slElk3ZUCAY3YEqsSACgQoSlXQBbWO1g1SYPgDN0BADbtQAN3R6C_UrU4McVKixKgtBeqNot6mKcI8CnLFlAAXlAACgBvHGDEUABfABp8aIAmRIA6DOpoTABKYIA-UABtdES8RKzMAF0AbiA&amp;sourceType=unambiguous&amp;lineWrap=true&amp;presets=env%2Cenv&amp;prettier=true&amp;version=7.9.0" target="_blank" rel="noopener noreferrer">REPL</a></p></blockquote><p>You can enable this option today by adding it to <code>@babel/preset-env</code> in your configuration:</p><div class="language-jsonls codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsonls codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  "presets": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    ["@babel/preset-env", {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      "targets": { "esmodules": true }, // Use the targets that you was already using</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      "bugfixes": true</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>ℹ️ Currently, the <code>bugfixes</code> option gives the best results when using the <code>esmodules: true</code> target, which allows you to target the browsers with native ES modules support and use the <a href="https://css-tricks.com/differential-serving/" target="_blank" rel="noopener noreferrer"><code>module</code>/<code>nomodule</code> pattern</a>. We hope to continue improving it over the next few releases, and enable it by default in Babel 8.</p></blockquote><p>Moving forward, we would like to work with the community (including browsers) to allow for this kind of approach to work smoothly as we continually transition in JavaScript's development. In the ideal scenario, Babel would be able to implement and help influence the future of new proposals as they are suggested and refined, and smooth over these edge cases for existing standards so that the minimum compiled output is possible for all users of JavaScript based on their targets.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-38-type-only-imports-and-exports-11171">TypeScript 3.8: type-only imports and exports (<a href="https://github.com/babel/babel/pull/11171" target="_blank" rel="noopener noreferrer">#11171</a>)<a href="#typescript-38-type-only-imports-and-exports-11171" class="hash-link" aria-label="Direct link to typescript-38-type-only-imports-and-exports-11171" title="Direct link to typescript-38-type-only-imports-and-exports-11171">​</a></h2><p>You can now explicitly mark imports and exports as type-only, similarly to what you can already do in Flow:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> SomeThing </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./some-module.js"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">type</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> SomeThing </span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By doing so, Babel can safely decide which imports or exports are used for types and which are values.</p><p>Since Babel doesn't analyze types and works on a per-file basis (similarly to TypeScript's <code>--isolatedModules</code> option), until now <code>@babel/plugin-transform-typescript</code> handled imports not used as values as if they were type-only.</p><p>Starting from Babel 7.9 you can use the new <code>type</code> modifier without any configuration change.</p><p>We recommend configuring <code>@babel/preset-typescript</code> or <code>@babel/plugin-transform-typescript</code> so that it only considers imports as type-only when there is the explicit <code>type</code> keyword, similarly to TypeScript's <code>--importsNotUsedAsValues preserve</code> option:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-typescript"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"onlyRemoveTypeImports"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>ℹ️ These features were contributed by the Babel team together, and by <a href="https://twitter.com/sidntrivedi012/" target="_blank" rel="noopener noreferrer">Siddhant N Trivedi</a>. If you have interested in seeing how it's all done, please check how we did it <a href="https://www.youtube.com/playlist?list=PLoB4QYcbtyGbpTpRs_ZZLTVxi96iCl7-A" target="_blank" rel="noopener noreferrer">on YouTube</a>!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="flow-declare-fields-11178">Flow <code>declare</code> fields (<a href="https://github.com/babel/babel/pull/11178" target="_blank" rel="noopener noreferrer">#11178</a>)<a href="#flow-declare-fields-11178" class="hash-link" aria-label="Direct link to flow-declare-fields-11178" title="Direct link to flow-declare-fields-11178">​</a></h2><p>The class fields proposal specifies uninitialized class fields are initialized to <code>undefined</code>: this is different from what Babel does with Flow, because it simply ignores them.</p><p>For this reason, the Flow team has added support for the <code>declare</code> modfier for class fields:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain">string</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// A "real" field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  declare y</span><span class="token operator">:</span><span class="token plain"> number</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// A type-only field</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In the above example, only <code>y</code> should be completely removed by Babel.</p><p>To avoid breaking changes, we introduced support for declare in class fields behind a flag: <code>"allowDeclareFields"</code>, supported by both <code>@babel/plugin-transform-flow</code> and <code>@babel/preset-flow</code>. This will become default behavior in Babel 8, so it is recommended that you migrate your config to use it:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-flow"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"allowDeclareFields"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="a-new-jsx-transform-11154">A new JSX transform (<a href="https://github.com/babel/babel/pull/11154" target="_blank" rel="noopener noreferrer">#11154</a>)<a href="#a-new-jsx-transform-11154" class="hash-link" aria-label="Direct link to a-new-jsx-transform-11154" title="Direct link to a-new-jsx-transform-11154">​</a></h2><p>The React team created an <a href="https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md" target="_blank" rel="noopener noreferrer">RFC</a> back in February of last year to discuss simplifying element creation.</p><p>In a future stable release, React will support a group of new functions for instantiating JSX elements as an alternative to the legacy general-purpose <code>React.createElement</code> function. This will allow optimizing them better in the future.</p><blockquote><p>ℹ️ While it's not released in a stable release yet, you can try it out on the <a href="https://reactjs.org/blog/2019/10/22/react-release-channels.html#experimental-channel" target="_blank" rel="noopener noreferrer">experimental</a> React release channel:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npm install react@experimental react-dom@experimental</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></blockquote><p>We worked with the team to finish a new transform that supports compiling JSX to these new functions. It also automatically imports <code>"react"</code> (or other libraries which support the new API) when needed, so you don't have to manually include it anymore.</p><p>As an example, this input:</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">div</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>would turn into:</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> jsx </span><span class="token imports keyword module" style="color:#8959a8">as</span><span class="token imports"> _jsx </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"react/jsx-runtime"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_jsx</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"div"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>Note:</strong> The functions inside <code>react/jsx-runtime</code> and <code>react/jsx-dev-runtime</code> are not meant to be used outside the <code>@babel/plugin-transform-react-jsx</code> and <code>@babel/plugin-transform-react-jsx-development</code> plugins themselves.</p></blockquote><p>In summary (and please check the <a href="https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md" target="_blank" rel="noopener noreferrer">RFC</a> for more information), the transform will:</p><ul><li>Always pass children as props.</li><li>Pass <code>key</code> separately from other props.</li><li>In DEV,<ul><li>Pass a flag determining if it was static or not.</li><li>Pass <code>__source</code> and <code>__self</code> separately from other props.</li></ul></li></ul><p>Usage: You can enable this new transform by passing <code>{ "runtime": "automatic" }</code> (as opposed to <code>"classic"</code>) to <code>@babel/preset-react</code> (or <code>@babel/plugin-transform-react-jsx</code>):</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-react"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"runtime"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"automatic"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And starting from Babel 8, <code>"automatic"</code> will be the default runtime.</p><p>You can also enable development mode for this new transform by using the new <code>@babel/plugin-transform-react-jsx-development</code> transform or by passing <code>{ "development": true, "runtime": "automatic" }</code> to <code>@babel/preset-react</code>.</p><p>You can read mode about this new transform in <a href="https://babeljs.io/docs/en/babel-preset-react" target="_blank" rel="noopener noreferrer">the docs</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.8.0 Released: ECMAScript 2020, .mjs configuration files and @babel/cli improvements]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2020/01/11/7.8.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2020/01/11/7.8.0</guid>
            <pubDate>Sat, 11 Jan 2020 20:00:00 GMT</pubDate>
            <description><![CDATA[This is the first release of the year! 🎉]]></description>
            <content:encoded><![CDATA[<p>This is the first release of the year! 🎉</p><p>Babel 7.8.0 supports the new <a href="https://github.com/tc39/proposals/blob/master/finished-proposals.md" target="_blank" rel="noopener noreferrer">ECMAScript 2020</a> features by default: you don't need to enable individual plugins for nullish coalescing (<code>??</code>), optional chaining (<code>?.</code>) and dynamic <code>import()</code> anymore with preset-env.</p><p>We also finished aligning our different configuration files with the formats natively supported by Node.js, a process that we started in the <a href="https://babeljs.io/blog/2019/11/05/7.7.0#new-configuration-file-extensions-10501-https-githubcom-babel-babel-pull-10501-10599-https-githubcom-babel-babel-pull-10599" target="_blank" rel="noopener noreferrer">7.7.0 release</a>.</p><p>Lastly, Babel's CLI now supports two new options: <code>--out-file-extension</code> and <code>--copy-ignored</code>.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.8.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><hr><p>Shoutout to <a href="https://github.com/AbdulAli19" target="_blank" rel="noopener noreferrer">Abdul Ali</a>, <a href="https://github.com/jackisherwood" target="_blank" rel="noopener noreferrer">Jack Isherwood</a>, <a href="https://github.com/jayenashar" target="_blank" rel="noopener noreferrer">Jayen Ashar</a>, <a href="https://github.com/Druotic" target="_blank" rel="noopener noreferrer">James Beavers</a>, <a href="https://github.com/ajafff" target="_blank" rel="noopener noreferrer">Klaus Meinhardt</a>, <a href="https://github.com/layershifter" target="_blank" rel="noopener noreferrer">Oleksandr Fediashov</a>, <a href="https://github.com/sidntrivedi012" target="_blank" rel="noopener noreferrer">Siddhant N Trivedi</a>, <a href="https://github.com/bassaer" target="_blank" rel="noopener noreferrer">Tsubasa Nakayama</a>, <a href="https://github.com/yordis" target="_blank" rel="noopener noreferrer">Yordis Prieto</a> and <a href="https://github.com/ZYSzys" target="_blank" rel="noopener noreferrer">ZYSzys</a> for their first PRs!</p><p>We also want to thank <a href="https://github.com/Thom1729" target="_blank" rel="noopener noreferrer">Thomas Smith</a> for volunteering to help us maintain the important <a href="https://packagecontrol.io/packages/Babel" target="_blank" rel="noopener noreferrer"><code>babel-sublime</code></a> syntax highlighter plugin, and welcome <a href="https://github.com/rajasekarm" target="_blank" rel="noopener noreferrer">Raja Sekar</a>, our newest addition to the Babel organization!</p><p>If you or your company wants to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to fund our efforts in supporting the wide range of JavaScript users. Reach out at <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">team@babeljs.io</a> if you'd like to discuss more!</p><blockquote><p>We recently published a <a href="https://babeljs.io/blog/2019/11/08/babels-funding-plans" target="_blank" rel="noopener noreferrer">funding post</a> detailing our funding plans and our goals. Check it out!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="ecmascript-2020-default-support-10811-10817-10819-10843">ECMAScript 2020 default support (<a href="https://github.com/babel/babel/pull/10811" target="_blank" rel="noopener noreferrer">#10811</a>, <a href="https://github.com/babel/babel/pull/10817" target="_blank" rel="noopener noreferrer">#10817</a>, <a href="https://github.com/babel/babel/pull/10819" target="_blank" rel="noopener noreferrer">#10819</a>, <a href="https://github.com/babel/babel/pull/10843" target="_blank" rel="noopener noreferrer">#10843</a>)<a href="#ecmascript-2020-default-support-10811-10817-10819-10843" class="hash-link" aria-label="Direct link to ecmascript-2020-default-support-10811-10817-10819-10843" title="Direct link to ecmascript-2020-default-support-10811-10817-10819-10843">​</a></h2><p>During the last <a href="https://github.com/tc39/agendas/blob/master/2019/12.md" target="_blank" rel="noopener noreferrer">meeting</a>, TC39 moved both the nullish coalescing and optional chaining proposals to Stage 4!</p><p>The nullish coalescing operator allows you to provide a fallback value when an expression evaluates to <code>null</code> or <code>undefined</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> name </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">fullName</span><span class="token plain"> </span><span class="token operator">??</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Anonymous"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">Hello, </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">name</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">!</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is similar to how the logical OR (<code>||</code>) operator works. The difference is that while <code>||</code> checks for "falsy" values (i.e. <code>undefined</code>, <code>null</code>, <code>false</code>, <code>0</code>, <code>0n</code> and <code>""</code>), <code>??</code> only checks for "nullish" values. This better matches the "value not provided" mental model, and works better with possibly falsy, but valid, values:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> element </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">index</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"foo"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> index </span><span class="token operator">=</span><span class="token plain"> element</span><span class="token punctuation">.</span><span class="token property-access">index</span><span class="token plain"> </span><span class="token operator">??</span><span class="token plain"> </span><span class="token operator">-</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">//  0 :D</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> index </span><span class="token operator">=</span><span class="token plain"> element</span><span class="token punctuation">.</span><span class="token property-access">index</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> </span><span class="token operator">-</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// -1 :(</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The optional chaining proposal uses the same concept of "nullish values", allowing optional property accesses on values which could be nullish. It also supports optional function calls and computed properties.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> city </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">address</span><span class="token operator">?.</span><span class="token plain">city</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// person.address could be not defined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> isNeighbor </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">address</span><span class="token operator">?.</span><span class="token method function property-access" style="color:#4271ae">isCloseTo</span><span class="token punctuation">(</span><span class="token plain">me</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">person</span><span class="token punctuation">.</span><span class="token property-access">sayHayUsing</span><span class="token operator">?.</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Twitter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// The person.sayHayUsing method could be not defined</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can now safely use these new features in your code! If you are already using <code>@babel/preset-env</code>, you can use these two operators and they will be compiled based on your targets, just like any other ECMAScript feature. If you were using the <code>@babel/plugin-proposal-nullish-coalescing-operator</code> or <code>@babel/plugin-proposal-optional-chaining</code> directly, you can remove them from your config:</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "presets": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line">   ["@babel/env", { "targets": ["last 2 versions"] }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ],</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "plugins": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/proposal-optional-chaining",</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/proposal-nullish-coalescing-operator"</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>These features are now also enabled by default in <code>@babel/parser</code>: if you were using it directly, you can remove the <code>nullishCoalescingOperator</code> and <code>optionalChaining</code> parser plugins. We also enabled parsing for dynamic <code>import()</code> (which has been included in <code>@babel/preset-env</code> since <a href="https://babeljs.io/blog/2019/07/03/7.5.0#dynamic-import-9552-https-githubcom-babel-babel-pull-9552-and-10109-https-githubcom-babel-babel-pull-10109" target="_blank" rel="noopener noreferrer">v7.5.0</a>), so you can safely remove the <code>dynamicImport</code> plugin.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="support-every-configuration-file-extension-10783-and-10903">Support every configuration file extension (<a href="https://github.com/babel/babel/pull/10783" target="_blank" rel="noopener noreferrer">#10783</a> and <a href="https://github.com/babel/babel/pull/10903" target="_blank" rel="noopener noreferrer">#10903</a>)<a href="#support-every-configuration-file-extension-10783-and-10903" class="hash-link" aria-label="Direct link to support-every-configuration-file-extension-10783-and-10903" title="Direct link to support-every-configuration-file-extension-10783-and-10903">​</a></h2><p>Babel 6 supported a single, JSON-based, configuration file: <code>.babelrc</code>.</p><p>In Babel 7.0.0, we introduced <code>babel.config.js</code> (which has <a href="https://babeljs.io/docs/en/config-files" target="_blank" rel="noopener noreferrer">different resolution logic</a>) and <code>.babelrc.js</code>. JavaScript config files can be useful for scenarios needing higher flexibility. This was the situation:</p><div style="margin:auto;width:fit-content"><table><thead><tr><th align="center"><strong>Node.js file type</strong></th><th align="center"><strong>babel.config.<!-- -->_<!-- -->_</strong></th><th align="center"><strong>.babelrc.<!-- -->_<!-- -->_</strong></th></tr></thead><tbody><tr><td align="center"><code>.js</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr><tr><td align="center"><code>.json</code></td><td align="center">❌ Not supported</td><td align="center">❔ Supported, with implicit extension</td></tr></tbody></table></div><blockquote><p>ℹ️ We strongly recommend reading about the differences between <a href="https://babeljs.io/docs/en/config-files" target="_blank" rel="noopener noreferrer"><code>babel.config.js</code> and <code>.babelrc.js</code></a>!</p></blockquote><p>More recently, Node.js 13.2.0 was released, adding support for native ECMAScript modules and the <code>.cjs</code> and <code>.mjs</code> file extensions. In Babel 7.7.0 we added support for <code>.cjs</code> config files to allow users to enable <code>"type": "module"</code> in their <code>package.json</code> without breaking Babel, as well as support for <code>babel.config.json</code>, which allows for static project-wide configuration.</p><div style="margin:auto;width:fit-content"><table><thead><tr><th align="center"><strong>Node.js file type</strong></th><th align="center"><strong>babel.config.<!-- -->_<!-- -->_</strong></th><th align="center"><strong>.babelrc.<!-- -->_<!-- -->_</strong></th></tr></thead><tbody><tr><td align="center"><code>.js</code></td><td align="center">✔️ Supported when <code>"type": "module"</code> is not enabled</td><td align="center">✔️ Supported when <code>"type": "module"</code> is not enabled</td></tr><tr><td align="center"><code>.json</code></td><td align="center">✔️ Supported</td><td align="center">❔ Supported, with implicit extension</td></tr><tr><td align="center"><code>.cjs</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr><tr><td align="center"><code>.mjs</code></td><td align="center">❌ Not supported</td><td align="center">❌ Not supported</td></tr></tbody></table></div><p>This release aligns Babel with the file types natively supported by Node.js by allowing <code>.babelrc.json</code>, <code>babel.config.mjs</code>, and <code>.babelrc.mjs</code>.</p><div style="margin:auto;width:fit-content"><table><thead><tr><th align="center"><strong>Node.js file type</strong></th><th align="center"><strong>babel.config.<!-- -->_<!-- -->_</strong></th><th align="center"><strong>.babelrc.<!-- -->_<!-- -->_</strong></th></tr></thead><tbody><tr><td align="center"><code>.js</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr><tr><td align="center"><code>.json</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr><tr><td align="center"><code>.cjs</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr><tr><td align="center"><code>.mjs</code></td><td align="center">✔️ Supported</td><td align="center">✔️ Supported</td></tr></tbody></table></div><p>Please remember that ECMAScript modules are <strong>asynchronous</strong>: that's why, for example, you can't <code>require()</code> them and instead have to use <code>import()</code>, which returns a promise.</p><p>For these reasons, they can only be used when calling Babel via the promise-based or callback-based entry points. They already work with <code>@babel/cli</code>, <code>babel-loader</code> and <code>gulp-babel</code>, and they will work with the next release of <code>rollup-plugin-babel</code>. Note that they are not supported by <code>babel-eslint</code> yet.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-cli-options-9144-and-10887">New CLI options (<a href="https://github.com/babel/babel/pull/9144" target="_blank" rel="noopener noreferrer">#9144</a> and <a href="https://github.com/babel/babel/pull/10887" target="_blank" rel="noopener noreferrer">#10887</a>)<a href="#new-cli-options-9144-and-10887" class="hash-link" aria-label="Direct link to new-cli-options-9144-and-10887" title="Direct link to new-cli-options-9144-and-10887">​</a></h2><p>We added two new flags to <code>@babel/cli</code>: <code>--copy-ignored</code> and <code>--out-file-extension</code>.</p><p><code>--copy-ignored</code> can be used to copy files that are not transpiled by Babel, either because they are ignored using the <code>--ignore</code> CLI option, or because <code>"ignore"</code> is set in a configuration file.</p><blockquote><p>⚠️ To maintain backward compatibility, in Babel 7.8.4 the default value of the <code>--copy-ignored</code> option has been changed to <code>true</code>. If you want to disable it, you can use <code>--no-copy-ignored</code>.</p></blockquote><p>This is similar to how the <code>--copy-files</code> option works, but <code>--copy-files</code> is meant to copy anything which is not transpiled because it isn't a JavaScript file (for example, <code>.css</code> or <code>.json</code>), rather than explicitly ignored files.</p><p><code>--out-file-extension</code> can be used to configure the extension of the files generated by Babel. For example, if you are transpiling <code>.js</code> files containing native ECMAScript modules in Node.js and want to generate CommonJS files, you might need to use the <code>.cjs</code> extension:</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel src --out-dir lib-cjs --out-file-extension cjs</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="preparing-for-babel-8">Preparing for Babel 8<a href="#preparing-for-babel-8" class="hash-link" aria-label="Direct link to Preparing for Babel 8" title="Direct link to Preparing for Babel 8">​</a></h2><p>We are starting to work on the Babel 8.0.0 release in our umbrella issue: <a href="https://github.com/babel/babel/issues/10746" target="_blank" rel="noopener noreferrer">#10746</a>.</p><p>Babel 8 will only contain breaking changes: we will release a minor version the same day, containing all the bug fixes and new features that would otherwise be released in 8.0.0.</p><p>While we don't anticipate a huge migration path, there are two issues which we want to bring to your attention:</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="extract-targets-parser-and-compat-data-from-preset-env-10899">Extract targets parser and compat data from preset-env (<a href="https://github.com/babel/babel/pull/10899" target="_blank" rel="noopener noreferrer">#10899</a>)<a href="#extract-targets-parser-and-compat-data-from-preset-env-10899" class="hash-link" aria-label="Direct link to extract-targets-parser-and-compat-data-from-preset-env-10899" title="Direct link to extract-targets-parser-and-compat-data-from-preset-env-10899">​</a></h3><p>Various 3rd party presets are currently using <code>@babel/preset-env</code>'s internal logic to parse compilation targets or to retrieve information about necessary plugins and polyfills.</p><p>We have decided to officially support these two use cases by providing two new public packages:</p><ul><li><p><code>@babel/helper-compilation-targets</code>, which exports a function to normalize the specified targets and a few other related utilities:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">getTargets</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"@babel/helper-compilation-targets"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">getTargets</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">browsers</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"last 2 chrome versions"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">node</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">10</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">chrome</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"77.0.0"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">node</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"10.0.0"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><code>@babel/compat-data</code>, which contains a collection of JSON files where we store all the browsers versions for which each plugin or <code>core-js@2</code> polyfill is required. It's mostly generated from <a href="https://kangax.github.io/compat-table/" target="_blank" rel="noopener noreferrer"><code>compat-table</code></a>, but we might add other data sources in the future.
If you need data for <code>core-js@3</code> polyfills, you can use <a href="https://www.npmjs.com/package/core-js-compat" target="_blank" rel="noopener noreferrer"><code>core-js-compat</code></a>.</p></li></ul><p>We plan to disallow using internal files starting from Babel 8. If you are relying on other internal APIs, please let us know!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="introduce-opt-in-stricter-ast-validation-10917">Introduce opt-in stricter AST validation (<a href="https://github.com/babel/babel/pull/10917" target="_blank" rel="noopener noreferrer">#10917</a>)<a href="#introduce-opt-in-stricter-ast-validation-10917" class="hash-link" aria-label="Direct link to introduce-opt-in-stricter-ast-validation-10917" title="Direct link to introduce-opt-in-stricter-ast-validation-10917">​</a></h3><p><code>@babel/types</code> already performs many checks to ensure that the AST you are building is valid. For example, this code will throw because you can't use a statement in place of an expression:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// foo = if (true) {}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">assignmentExpression</span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string" style="color:#718c00">"="</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">identifier</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"foo"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">ifStatement</span><span class="token punctuation">(</span><span class="token plain">t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">booleanLiteral</span><span class="token punctuation">(</span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">blockStatement</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We are introducing stricter validation to prevent even more invalid ASTs: not only from a tree shape point of view but also ensuring that nodes in the correct position carry valid information. For example, starting from Babel 8 <code>t.identifier("123")</code> will be disallowed, because <code>123</code> is not a valid identifier.</p><p>We can't enable these checks in Babel 7.8.0 because the risk of breaking existing plugins is too high, but we highly encourage you to enable these stricter checks using the <code>BABEL_TYPES_8_BREAKING=true</code> environment variable and open issues (or better, PRs!) to fix the plugins that you are using which won't work with Babel 8.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel's Funding Plans]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/11/08/babels-funding-plans</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/11/08/babels-funding-plans</guid>
            <pubDate>Fri, 08 Nov 2019 12:00:00 GMT</pubDate>
            <description><![CDATA[One of the greatest strengths of open source software is that it is open and free for anyone to contribute. This also leads to one of its greatest challenges, which is to support consistent, sustainable maintenance.]]></description>
            <content:encoded><![CDATA[<p>One of the greatest strengths of open source software is that it is open and free for anyone to contribute. This also leads to one of its greatest challenges, which is to support consistent, sustainable maintenance.</p><p>Babel isn't a company. As mentioned in the <a href="https://babeljs.io/blog/2018/08/27/7.0.0#maintainers-are-people" target="_blank" rel="noopener noreferrer">7.0.0 post</a>, the all-volunteer Babel team (sans Henry) has been doing its best to steward the project and handle all the expectations of the community. We're glad that we have continued to make releases, but even keeping up-to-date with reported issues is difficult to manage, let alone our integrations with other tools, new proposals, and effect on the greater ecosystem.</p><p>In March 2018, Henry <a href="https://www.henryzoo.com/leaving-behance/" target="_blank" rel="noopener noreferrer">left his job</a> to start <a href="https://www.henryzoo.com/in-pursuit-of-open-source-part-1/" target="_blank" rel="noopener noreferrer">working on securing more funding for Babel</a>. After a lot of work and support from the community, the team was able to fund Henry as a full-time maintainer.</p><p>This has been a big win for the team, but we're finding that it is not enough.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-challenges">New Challenges<a href="#new-challenges" class="hash-link" aria-label="Direct link to New Challenges" title="Direct link to New Challenges">​</a></h2><p>Babel has come a long way from <a href="https://www.youtube.com/watch?v=fntd0sPMOtQ" target="_blank" rel="noopener noreferrer">its origins as "6to5"</a>, growing beyond just the <em>adoption</em> and implementation of language features in JavaScript. It has become a key part in its <em>development</em>:</p><ul><li><p>Babel's popularity has increased exponentially, going from 3M downloads per week in March 2018 to 16M downloads per week today.</p></li><li><p>Babel is now involved in the <a href="https://tc39.es" target="_blank" rel="noopener noreferrer">TC39</a> standards process as participating members in meetings and discussions. "Is there a Babel plugin already?" is a common question for new proposals.</p></li><li><p>Babel has become so embedded as underlying infrastructure that most developers interact with it indirectly, including in CLIs such as <a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener noreferrer"><code>create-react-app</code></a>, bundlers like <a href="https://parceljs.org" target="_blank" rel="noopener noreferrer">Parcel</a>, frameworks like <a href="https://nextjs.org" target="_blank" rel="noopener noreferrer">Next.js</a>, and many npm libraries.</p></li></ul><p>Widespread adoption brings with it new challenges, and the team has been grappling with issues around maintenance and sustainability. The project has grown beyond the resources the team has available, and we'd like to share our plan for addressing this problem.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="funding-plans">Funding Plans<a href="#funding-plans" class="hash-link" aria-label="Direct link to Funding Plans" title="Direct link to Funding Plans">​</a></h2><p>We believe that Babel would benefit immensely from more than one person being funded to work on the project, and want to secure funding for three additional team members, <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a>, <a href="https://twitter.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a>, and <a href="https://twitter.com/kai_cataldo" target="_blank" rel="noopener noreferrer">Kai</a> as part-time maintainers.</p><p>We are setting up an additional funding goal of $12,000/month through <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>. This is $4,000/month each, which is the target we have defined for a part-time salary.</p><p>We discussed a number of different approaches as a team – creating an hourly rate for contributors, setting aside grants for features, bug bounties for specific issues – and ultimately decided that a stable income would lead to higher quality work (no pressure to rush development), the ability to dedicate time to plan for a roadmap in a more holistic manner, being able to take time for breaks and vacation, and not having to worry about where their next paycheck is coming from.</p><p>That being said, we will continue to evaluate and be open/transparent with making changes as needed.</p><p>We'd like to give a huge shoutout to our Open Collective sponsors: <a href="https://handshake.org/" target="_blank" rel="noopener noreferrer">Handshake</a>, <a href="https://twitter.com/airbnbeng" target="_blank" rel="noopener noreferrer">Airbnb</a>, <a href="https://amp.dev/" target="_blank" rel="noopener noreferrer">AMP</a>, <a href="https://opensource.facebook.com" target="_blank" rel="noopener noreferrer">Facebook</a>, <a href="https://tech.trivago.com/opensource/" target="_blank" rel="noopener noreferrer">trivago</a>, <a href="https://twitter.com/salesforceeng" target="_blank" rel="noopener noreferrer">Salesforce</a>, <a href="https://frontendmasters.com/" target="_blank" rel="noopener noreferrer">Frontend Masters</a>, <a href="https://runkit.com/home" target="_blank" rel="noopener noreferrer">RunKit</a>, <a href="https://webflow.com/" target="_blank" rel="noopener noreferrer">Webflow</a>, <a href="https://www.adobe.com/" target="_blank" rel="noopener noreferrer">Adobe</a>, <a href="https://www.coinbase.com/" target="_blank" rel="noopener noreferrer">Coinbase</a>, <a href="https://www.bitmex.com/" target="_blank" rel="noopener noreferrer">BitMEX</a>, and everyone else who has donated!</p><p><img loading="lazy" src="https://i.imgur.com/C76KsKZ.png" alt="Babel Open Collective monthly donations graph" class="img_SS3x"></p><p><strong>One thing we'd like to note:</strong> Collectives currently only show the total annual amount donated, which may work better with a one-time grant donation model. We believe that showcasing the monthly recurring amount is a more accurate description of the financial health of our project, and the team is hoping to help out with this <a href="https://github.com/opencollective/opencollective/issues/1585" target="_blank" rel="noopener noreferrer">issue</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="how-you-can-help">How You Can Help<a href="#how-you-can-help" class="hash-link" aria-label="Direct link to How You Can Help" title="Direct link to How You Can Help">​</a></h2><p>You can financially contribute to Babel on our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>!</p><p>Our team is using <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> to fund our team members. Both companies and individuals and donate to the team, either as a one-time or recurring donation.</p><p>If you have any questions or concerns about financially contributing to Babel we'd be happy to discuss by <a href="mailto:team@babeljs.io" target="_blank" rel="noopener noreferrer">email</a>.</p><p>And in case your company is located in one of the cities that the core team lives in we'd also love to meet in-person!</p><ul><li><a href="https://twitter.com/left_pad" target="_blank" rel="noopener noreferrer">Henry</a> is based in NYC and will be in the Bay Area November 4th-15th.</li><li><a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> is based in Italy and will be in Moscow November 6th-10th.</li><li><a href="https://twitter.com/existentialism" target="_blank" rel="noopener noreferrer">Brian</a> is based in Houston, TX.</li><li><a href="https://twitter.com/JLHwung" target="_blank" rel="noopener noreferrer">Jùnliàng</a> is based in Ontario.</li><li><a href="https://twitter.com/kai_cataldo" target="_blank" rel="noopener noreferrer">Kai</a> is based in the New York City area.</li></ul><p>The team would appreciate hearing about how you are using Babel or how you are looking to get involved.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="our-goals">Our Goals<a href="#our-goals" class="hash-link" aria-label="Direct link to Our Goals" title="Direct link to Our Goals">​</a></h2><p>We will be writing up more in-depth posts on these topics, but here are some general areas where we aim to continue focusing on:</p><ul><li><p><strong>Stability</strong>: This includes checking against the official <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">test262</a> tests. This <a href="https://github.com/babel/babel/issues/4987" target="_blank" rel="noopener noreferrer">support</a> gives us a better sense of our spec compliance so we know what is missing, adding smoke tests using Babel itself and our top dependents, in addition to our own tests. Reliability is extremely important to us given our position in the ecosystem.</p></li><li><p><strong>Debuggability</strong>: We would like to implement better warnings/errors on <a href="https://github.com/babel/babel/issues/10617" target="_blank" rel="noopener noreferrer">configuration</a> and explain what is being outputted to help users make decisions on code size. Given the complexity of a pluggable tool tracking an ever-changing specification, it can be hard to hide the complexity. We would really like to spend time on making our usage more accessible.</p></li><li><p><strong>General ecosystem support</strong>: This includes what we can do to help libraries publish ES2015+ code and for developers to target new browsers and ship less code (your own code, node_modules, <a href="https://github.com/babel/babel/issues/10008" target="_blank" rel="noopener noreferrer">polyfills</a>) when possible, while still making it accessible for all browser users.</p></li><li><p><strong>Codemods</strong>: We would like to put more emphasis on the opposite direction of code transformation (aka 5to6, <a href="https://github.com/lebab/lebab" target="_blank" rel="noopener noreferrer">Lebab</a>), which is a powerful idea that we can help educate the community about. This would help with the transition between changes in the proposal (or if it's dropped/stalled) via an upgrade tool.</p></li></ul><p>And long term:</p><ul><li><strong>Proposal Advancement</strong>: Our goal is to enable a feedback loop for proposal champions to get validation through "real world" use cases within the JavaScript community. This will ultimately only happen if the plugin is adopted, there's enough time for people to use it and learn its implications, and for there to be a workflow in place for dialogue with and giving feedback to the TC39 committee. We would like to figure out how to best be a resource for more community members to understand the TC39 process and get involved in the improvement of JavaScript from the ground up. This requires plugins tracking the proposals to be created in a timely fashion and maintained, which requires a considerable amount of effort. This is especially true with plugins for early stage proposals, since these plugins require continued maintenance as proposals are updated.</li><li><strong>Education</strong>: Related to this is an aspiration to help more developers understand the tools they use. Many tools and frameworks, particularly in the JavaScript ecosystem, operate over similar core concepts (such as ASTs). Leveling the playing field empowers more people to contribute, fix issues, and bring new ideas to the table. Language development has a high barrier to entry that our project can help lower.</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="how-companies-and-individuals-have-helped-before">How Companies and Individuals Have Helped Before<a href="#how-companies-and-individuals-have-helped-before" class="hash-link" aria-label="Direct link to How Companies and Individuals Have Helped Before" title="Direct link to How Companies and Individuals Have Helped Before">​</a></h2><p>We know that as maintainers we need to do outreach for our project and for open source as a whole. Our efforts up to this point have consisted of the following:</p><ul><li><a href="https://www.thinkmill.com.au/" target="_blank" rel="noopener noreferrer">Thinkmill</a> funded 3 months of part-time work on Babel for Sebastian, the creator of Babel, while he was employed there. This was followed by 3 months working part-time on Babel at <a href="https://www.cloudflare.com/" target="_blank" rel="noopener noreferrer">Cloudflare</a>. And then almost 12 months of full-time work while employed by <a href="https://opensource.facebook.com/" target="_blank" rel="noopener noreferrer">Facebook</a>, which included the entire release of Babel 6.</li><li>Adobe funded 50% of Henry's work on Babel during his time working there.</li><li>We've helped companies during internal open source-oriented hackathons, including <a href="https://technology.condenast.com/" target="_blank" rel="noopener noreferrer">Condé Nast</a> and <a href="https://www.techatbloomberg.com/" target="_blank" rel="noopener noreferrer">Bloomberg</a> and hosting workshops on open source and Babel development at companies like Netflix.</li><li>Speaking at <a href="https://twitter.com/left_pad/status/1190398587538202624?s=20" target="_blank" rel="noopener noreferrer">companies</a> like Spotify/Facebook, local <a href="https://twitter.com/left_pad/status/1184301596437549056?s=20" target="_blank" rel="noopener noreferrer">meetups</a>, bootcamps, <a href="https://twitter.com/left_pad/status/1191515333347004416?s=20" target="_blank" rel="noopener noreferrer">universities</a> like Berkeley, and participating in <a href="https://twitter.com/bendhalpern/status/1050181229910331392?s=20" target="_blank" rel="noopener noreferrer">Hacktoberfest</a> events.</li></ul><p>Supporting the project is not limited to just financial means. Different companies have allowed their employees to implement some specific features during their working time:</p><ul><li><p><a href="https://www.techatbloomberg.com/" target="_blank" rel="noopener noreferrer">Bloomberg</a>'s folks have implemented support for different class features (like private fields), and are currently working on automatic testing of Babel's transforms using the official ECMAScript test suite (Test262)</p></li><li><p><a href="https://tech.trivago.com/" target="_blank" rel="noopener noreferrer">Trivago</a>, which was also a Base Support Sponsor, has implemented the partial application proposal</p></li><li><p><a href="https://runkit.com/" target="_blank" rel="noopener noreferrer">RunKit</a> has been working with Nicolò as a contractor to implement syntactic placeholders in <code>@babel/template</code>.</p></li></ul><p>Support can ultimately an opportunity to talk and learn from maintainers, provide real-world feedback to the project, and build a long-term relationship.</p><blockquote><p>We get a lot of valuable ideas from our relationships with maintainers. It's almost a proxy for hiring the best people in the world, only for a limited amount of time. Open Collective gives a business like ours access to a diverse talent pool that would be impossible to build internally. - <a href="https://blog.opencollective.com/zeit/" target="_blank" rel="noopener noreferrer">Guillermo Rauch</a></p></blockquote><p>Want to get involved? Learn more in the <a href="#how-you-can-help">How You Can Help section</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>In an ideal world, Babel wouldn't even be necessary. However, in practice, there may always be gaps between where JavaScript is at with future proposals, when vendors can implement them (after Stage 3), what browsers a given website supports, and what Node.js versions are supported for a given library. In that sliding window of functionality is where a tool like Babel can provide significant value.</p><p>While we are excited for where Babel will go in the future, the team has been struggling to keep up with the current demands of the project for quite some time.  Meeting our funding goals will allow us to not only better meet the current needs of the project, but also help push it into the future.</p><p>We hope you will join us in <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">supporting</a> this community, whether through sponsorship of the core team or getting involved in the project.</p><p>Thanks and we hope to see you around, whether in-person or on GitHub!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.7.0 Released: Error recovery and TypeScript 3.7]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/11/05/7.7.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/11/05/7.7.0</guid>
            <pubDate>Tue, 05 Nov 2019 10:00:00 GMT</pubDate>
            <description><![CDATA[Today we are releasing Babel 7.7.0!]]></description>
            <content:encoded><![CDATA[<p>Today we are releasing Babel 7.7.0!</p><p>This release includes new parser features like top-level await (<code>await x()</code>, <a href="https://github.com/tc39/proposal-top-level-await" target="_blank" rel="noopener noreferrer">Stage 3</a>) and Flow <code>enum</code> declarations (<a href="https://github.com/gkz/enums" target="_blank" rel="noopener noreferrer">Flow proposal</a>). And now, <code>@babel/parser</code> has the option of recovering from certain syntax errors!</p><p>We've also added support for <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-7-rc/" target="_blank" rel="noopener noreferrer">TypeScript 3.7</a>: Babel can parse and transform private class fields with type annotations, public class fields annotations defined using the <code>declare</code> keyword, type assertion function signatures and template literals in <code>enum</code> declarations.</p><p>Babel now understands three new configuration files: <code>babel.config.json</code>, <code>babel.config.cjs</code> and <code>.babelrc.cjs</code>, which behave the same as <code>babel.config.js</code> and <code>.babelrc.js</code> files.</p><p>Lastly, Babel 7.7.0 uses 20% less memory than 7.6.0.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.7.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><hr><p>Shoutout to <a href="https://github.com/alejo90" target="_blank" rel="noopener noreferrer">Alejandro Sánchez</a>, <a href="https://github.com/pzuraq" target="_blank" rel="noopener noreferrer">Chris Garrett</a>, <a href="https://github.com/chris-peng-1244" target="_blank" rel="noopener noreferrer">彭驰</a>, <a href="https://github.com/DanArthurGallagher" target="_blank" rel="noopener noreferrer">Daniel Arthur Gallagher</a>, <a href="https://twitter.com/ExE_Boss" target="_blank" rel="noopener noreferrer">ExE-Boss</a>, <a href="https://github.com/t0lkman" target="_blank" rel="noopener noreferrer">Eugene Myunster</a>, <a href="https://github.com/thorn0" target="_blank" rel="noopener noreferrer">Georgii Dolzhykov</a>, <a href="https://twitter.com/gera2ld" target="_blank" rel="noopener noreferrer">Gerald</a>, <a href="https://github.com/LinusU" target="_blank" rel="noopener noreferrer">Linus Unnebäck</a>, <a href="https://github.com/dentrado" target="_blank" rel="noopener noreferrer">Martin Forsgren</a>, <a href="https://github.com/mwhitworth" target="_blank" rel="noopener noreferrer">Matthew Whitworth</a>, <a href="https://github.com/MicahZoltu" target="_blank" rel="noopener noreferrer">Micah Zoltu</a>, <a href="https://github.com/m-ahmadi" target="_blank" rel="noopener noreferrer">Mohammad Ahmadi</a> and <a href="https://github.com/samMeow" target="_blank" rel="noopener noreferrer">Samuel Kwok</a> for their first PRs!</p><p>This release has also been made possible thanks to collaboration with teams of other open source projects: thanks to <a href="https://twitter.com/devongovett" target="_blank" rel="noopener noreferrer">Devon Govett</a> (<a href="https://parceljs.org/" target="_blank" rel="noopener noreferrer">Parcel</a>) for implementing support for <code>babel.config.json</code> files, and to <a href="https://twitter.com/gkzahariev" target="_blank" rel="noopener noreferrer">George Zahariev</a> (<a href="https://flow.org/" target="_blank" rel="noopener noreferrer">Flow</a>) for adding Flow <code>enum</code> declarations to <code>@babel/parser</code>!</p><p>Another special thanks goes to <a href="https://www.techatbloomberg.com/" target="_blank" rel="noopener noreferrer">Bloomberg</a> for organizing an Open Source Hackaton to encourage their engineers to give back to the community! In particular, <a href="https://twitter.com/r_ricard" target="_blank" rel="noopener noreferrer">Robin Ricard</a> and <a href="https://twitter.com/jbhoosreddy" target="_blank" rel="noopener noreferrer">Jaideep Bhoosreddy</a> who are actively working on automating the testing of Babel transforms against the <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">Test262 suite</a>.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code. Reach out to Henry at <a href="mailto:henry@babeljs.io" target="_blank" rel="noopener noreferrer">henry@babeljs.io</a> if you'd like to talk more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="top-level-await-parsing-10449">Top-level <code>await</code> parsing (<a href="https://github.com/babel/babel/pull/10449" target="_blank" rel="noopener noreferrer">#10449</a>)<a href="#top-level-await-parsing-10449" class="hash-link" aria-label="Direct link to top-level-await-parsing-10449" title="Direct link to top-level-await-parsing-10449">​</a></h2><p>The top-level <code>await</code> <a href="https://github.com/tc39/proposal-top-level-await" target="_blank" rel="noopener noreferrer">proposal</a> allows you to <code>await</code> promises in modules as if they were wrapped in a big async function. This is useful, for example, to conditionally load a dependency or to perform app initialization:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Dynamic dependency path</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> strings </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">./i18n/</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation dom variable" style="color:#c82829">navigator</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">language</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">.mjs</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Resource initialization</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> connection </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">dbConnector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>@babel/parser</code> has supported using <code>await</code> outside of async functions via the <code>allowAwaitOutsideFunction</code> option since version 7.0.0.</p><p>Version 7.7.0 introduces a new <code>topLevelAwait</code> parser plugin, which has a few key differences:</p><ul><li>It only allows top-level <code>await</code> inside modules and not inside scripts, as the proposal mandates. This is needed because synchronous script-based module systems (like CommonJS) cannot support an async dependency.</li><li>It allows to detect the correct <code>sourceType</code> when <code>sourceType: "unambiguous"</code> is used. Note that, since <code>await</code> is a valid identifier in scripts, many constructs which may seem unambiguously modules are actually ambiguous and Babel will parse them as scripts.
For example, <code>await -1</code> could either be an await expression which waits for <code>-1</code>, or a difference between <code>await</code> and <code>1</code>.</li></ul><p>If you are using <code>@babel/parser</code> directly, you can enable the <code>topLevelAwait</code> plugin:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">parser</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">inputCode</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"topLevelAwait"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We also created the <code>@babel/plugin-syntax-top-level-await</code> package, which you can add to your Babel configuration:</p><div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-syntax-top-level-await"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Please note that usage of top-level <code>await</code> assumes support within your module bundler. Babel itself isn't doing transformations: if you are using Rollup you can enable the <a href="https://rollupjs.org/guide/en/#experimentaltoplevelawait" target="_blank" rel="noopener noreferrer"><code>experimentalTopLevelAwait</code></a> option, and webpack 5 supports the <a href="https://github.com/webpack/webpack/releases/tag/v5.0.0-alpha.15" target="_blank" rel="noopener noreferrer"><code>experiments.topLevelAwait</code></a> option.</p><p>Starting from this release, <code>@babel/preset-env</code> will automatically enable <code>@babel/plugin-syntax-top-level-await</code> if the <code>caller</code> supports it. <em>Note</em>: <code>babel-loader</code> and <code>rollup-plugin-babel</code> don't yet tell Babel that they support this syntax, but we are working on it with the respective maintainers.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="parser-error-recovery-10363">Parser error recovery (<a href="https://github.com/babel/babel/pull/10363" target="_blank" rel="noopener noreferrer">#10363</a>)<a href="#parser-error-recovery-10363" class="hash-link" aria-label="Direct link to parser-error-recovery-10363" title="Direct link to parser-error-recovery-10363">​</a></h2><p>Like many other JavaScript parsers, <code>@babel/parser</code> throws an error whenever some invalid syntax is encountered. This behavior works well for Babel, since in order to transform a JavaScript program to another program we must first be sure that the input is valid.</p><p>Given Babel's popularity, there are many other tools relying on <code>@babel/parser</code>: above all <code>babel-eslint</code> and Prettier. For both these tools, a parser which bails out on the first error is suboptimal.</p><p>Consider this code, which is invalid because of the duplicated <code>__proto__</code> property:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">__proto__</span><span class="token operator">:</span><span class="token plain"> x</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">__proto__</span><span class="token operator">:</span><span class="token plain"> y</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The current workflow with ESLint and Prettier is the following:</p><ol><li>Prettier can't format the file</li><li>ESLint reports an <code>Redefinition of __proto__ property</code> parser error</li><li>You remove the second <code>__proto__</code> property</li><li>Prettier can't format the file</li><li>ESLint reports an <code>Identifier 'a' has already been declared</code> error</li><li>You remove the second <code>let</code> keyword</li><li>Prettier formats the file</li></ol><p>Wouldn't it better if it was more like this?</p><ol><li>Prettier formats the file</li><li>ESLint reports two errors: <code>Redefinition of __proto__ property</code> and <code>Identifier 'a' has already been declared</code></li><li>You remove the second <code>__proto__</code> property and the second <code>let</code> keyword</li></ol><p>In this release, we are adding a new option to <code>@babel/parser</code>: <code>errorRecovery</code>. When it is set to true, the resulting AST will have an <code>errors</code> property containing all the errors which <code>@babel/parser</code> was able to recover from:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> input </span><span class="token operator">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">let a = {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">  __proto__: x,</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">  __proto__: y</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">}</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="display:inline-block;color:#718c00"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">let a = 2;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00"></span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">parser</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Throws "Redefinition of __proto__ property"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> ast </span><span class="token operator">=</span><span class="token plain"> parser</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">input</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">errorRecovery</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">ast</span><span class="token punctuation">.</span><span class="token property-access">errors</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token known-class-name class-name" style="color:#eab700">SyntaxError</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Redefinition of __proto__ property"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token known-class-name class-name" style="color:#eab700">SyntaxError</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Identifier 'a' has already been declared"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>@babel/parser</code> can still throw as not every error is currently recoverable. We'll continue to improve these cases!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-configuration-file-extensions-10501-10599">New configuration file extensions (<a href="https://github.com/babel/babel/pull/10501" target="_blank" rel="noopener noreferrer">#10501</a>, <a href="https://github.com/babel/babel/pull/10599" target="_blank" rel="noopener noreferrer">#10599</a>)<a href="#new-configuration-file-extensions-10501-10599" class="hash-link" aria-label="Direct link to new-configuration-file-extensions-10501-10599" title="Direct link to new-configuration-file-extensions-10501-10599">​</a></h2><p>Babel 6 only supported a single configuration file: <code>.babelrc</code>, whose contents must be specified using JSON.</p><p>Babel 7 changed the meaning of <code>.babelrc</code>s and introduced two new configuration files: <code>babel.config.js</code> and <code>.babelrc.js</code> (you can read about the difference between them in the <a href="https://babeljs.io/docs/en/config-files" target="_blank" rel="noopener noreferrer">docs</a>). We added configuration files with JavaScript to allow defining your own logic when enabling/disabling plugins/options.</p><p>However a big benefit of JSON files is easier <em>cacheability</em>. The same JavaScript file can produce different values when called two times, while a JSON file is guaranteed to always evaluate to the same object. Also, JSON configurations are easily serializable, while it's not possible to serialize JavaScript values like functions or JavaScript objects with implicit data or relationships.</p><p>Note that Babel also caches transforms when using JavaScript-based configurations, but the config file must be evaluated (in order to know if the cache is still valid) and the cache <a href="https://babeljs.io/docs/en/config-files#apicache" target="_blank" rel="noopener noreferrer">manually configured</a>.</p><p>For these reasons, Babel 7.7.0 introduces support for a new configuration file: <code>babel.config.json</code>, whose behavior is the same as <code>babel.config.js</code>.</p><p>We also added support for two different configuration files: <code>babel.config.cjs</code> and <code>.babelrc.cjs</code>, which must be used when using node's <a href="https://nodejs.org/api/esm.html#esm_code_package_json_code_code_type_code_field" target="_blank" rel="noopener noreferrer"><code>"type": "module"</code></a> option in <code>package.json</code> (because Babel doesn't support ECMAScript modules in config files). Apart from this <code>"type": "module"</code> difference, they behave exactly like <code>babel.config.js</code> and <code>.babelrc.js</code>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-37-10543-10545">TypeScript 3.7 (<a href="https://github.com/babel/babel/pull/10543" target="_blank" rel="noopener noreferrer">#10543</a>, <a href="https://github.com/babel/babel/pull/10545" target="_blank" rel="noopener noreferrer">#10545</a>)<a href="#typescript-37-10543-10545" class="hash-link" aria-label="Direct link to typescript-37-10543-10545" title="Direct link to typescript-37-10543-10545">​</a></h2><p><a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-7-rc" target="_blank" rel="noopener noreferrer">TypeScript 3.7 RC</a> includes support for optional chaining, nullish coalescing operator, assertion functions, type-only field declarations and many more type-related features.</p><p>Optional chaining (<code>a?.b</code>) and nullish coalescing (<code>a ?? b</code>) have been supported in Babel since 7.0.0 via <code>@babel/plugin-proposal-optional-chaining</code> and <code>@babel/plugin-proposal-nullish-coalescing-operator</code>.</p><p>In Babel 7.7.0, you can now use assertion functions and <code>declare</code> in class fields:</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">assertString</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> assert x </span><span class="token keyword" style="color:#8959a8">is</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">typeof</span><span class="token plain"> x </span><span class="token operator">!==</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"string"</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Error</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"It must be a string!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Developer</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">declare</span><span class="token plain"> usingBabel</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">boolean</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To avoid breaking changes, we introduced support for <code>declare</code> in class fields behind a flag: <code>"allowDeclareFields"</code>, supported by both <code>@babel/plugin-transform-typescript</code> and <code>@babel/preset-typescript</code>. This will likely become default behavior, so it is recommended that you migrate your config to use it:</p><div class="language-jsonld codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsonld codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  "presets": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    ["@babel/preset-typescript", {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      "allowDeclareFields": true</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="use-object-spread-in-compiled-jsx-10572">Use object spread in compiled JSX (<a href="https://github.com/babel/babel/pull/10572" target="_blank" rel="noopener noreferrer">#10572</a>)<a href="#use-object-spread-in-compiled-jsx-10572" class="hash-link" aria-label="Direct link to use-object-spread-in-compiled-jsx-10572" title="Direct link to use-object-spread-in-compiled-jsx-10572">​</a></h2><p>When using spread properties in JSX elements, Babel injects a runtime helper by default:</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">a</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">x</span><span class="token tag" style="color:#c82829"> </span><span class="token tag spread punctuation" style="color:#c82829">{</span><span class="token tag spread operator" style="color:#c82829">...</span><span class="token tag spread" style="color:#c82829">y</span><span class="token tag spread punctuation" style="color:#c82829">}</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// 🡇 🡇 🡇</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_extends</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> _extends </span><span class="token operator">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token property-access">assign</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">target</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> i </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"> i </span><span class="token operator">&lt;</span><span class="token plain"> arguments</span><span class="token punctuation">.</span><span class="token property-access">length</span><span class="token punctuation">;</span><span class="token plain"> i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> source </span><span class="token operator">=</span><span class="token plain"> arguments</span><span class="token punctuation">[</span><span class="token plain">i</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> key </span><span class="token keyword" style="color:#8959a8">in</span><span class="token plain"> source</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token property-access">prototype</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">hasOwnProperty</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">source</span><span class="token punctuation">,</span><span class="token plain"> key</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> target</span><span class="token punctuation">[</span><span class="token plain">key</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> source</span><span class="token punctuation">[</span><span class="token plain">key</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> target</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> _extends</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_extends</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In 2016, as support for native ES6 improved, we added the <code>useBuiltIns</code> option to <code>@babel/plugin-transform-react-jsx</code> which allowed the compiled output to directly use <code>Object.assign</code> and removed excess code:</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">a</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">x</span><span class="token tag" style="color:#c82829"> </span><span class="token tag spread punctuation" style="color:#c82829">{</span><span class="token tag spread operator" style="color:#c82829">...</span><span class="token tag spread" style="color:#c82829">y</span><span class="token tag spread punctuation" style="color:#c82829">}</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// 🡇 🡇 🡇</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However given the native support for object spread, it allows us to produce even more optimized code:</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">a</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">x</span><span class="token tag" style="color:#c82829"> </span><span class="token tag spread punctuation" style="color:#c82829">{</span><span class="token tag spread operator" style="color:#c82829">...</span><span class="token tag spread" style="color:#c82829">y</span><span class="token tag spread punctuation" style="color:#c82829">}</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// 🡇 🡇 🡇</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">y </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can enable it using the <code>useSpread</code> option with either <code>@babel/preset-react</code> or <code>@babel/plugin-transform-react-jsx</code>:</p><div class="language-jsonld codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsonld codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  presets: [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    ["@babel/react", { useSpread: true }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="memory-usage-improvements-10480">Memory usage improvements (<a href="https://github.com/babel/babel/pull/10480" target="_blank" rel="noopener noreferrer">#10480</a>)<a href="#memory-usage-improvements-10480" class="hash-link" aria-label="Direct link to memory-usage-improvements-10480" title="Direct link to memory-usage-improvements-10480">​</a></h2><p>Since the beginning, we have been making efforts (<a href="https://github.com/babel/babel/pull/433" target="_blank" rel="noopener noreferrer">#433</a>, <a href="https://github.com/babel/babel/pull/3475" target="_blank" rel="noopener noreferrer">#3475</a>, <a href="https://github.com/babel/babel/pull/7028" target="_blank" rel="noopener noreferrer">#7028</a>, etc.) to improve performance. Babel 7.7.0 now uses 20% less memory, and transforms large files 8% faster when compared to 7.6.0.</p><p>In order to achieve these results, we optimized different operations done during the lifetime <code>NodePath</code> objects (used to wrap every AST node):</p><ol><li><p>We now avoid initializing some rarely used object properties until they are needed, allowing us to avoid an <code>Object.create(null)</code> allocation for almost every AST node.</p></li><li><p>We reduced bookkeeping workload for every single node visit, by replacing a few uncommon properties with getters so that <code>@babel/traverse</code> can skip updating them.</p></li><li><p>We optimized memory usage by compressing several boolean properties used to represent the status of a node traversal (i.e. skipped, stopped or removed) into a <a href="https://en.wikipedia.org/wiki/Bit_array" target="_blank" rel="noopener noreferrer">bit array</a>.</p></li></ol><p>All these improvements add up to the following difference in transform performance and memory usage:</p><table><thead><tr><th align="center">Performance</th><th align="center">Memory usage</th></tr></thead><tbody><tr><td align="center"><img loading="lazy" src="https://i.imgur.com/bs3DoOX.png" class="img_SS3x"></td><td align="center"><img loading="lazy" src="https://i.imgur.com/n1bQSj1.png" class="img_SS3x"></td></tr></tbody></table><p>You can also checkout the <a href="https://docs.google.com/spreadsheets/d/1lFUKviJwJP83SulEG7tHoaHO4bvxPt1u2UrEySrPAXc/edit?usp=sharing" target="_blank" rel="noopener noreferrer">raw data</a> of the charts above. If you want to read more about this topic, you can read <a href="https://hackmd.io/@VQ5Lhi9URomRC0KamZdyvw/ryuUaFGwS" target="_blank" rel="noopener noreferrer">Jùnliàng's detailed write-up</a> about the changes he made to get those improvements!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.6.0 Released: Private static accessors and V8 intrinsic syntax]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/09/05/7.6.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/09/05/7.6.0</guid>
            <pubDate>Fri, 06 Sep 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[We just released a new minor Babel version!]]></description>
            <content:encoded><![CDATA[<p>We just released a new minor Babel version!</p><p>It includes support for static private accessors in classes, and parser support for the V8 intrinsics syntax. We also fixed a bunch of long-standing issues related to TDZ handling, and improved support for do-expressions. You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.6.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>Thanks to <a href="https://github.com/skyiea" target="_blank" rel="noopener noreferrer">Serhii Muryhin</a>, <a href="https://github.com/epicfaace" target="_blank" rel="noopener noreferrer">Ashwin Ramaswami</a>, <a href="https://github.com/ifsnow" target="_blank" rel="noopener noreferrer">Sungmin Lee</a>, <a href="https://github.com/Sinewyk" target="_blank" rel="noopener noreferrer">Serge Havas</a>, <a href="https://github.com/zaygraveyard" target="_blank" rel="noopener noreferrer">Ziad El Khoury Hanna</a>, <a href="https://github.com/deificx" target="_blank" rel="noopener noreferrer">Even Alander</a>, <a href="https://github.com/banga" target="_blank" rel="noopener noreferrer">Shrey Banga</a>, <a href="https://github.com/dsgkirkby" target="_blank" rel="noopener noreferrer">Dylan Kirkby</a>, <a href="https://github.com/ajaysagar" target="_blank" rel="noopener noreferrer">Ajay Sagar</a>, <a href="https://github.com/AdamRamberg" target="_blank" rel="noopener noreferrer">Adam Ramberg</a>, and <a href="https://github.com/rhyzx" target="_blank" rel="noopener noreferrer">Bin Xin</a> for their first PRs! (And also thanks to <a href="https://github.com/codetriage-readme-bot" target="_blank" rel="noopener noreferrer">Codetriage README Bot</a> and <a href="https://help.github.com/en/articles/configuring-automated-security-fixes" target="_blank" rel="noopener noreferrer">dependabot</a> 🤖)</p><p><a href="https://github.com/bloomberg" target="_blank" rel="noopener noreferrer"><strong>Bloomberg</strong></a> is continuing to sponsor the implementation of new class features in Babel: after giving us a lot of new class features (<a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">static private fields</a>, <a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">private instance methods</a>, <a href="https://babeljs.io/blog/2019/01/21/7.3.0#private-instance-accessors-getters-and-setters-9101-https-githubcom-babel-babel-pull-9101" target="_blank" rel="noopener noreferrer">private instance accessors</a>, and <a href="https://babeljs.io/blog/2019/03/19/7.4.0#static-private-methods-9446-https-githubcom-babel-babel-pull-9446" target="_blank" rel="noopener noreferrer">static private methods</a>), they've just implemented static private getters and setters.</p><p>Another big shout out goes to <a href="https://frontendmasters.com/" target="_blank" rel="noopener noreferrer"><strong>Frontend Masters</strong></a> for making two big donations this past month, as well as all <a href="https://opencollective.com/babel#contributors" target="_blank" rel="noopener noreferrer">our other sponsors</a> who allow the Babel team to spend more time on the project!</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code. Reach out to Henry at <a href="mailto:henry@babeljs.io" target="_blank" rel="noopener noreferrer">henry@babeljs.io</a> if you'd like to talk more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="private-static-accessors-getters-and-setters-10217">Private static accessors (getters and setters) (<a href="https://github.com/babel/babel/pull/10217" target="_blank" rel="noopener noreferrer">#10217</a>)<a href="#private-static-accessors-getters-and-setters-10217" class="hash-link" aria-label="Direct link to private-static-accessors-getters-and-setters-10217" title="Direct link to private-static-accessors-getters-and-setters-10217">​</a></h2><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Resource</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> #loaderInstance </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">get</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#loaderInstance</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#loaderInstance</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#loaderInstance</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  status </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">url</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">status</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">Resource</span><span class="token punctuation">.</span><span class="token property-access">#loader</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">load</span><span class="token punctuation">(</span><span class="token plain">url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks to <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim</a> (Bloomberg) for implementing this proposal!</p><p>You can test this new feature by adding <code>@babel/plugin-proposal-private-methods</code> to your config, if you haven't already added it, or by enabling the <code>stage-3</code> preset in the online <a href="https://babeljs.io/repl/build/main#?presets=stage-3" target="_blank" rel="noopener noreferrer">repl</a>.</p><p>Class private features support is finally complete 🎉</p><div style="margin:auto;width:fit-content"><table><thead><tr><th>Class Private</th><th><strong>Instance</strong></th><th><strong>Static</strong></th></tr></thead><tbody><tr><td><strong>Fields</strong> <br> <code>class A { #a = 1 }</code></td><td><a href="https://babeljs.io/blog/2018/08/27/7.0.0#tc39-proposals-https-githubcom-tc39-proposals-support" target="_blank" rel="noopener noreferrer">7.0.0</a></td><td><a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">7.1.0</a></td></tr><tr><td><strong>Methods</strong> <br> <code>class A { #a() {} }</code></td><td><a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">7.2.0</a></td><td><a href="https://babeljs.io/blog/2019/03/19/7.4.0#static-private-methods-9446-https-githubcom-babel-babel-pull-9446" target="_blank" rel="noopener noreferrer">7.4.0</a></td></tr><tr><td><strong>Accessors</strong> <br> <code>class A { get #a() {} }</code></td><td><a href="https://babeljs.io/blog/2019/01/21/7.3.0#private-instance-accessors-getters-and-setters-9101-https-githubcom-babel-babel-pull-9101" target="_blank" rel="noopener noreferrer">7.3.0</a></td><td>7.6.0</td></tr></tbody></table></div><div style="margin:auto;width:fit-content"><p><img loading="lazy" src="https://media.giphy.com/media/3KC2jD2QcBOSc/source.gif" alt="It's time to party!" class="img_SS3x"></p></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="v8-intrinsic-runtime-functions-parsing-10148">V8 intrinsic runtime functions parsing (<a href="https://github.com/babel/babel/pull/10148" target="_blank" rel="noopener noreferrer">#10148</a>)<a href="#v8-intrinsic-runtime-functions-parsing-10148" class="hash-link" aria-label="Direct link to v8-intrinsic-runtime-functions-parsing-10148" title="Direct link to v8-intrinsic-runtime-functions-parsing-10148">​</a></h2><blockquote><p>⚠️ This is a non-standard extension to the language, which can only be used in V8 when enabling the <code>--allow-natives-syntax</code> command-line flag.</p></blockquote><p>V8, the JavaScript engine used by Node.js and Chromium-based browsers, can expose various pieces of internal functionality as JavaScript functions. Although these APIs must not be used in production JavaScript code, these special functions <em>can</em> be useful in testing and debugging scenarios — for example, to understand how your JavaScript values are represented in memory, or to call some ECMAScript specification routines directly.</p><p>These so-called “V8 intrinsics” have a different syntax than normal functions: their name always starts with <code>%</code>. Also, they can only be directly called and never used as normal values (you can't, for example, assign them to another variable).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/* ... */</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> status </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">%</span><span class="token function maybe-class-name" style="color:#4271ae">GetOptimizationStatus</span><span class="token punctuation">(</span><span class="token plain">fn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">status </span><span class="token operator">===</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"The function is not optimized!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can find the whole list of existing V8 intrinsics in <a href="https://github.com/v8/v8/blob/master/src/runtime/runtime.h" target="_blank" rel="noopener noreferrer">V8's source code</a>.</p><p>You can enable this syntax in <code>@babel/parser</code> by using the <code>v8intrinsic</code> plugin:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> parse </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"@babel/parser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">code</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"v8intrinsic"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="nullish-coalescing-operator--updates-10269">Nullish coalescing operator (<code>??</code>) updates (<a href="https://github.com/babel/babel/pull/10269" target="_blank" rel="noopener noreferrer">#10269</a>)<a href="#nullish-coalescing-operator--updates-10269" class="hash-link" aria-label="Direct link to nullish-coalescing-operator--updates-10269" title="Direct link to nullish-coalescing-operator--updates-10269">​</a></h2><p>The nullish coalescing stage 3 proposal recently got some updates: to avoid confusion over precedence with other logical operators (<code>&amp;&amp;</code> and <code>||</code>), the spec has been changed to disallow mixing them.</p><p>This means that the following expressions are now invalid:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">a </span><span class="token operator">??</span><span class="token plain"> b </span><span class="token operator">||</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">a </span><span class="token operator">&amp;&amp;</span><span class="token plain"> b </span><span class="token operator">??</span><span class="token plain"> c</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Instead, you should add parentheses where appropriate:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">(</span><span class="token plain">a </span><span class="token operator">??</span><span class="token plain"> b</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/* or */</span><span class="token plain"> a </span><span class="token operator">??</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">b </span><span class="token operator">||</span><span class="token plain"> c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token plain">a </span><span class="token operator">&amp;&amp;</span><span class="token plain"> b</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">??</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/* or */</span><span class="token plain"> a </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">b </span><span class="token operator">??</span><span class="token plain"> c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is similar to how unary minus (<code>-</code>) and the exponentiation operator (<code>**</code>) interact: you can't write <code>-1 ** 2</code>, but you have to choose between <code>(-1) ** 2</code> and <code>-(1 ** 2)</code>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.5.0 Released: dynamic import and F# pipelines]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/07/03/7.5.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/07/03/7.5.0</guid>
            <pubDate>Wed, 03 Jul 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are releasing Babel 7.5.0!]]></description>
            <content:encoded><![CDATA[<p>Today we are releasing Babel 7.5.0!</p><p>This release includes improved support for a few ECMAScript proposals: the F# variant of the Stage 1 pipeline operator and an official plugin for the Stage 4 dynamic <code>import()</code> proposal (along with <code>preset-env</code> support).
It also has support for TypeScript <code>namespace</code>s (experimental) and for Browserslist's <code>default</code> query in <code>preset-env</code>.</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.5.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>Thanks to <a href="https://github.com/Wolvereness" target="_blank" rel="noopener noreferrer">Wesley Wolfe</a>, <a href="https://github.com/mrtnzlml" target="_blank" rel="noopener noreferrer">Martin Zlámal</a>, <a href="https://github.com/phated" target="_blank" rel="noopener noreferrer">Blaine Bublitz</a>, <a href="https://github.com/Letladi" target="_blank" rel="noopener noreferrer">Letladi Sebesho</a>, <a href="https://github.com/darkyndy" target="_blank" rel="noopener noreferrer">Paul Comanici</a>, <a href="https://github.com/lidoravitan" target="_blank" rel="noopener noreferrer">Lidor Avitan</a>, <a href="https://github.com/sormy" target="_blank" rel="noopener noreferrer">Artem Butusov</a>, <a href="https://github.com/ChlorideCull" target="_blank" rel="noopener noreferrer">Sebastian Johansson</a>, and <a href="https://github.com/minho42" target="_blank" rel="noopener noreferrer">Min ho Kim</a> for their first PRs!</p><p>We are always looking for help, especially with triaging issues, reviewing pull requests and helping people on Slack. We are experimenting with the new <a href="https://github.blog/changelog/2019-05-23-triage-and-maintain-roles-beta/" target="_blank" rel="noopener noreferrer">triage</a> role implemented by GitHub, and we want to recognize people from the community who will stand up and help us! 😉</p><p>A fantastic example of this are the newest additions to the Babel organization: <a href="https://github.com/tanhauhau" target="_blank" rel="noopener noreferrer">Tan Li Hau</a>, who has been a great help in triaging issues and fixing bugs, and <a href="https://twitter.com/thiagoarrais" target="_blank" rel="noopener noreferrer">Thiago Arrais</a>, who helped in implementing the pipeline operator!</p><p>In other news, we just <a href="https://twitter.com/left_pad/status/1146069623940558849" target="_blank" rel="noopener noreferrer">announced</a> the start of our own podcast! If you missed it, please check out our <a href="https://babeljs.io/blog/2019/07/02/the-babel-podcast" target="_blank" rel="noopener noreferrer">post</a> from yesterday!</p><p>Our work has made been possible also by our sponsors. We want to thank both <a href="https://discordapp.com/" target="_blank" rel="noopener noreferrer">Discord</a> and <a href="https://clay.global" target="_blank" rel="noopener noreferrer">clay</a> for becoming Silver Sponsors on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a>, as well as <a href="https://linkedin.com" target="_blank" rel="noopener noreferrer">Linkedin</a> for becoming a Silver Sponsor of Henry on GitHub!</p><p><img loading="lazy" src="https://handshake.org/images/landing/logo-dark.svg" class="img_SS3x"></p><p>Special thanks go to <a href="https://handshake.org" target="_blank" rel="noopener noreferrer">Handshake</a>, a decentralized, permissionless naming protocol compatible with DNS, for donating $100,000 last year! As a part of their FOSS Community Grant, they pledged $10.2M to various open source communities like Apache, Debian, EFF, and Babel.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can sponsor us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code. Reach out to Henry at <a href="mailto:henry@babeljs.io" target="_blank" rel="noopener noreferrer">henry@babeljs.io</a> if you'd like to talk more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="f-pipeline-operator-9450-and-9984">F# pipeline operator (<a href="https://github.com/babel/babel/pull/9450" target="_blank" rel="noopener noreferrer">#9450</a> and <a href="https://github.com/babel/babel/pull/9984" target="_blank" rel="noopener noreferrer">#9984</a>)<a href="#f-pipeline-operator-9450-and-9984" class="hash-link" aria-label="Direct link to f-pipeline-operator-9450-and-9984" title="Direct link to f-pipeline-operator-9450-and-9984">​</a></h2><blockquote><p>⚠️ The pipeline operator proposal is still at Stage 1, and thus its specification is still being defined.</p></blockquote><p>This <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">proposal</a> has a few variants that are being thought out. By testing this plugin, you can help the proposal authors gather feedback about how pipelines could work. But also note that refactoring will be required if the semantics change throughout the proposal process (and they will).</p><p>Since version 7.3.0, Babel has supported the <a href="https://github.com/tc39/proposal-pipeline-operator/wiki#proposal-4-smart-mix" target="_blank" rel="noopener noreferrer">Smart variant</a> of the pipeline operator proposal, and the <a href="https://github.com/tc39/proposal-pipeline-operator/wiki#proposal0-original-minimal-proposal" target="_blank" rel="noopener noreferrer">"minimal" variant</a> since 7.0.0-beta.</p><p>Thanks to the joint efforts of <a href="https://twitter.com/thiagoarrais" target="_blank" rel="noopener noreferrer">Thiago Arrais</a> and <a href="https://twitter.com/JamesDiGioia" target="_blank" rel="noopener noreferrer">James DiGioia</a>, you can now also test the <a href="https://github.com/tc39/proposal-pipeline-operator/wiki#proposal-1-f-sharp-style-only-with-await" target="_blank" rel="noopener noreferrer">"# variant</a>! If you have thoughts or comments about this specific proposal variant, you can reach out to <a href="https://twitter.com/JamesDiGioia" target="_blank" rel="noopener noreferrer">James</a>.</p><p>How is the F# variant different from the Smart one? Instead of having the concept of "topic references" (<code>#</code>), arrow functions are used instead. This has the advantage of being more similar to current JavaScript, at the cost of a slightly less concise syntax.</p><table class="danger-force-code-no-wrap"><thead><tr><th>Current JavaScript</th><th>F# pipeline</th><th>Smart pipeline</th></tr></thead><tbody><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">boundScore</span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">double</span><span class="token punctuation">(</span><span class="token plain">person</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">n</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">,</span><span class="token plain"> n</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">n</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">boundScore</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> n</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">,</span><span class="token plain"> #</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">boundScore</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> #</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>Although the two proposals aren't dependent on one another or being developed as a single proposal, you can use F# pipelines alongside with partial application (supported since Babel 7.4.0):</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">boundScore</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Note that, while it may look the same as the "Smart" pipeline variant, the partial application proposal only supports <code>?</code> in function call parameters. This means that, for example, <code>person |&gt; #.score</code> is a valid "Smart" pipeline whose F# equivalent must use an arrow function: <code>person |&gt; p =&gt; p.score</code>.</p><p>The F# pipeline operator is also different regarding how <code>await</code> is handled:</p><table class="danger-force-code-no-wrap"><thead><tr><th>Current JavaScript</th><th>F# pipeline</th><th>Smart pipeline</th></tr></thead><tbody><tr><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> id </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">fetch</span><span class="token punctuation">(</span><span class="token plain">url</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">ID</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">fetch</span><span class="token punctuation">(</span><span class="token plain">url</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">r</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> r</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">obj</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">ID</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td><td><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">fetch</span><span class="token punctuation">(</span><span class="token plain">url</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> #</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> #</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> #</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> #</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">ID</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></td></tr></tbody></table><p>If you want to test this new proposal variant, you can add <code>@babel/plugin-proposal-pipeline-operator</code> to your Babel configuration:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/proposal-pipeline-operator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">proposal</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"fsharp"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also try it out in the <a href="https://babeljs.io/repl/version/%5E7.5.0#?presets=stage-1" target="_blank" rel="noopener noreferrer">repl</a>, by enabling the "Stage 1" preset.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="dynamic-import-9552-and-10109">Dynamic import (<a href="https://github.com/babel/babel/pull/9552" target="_blank" rel="noopener noreferrer">#9552</a> and <a href="https://github.com/babel/babel/pull/10109" target="_blank" rel="noopener noreferrer">#10109</a>)<a href="#dynamic-import-9552-and-10109" class="hash-link" aria-label="Direct link to dynamic-import-9552-and-10109" title="Direct link to dynamic-import-9552-and-10109">​</a></h2><p>Although Babel has had support for parsing dynamic imports <code>import(source)</code> for a long time, there hasn't been a consistent way of transforming it.</p><ul><li>If you used <code>webpack</code> or <code>rollup</code>, you would only include <code>@babel/plugin-syntax-dynamic-import</code> and not transform it with Babel</li><li>If you used Node, you could use the <a href="https://github.com/airbnb/babel-plugin-dynamic-import-node/" target="_blank" rel="noopener noreferrer"><code>babel-plugin-dynamic-import-node</code></a> plugin to transform it</li><li>If you used SystemJS, <code>@babel/plugin-transform-modules-systemjs</code> in conjunction with <code>@babel/plugin-syntax-dynamic-import</code> transformed it without explicitly enabling a transform plugin for <code>import()</code></li></ul><p>Since the dynamic import proposal has been recently merged into the main specification, we have decided to unify these use-cases under a single entry point: <code>@babel/plugin-proposal-dynamic-import</code>. This plugin must be used alongside one of the module transform plugins because Babel needs to know which module loading system you are targeting. When targeting CommonJS, it internally delegates to <a href="https://github.com/airbnb/babel-plugin-dynamic-import-node/" target="_blank" rel="noopener noreferrer"><code>babel-plugin-dynamic-import-node</code></a>.</p><p>For example, this is a valid configuration:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-dynamic-import"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-transform-modules-amd"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>While this isn't:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-dynamic-import"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you want to only allow parsing of <code>import()</code> expressions without transforming them, you can just include the <code>@babel/plugin-syntax-dynamic-import</code> package.</p><p>If you are using <code>@babel/preset-env</code>, dynamic import support will be enabled by default. You don't need to worry about <code>webpack</code> or <code>rollup</code> support, since both <code>babel-loader</code> and <code>rollup-plugin-babel</code> automatically disable the Babel transform to allow the bundler to handle it correctly.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="defaults-browserslist-query-in-babelpreset-env-8897"><code>defaults</code> browserslist query in <code>@babel/preset-env</code> (<a href="https://github.com/babel/babel/pull/8897" target="_blank" rel="noopener noreferrer">#8897</a>)<a href="#defaults-browserslist-query-in-babelpreset-env-8897" class="hash-link" aria-label="Direct link to defaults-browserslist-query-in-babelpreset-env-8897" title="Direct link to defaults-browserslist-query-in-babelpreset-env-8897">​</a></h2><p>When <code>@babel/preset-env</code> is not passed any targets, it runs every syntax transform on your code (emulating the now deprecated <code>babel-preset-latest</code>).</p><p>To support this behavior, we had to work around the fact that Browserslist itself has <a href="https://browserl.ist/?q=defaults" target="_blank" rel="noopener noreferrer">default choices</a>. This caused <code>@babel/preset-env</code> to not allow usage of the <code>default</code> query.</p><p><code>@babel/preset-env</code> now supports the <code>defaults</code> query when passing targets directly to the preset:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">targets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">browsers</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"defaults"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also set it using a <code>.browserslistrc</code> file, which is also used by other tools like <a href="https://github.com/postcss/autoprefixer" target="_blank" rel="noopener noreferrer">Autoprefixer</a> or <a href="https://stylelint.io/" target="_blank" rel="noopener noreferrer">Stylelint</a>.</p><p>The default behavior of <code>@babel/preset-env</code> is still to compile everything, but we might switch it in Babel 8 to use this <code>defaults</code> query.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-typescript-namespaces-support-9785">Experimental TypeScript <code>namespaces</code> support (<a href="https://github.com/babel/babel/pull/9785" target="_blank" rel="noopener noreferrer">#9785</a>)<a href="#experimental-typescript-namespaces-support-9785" class="hash-link" aria-label="Direct link to experimental-typescript-namespaces-support-9785" title="Direct link to experimental-typescript-namespaces-support-9785">​</a></h2><p>Until now, <a href="https://www.typescriptlang.org/docs/handbook/namespaces.html" target="_blank" rel="noopener noreferrer">namespaces</a> were the second biggest TypeScript feature not supported by Babel (the first one is type-checking! 😛). Thanks to the work done by community member <a href="https://twitter.com/wolvereness" target="_blank" rel="noopener noreferrer">Wesley Wolfe</a>, you can now enable <em>experimental</em> support for them in the TypeScript plugin, using the <code>allowNamespaces</code> option of <code>@babel/plugin-transform-typescript</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-transform-typescript"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">allowNamespaces</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then, you can use namespaces in your code:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">namespace </span><span class="token maybe-class-name">Validation</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> lettersRegexp </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">^[A-Za-z]+$</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> numberRegexp </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">^[0-9]+$</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">LettersOnlyValidator</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">isAcceptable</span><span class="token punctuation">(</span><span class="token parameter literal-property property" style="color:#f5871f">s</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> string</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> lettersRegexp</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token plain">s</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="️-warning-️">⚠️ Warning ⚠️<a href="#️-warning-️" class="hash-link" aria-label="Direct link to ⚠️ Warning ⚠️" title="Direct link to ⚠️ Warning ⚠️">​</a></h3><p>When TypeScript support was initially added to Babel, <code>namespaces</code> were not included since they require type information that only a full TypeScript compiler and type-checker can provide. For this reason, this current (experimental) support has some limitations:</p><ul><li>Namespaces can only export immutable bindings</li><li>When merging multiple namespaces with the same name, their scope isn't shared</li></ul><p>You can find the full list of caveats in the <code>@babel/plugin-transform-typescript</code> <a href="https://babeljs.io/docs/en/babel-plugin-transform-typescript#caveats" target="_blank" rel="noopener noreferrer">documentation</a>.</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The Babel Podcast]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/07/02/the-babel-podcast</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/07/02/the-babel-podcast</guid>
            <pubDate>Tue, 02 Jul 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we're announcing the The Babel Podcast!]]></description>
            <content:encoded><![CDATA[<p>Today we're announcing the <a href="https://podcast.babeljs.io" target="_blank" rel="noopener noreferrer">The Babel Podcast</a>!</p><blockquote><p>You probably use Babel, directly or as a dependency. But do you ever wonder who works on it? Henry Zhu chats with other members of the team, TC39, and the JS community about the future of JavaScript and how it's all maintained. Please join us in babbling about Babel (and everything else)!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="subscribe-with-apple--google--spotify--rss">Subscribe with: <a href="https://podcasts.apple.com/us/podcast/the-babel-podcast/id1470143101" target="_blank" rel="noopener noreferrer">Apple</a> | <a href="https://www.google.com/podcasts?feed=aHR0cHM6Ly9mZWVkcy50cmFuc2lzdG9yLmZtL3RoZS1iYWJlbC1wb2RjYXN0" target="_blank" rel="noopener noreferrer">Google</a> | <a href="https://open.spotify.com/show/3TK8x8AGckeEQEtnJVZYAz" target="_blank" rel="noopener noreferrer">Spotify</a> | <a href="https://feeds.transistor.fm/the-babel-podcast" target="_blank" rel="noopener noreferrer">RSS</a><a href="#subscribe-with-apple--google--spotify--rss" class="hash-link" aria-label="Direct link to subscribe-with-apple--google--spotify--rss" title="Direct link to subscribe-with-apple--google--spotify--rss">​</a></h3><p>To start out, our first <a href="https://podcast.babeljs.io/rome" target="_blank" rel="noopener noreferrer">episode</a> is with our good friend <a href="https://twitter.com/sebmck" target="_blank" rel="noopener noreferrer">Sebastian McKenzie</a>, the creator of Babel (<a href="https://podcast.babeljs.io/rome/#transcript" target="_blank" rel="noopener noreferrer">transcript</a>)!</p><iframe src="https://share.transistor.fm/e/b65dd0f9" width="100%" height="180" frameborder="0" scrolling="no" seamless="" style="width:100%;height:180px"></iframe><blockquote><p>It does take time to create and maintain these podcasts (equipment, research, editing, transcription), so consider <a href="https://github.com/babel/babel?sponsor=1" target="_blank" rel="noopener noreferrer">supporting</a> us! We could also add specific podcast sponsors, so let <a href="https://twitter.com/left_pad" target="_blank" rel="noopener noreferrer">me</a> know if you'd be interested in doing so.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="why">Why?<a href="#why" class="hash-link" aria-label="Direct link to Why?" title="Direct link to Why?">​</a></h2><p>Personally, I've been getting into podcasts a lot lately: first with <a href="https://hopeinsource.com" target="_blank" rel="noopener noreferrer">Hope in Source</a> (<a href="https://www.henryzoo.com/living-out-in-faith" target="_blank" rel="noopener noreferrer">blog</a>) and recently <a href="https://www.maintainersanonymous.com" target="_blank" rel="noopener noreferrer">Maintainers Anonymous</a> (<a href="https://www.henryzoo.com/maintainers-podcast" target="_blank" rel="noopener noreferrer">blog</a>). After years of just listening to them, I finally felt the urge to start some, and now we're here.</p><p>I understand there are plenty of JavaScript podcasts, podcasts about open source, and maybe way too many podcasts in general; but I think there's room for a podcast about specific open source projects. We are in the interesting position to be able to talk about topics that level up the community as stewards of this infrastructure project.</p><p>Instead of being interviewed to talk about our own project, why not do it ourselves and have a space to go deeper? Many times the questions and responses are high level because the audience is not specific to the tool being mentioned, not interested, or just doesn't have enough context to understand. It can be more comfortable to just be yourself and not need to craft a specific response online. Why wait to speak on another platform when we have the chance to do it on our own time? Having our own "official" content as well (whether it's documentation, videos, workshops, etc) makes it easier for everyone (searching, newcomers, ourselves, etc).</p><p>If anything, this could help our team to better communicate to our users and the greater JavaScript community about how things work and an opportunity for us all to level up in understanding so more people can get involved and help out.</p><p>So what does it all mean? What could be interesting about a podcast specifically about Babel? Is talking about random bugs or issues of the day relevant or worth listening to? Let's talk about purpose.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="goals">Goals<a href="#goals" class="hash-link" aria-label="Direct link to Goals" title="Direct link to Goals">​</a></h2><p>Podcasting doesn't have a lot of rules and we can do whatever seems fun: it also gives the capacity to explain things in detail and give a more personal, intimate touch, unlike social media (including GitHub).</p><ul><li>Inspire and inform would-be contributors to get involved (for more detailed topics I think I'd continue to try livestreams/videos)</li><li>Helping people understand the ecosystem JavaScript better (the language/specification itself, TC39, culture).</li><li>Learning about the people and context behind the tools we use: Babel maintainers/contributors, related projects like webpack/ESLint, TC39 committee.</li></ul><p>Current non-goals: talk about news or a "this week in Babel", have a set weekly schedule, have a certain type of format (guests, 30 minutes, etc).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="help-us-brainstorm-ideas">Help Us Brainstorm Ideas!<a href="#help-us-brainstorm-ideas" class="hash-link" aria-label="Direct link to Help Us Brainstorm Ideas!" title="Direct link to Help Us Brainstorm Ideas!">​</a></h2><blockquote><p>Please reach out to us at <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a> on Twitter or on the <a href="https://github.com/hzoo/podcast.babeljs.io" target="_blank" rel="noopener noreferrer">repo</a> if you have guest suggestions, topic ideas, or feedback!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="some-guesttopics-ideas">Some Guest/Topics Ideas<a href="#some-guesttopics-ideas" class="hash-link" aria-label="Direct link to Some Guest/Topics Ideas" title="Direct link to Some Guest/Topics Ideas">​</a></h3><p>What else do you want to hear about? Who do you want to hear from?</p><ul><li>Interviewing the core team/contributors: how did you get involved, what is exciting about the project, your role, the future?</li><li>High level concepts in Babel (ASTs, visitor pattern, compilers, testing, JS specification)</li><li>Background/struggles in key decisions we've made:<ul><li>Removing stage presets</li><li>On private fields syntax (# instead of private)</li><li>Common questions: "Won't Babel be obsolete soon?"</li><li>Why did you do x?</li></ul></li><li>Chatting with various Babel plugin authors? <a href="https://github.com/kentcdodds/babel-plugin-macros" target="_blank" rel="noopener noreferrer">babel-macros</a>, i18n</li><li>Babel alternatives: <a href="https://github.com/google/traceur-compiler" target="_blank" rel="noopener noreferrer">traceur</a>, <a href="https://github.com/bublejs/buble" target="_blank" rel="noopener noreferrer">buble</a>, <a href="https://github.com/alangpierce/sucrase" target="_blank" rel="noopener noreferrer">sucrase</a>, <a href="https://github.com/swc-project/swc" target="_blank" rel="noopener noreferrer">swc</a><ul><li>It would be fun to chat about why the projects were made, what the differences/tradeoffs are, etc!</li></ul></li><li>Compile to JavaScript languages<ul><li>Elm/Reason/etc (standalone language)</li><li>Coffeescript/Dart (explicitly recommends Babel for compiling down to ES5)</li><li>Fable (F#) (uses Babel itself)</li><li>TypeScript (we have an integration)</li></ul></li><li>Related tooling: CSSX, PostCSS</li><li>Babel integrations (things that use Babel as infrastructure): Jest/Next.js/Parcel/CRA</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="language-standardstc39-topics">Language Standards/TC39 Topics<a href="#language-standardstc39-topics" class="hash-link" aria-label="Direct link to Language Standards/TC39 Topics" title="Direct link to Language Standards/TC39 Topics">​</a></h3><ul><li>Speak with folks on TC39 to explain how things are done, how to get involved, and what can change.<ul><li>On Babel as a test bed for new features</li><li>How does it differ from other language standards like C or browser APIs?</li><li>History of a specific feature: how does it get finalized?</li><li>What’s a meeting like: who goes, how it is organized? Is there much arguing or voting?</li><li>How has decision making evolved over time? (the Staging process)</li><li>How is “feedback” received or taken?</li><li>How important are “edge cases”: why does it matter?</li><li>Perception of the language over time: moving too fast, moving too slow</li><li>Questions about language design: performance, usability, teachability, aesthetics, syntax budget, etc.</li><li>Ecosystem alignment: how is the language shaped by tools, libraries, other use cases other than the web?</li></ul></li><li>History of Committee Itself<ul><li>Transitions: using a Word doc to GitHub, using TCQ, the "how we work" repo</li><li>Growth of committee over the years (language designers, implementers, practitioners, educators, combination)</li><li>Specific proposals: Object.observe, etc?</li></ul></li><li>Presenting a Proposal<ul><li>Explaining the problem space</li><li>Scope: complexity of change, interactions with other features</li><li>Precedence: existing userland implementation, previous discussions, other languages, similar features</li></ul></li></ul><blockquote><p>We asked on <a href="https://twitter.com/left_pad/status/1093529997162237952" target="_blank" rel="noopener noreferrer">Twitter</a> about the name and got some fun suggestions including Lost in Transpilation, Babbling On, Babel Babble, etc. But in the end, "The Babel Podcast" is the most clear!</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.4.0 Released: core-js 3, static private methods and partial application]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/03/19/7.4.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/03/19/7.4.0</guid>
            <pubDate>Tue, 19 Mar 2019 21:30:00 GMT</pubDate>
            <description><![CDATA[Today we are releasing Babel 7.4.0!]]></description>
            <content:encoded><![CDATA[<p>Today we are releasing Babel 7.4.0!</p><p>This release includes support for <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-4-rc" target="_blank" rel="noopener noreferrer">TypeScript 3.4</a>, the proposal for partial application in function calls, and static private methods.</p><p>We added support for meaningful parenthesized expressions in <code>@babel/parser</code>, and also made it more spec compliant than <em>ever</em>!</p><p>Last but not least, both <code>@babel/preset-env</code> and <code>@babel/transform-runtime</code> now support <code>core-js@3</code>, and <code>@babel/template</code> has some sweet new syntax!</p><p>You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.4.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><hr><p>Special thanks to all the new Babel contributors 😊. Since we started generating release changelogs using GitHub actions we hadn't had the chance to thank them in each release, but since Babel 7.3.3 they have been a lot of people!</p><ul><li>Babel 7.3.3: <a href="https://github.com/Alec321" target="_blank" rel="noopener noreferrer">@Alec321</a>, <a href="https://github.com/mhcgrq" target="_blank" rel="noopener noreferrer">@mhcgrq</a>, <a href="https://github.com/ilyalesik" target="_blank" rel="noopener noreferrer">@ilyalesik</a>, <a href="https://github.com/yifei-fu" target="_blank" rel="noopener noreferrer">@yifei-fu</a></li><li>Babel 7.3.4: <a href="https://github.com/elevatebart" target="_blank" rel="noopener noreferrer">@elevatebart</a>, <a href="https://github.com/ian-craig" target="_blank" rel="noopener noreferrer">@ian</a>, <a href="https://github.com/imjacobclark" target="_blank" rel="noopener noreferrer">@imjacobclark</a>, <a href="https://github.com/irohitb" target="_blank" rel="noopener noreferrer">@irohitb</a></li><li>Babel 7.4.0: <a href="https://github.com/AmirS" target="_blank" rel="noopener noreferrer">@AmirS</a>, <a href="https://github.com/agoldis" target="_blank" rel="noopener noreferrer">@agoldis</a>, <a href="https://github.com/byara" target="_blank" rel="noopener noreferrer">@byara</a>, <a href="https://github.com/echenley" target="_blank" rel="noopener noreferrer">@echenley</a>, <a href="https://github.com/tanohzana" target="_blank" rel="noopener noreferrer">@tanohzana</a>, <a href="https://github.com/matt-tingen" target="_blank" rel="noopener noreferrer">@matt</a>, <a href="https://github.com/penielse" target="_blank" rel="noopener noreferrer">@penielse</a>, <a href="https://github.com/pnowak" target="_blank" rel="noopener noreferrer">@pnowak</a></li></ul><p>Many features in this release have been developed in collaboration with our sponsors. <a href="https://github.com/bloomberg" target="_blank" rel="noopener noreferrer"><strong>Bloomberg</strong></a> has contributed support for a new kind of private element in every release since 7.0 (<a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">7.1</a>, <a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">7.2</a>, <a href="https://babeljs.io/blog/2019/01/21/7.3.0#private-instance-accessors-getters-and-setters-9101-https-githubcom-babel-babel-pull-9101" target="_blank" rel="noopener noreferrer">7.3</a>), and they've now implemented static private methods! This leaves only static private getters and setters remaining.</p><p>Similarly, <a href="https://github.com/trivago" target="_blank" rel="noopener noreferrer"><strong>Trivago</strong></a> (a Base Support Sponsor on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a>) took over the implementation of the partial application plugin.</p><p>Over the last month, we have been experimenting with working more directly with companies on various features/optimizations that would benefit the community: <a href="https://github.com/runkitdev" target="_blank" rel="noopener noreferrer"><strong>RunKit</strong></a> has been sponsoring <a href="https://github.com/nicolo-ribaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> to implement placeholder support in <code>@babel/template</code>.</p><p>When managing a big open source project, not everything is code: we need to manage servers, continuous integration, social media accounts and... a lot of passwords! We really appreciate <a href="https://github.com/1Password/" target="_blank" rel="noopener noreferrer"><strong>1Password</strong></a> for accepting us into their <a href="https://github.com/1Password/1password-teams-open-source" target="_blank" rel="noopener noreferrer">open source support program</a> and providing us a free 1Password Teams account!</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code. Reach out to Henry at <a href="mailto:henry@babeljs.io" target="_blank" rel="noopener noreferrer">henry@babeljs.io</a> if you'd like to talk more!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="core-js-3-7646"><code>core-js</code> 3 (<a href="https://github.com/babel/babel/pull/7646" target="_blank" rel="noopener noreferrer">#7646</a>)<a href="#core-js-3-7646" class="hash-link" aria-label="Direct link to core-js-3-7646" title="Direct link to core-js-3-7646">​</a></h2><p>We've received lots of kudos for our work on <code>@babel/preset-env</code>, but much of that should really go to the awesome work done by <a href="https://github.com/zloirock" target="_blank" rel="noopener noreferrer">Denis</a>. He maintains <code>core-js</code> which provides all the polyfills loaded by <code>@babel/polyfill</code>, <code>@babel/runtime</code> and <code>@babel/preset-env</code>.</p><p><code>core-js@3</code> was just released, and includes a lot of new features: you can read about them at <a href="https://github.com/zloirock/core-js/blob/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md" target="_blank" rel="noopener noreferrer">"core-js@3, babel and a look into the future"</a>. Other than all the new proposals, it makes it possible to polyfill transform <strong>instance</strong> methods using <code>@babel/plugin-transform-runtime</code> so that they can be used in old browsers without polluting the global environment:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// 'foo' could be either a string or an array, or a custom object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">foo</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">includes</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// ⮕</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">_includesInstanceProperty</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"@babel/runtime-corejs3/core-js-stable/instance/includes"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">_includesInstanceProperty</span><span class="token punctuation">(</span><span class="token plain">foo</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">foo</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>@babel/preset-env</code> and <code>@babel/plugin-transform-runtime</code> now support polyfilling proposals: you just need to use <code>corejs: { version: 3, proposals: true }</code> instead of <code>corejs: 3</code> in your configuration. Keep in mind that ECMAScript proposals are inherently unstable, and could change in <code>core-js@4</code>!</p><p>Previously, <code>@babel/preset-env</code> relied entirely on <code>compat-table</code> data for determining which polyfills needed to be loaded for a particular environment. <code>core-js@3</code> introduces its own compatibility data set with an exhaustive test suite that should result in much more accurate polyfilling!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="migration-from-core-js2">Migration from <code>core-js@2</code><a href="#migration-from-core-js2" class="hash-link" aria-label="Direct link to migration-from-core-js2" title="Direct link to migration-from-core-js2">​</a></h3><p>Since versions <code>2</code> and <code>3</code> of <code>core-js</code> are incompatible with each other (we don't want to break your code!), it isn't enabled by default.</p><ul><li><p>If you are using <code>@babel/preset-env</code>, you need to enable the <code>corejs: 3</code> option:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">useBuiltIns</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"usage"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// or "entry"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">corejs</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Don't forget to update your installed version of <code>core-js</code>!</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npm install --save core-js@3</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When using <code>core-js</code> 3, the <code>useBuiltIns: "entry"</code> option not only transforms <code>import "core-js"</code> imports, but also <code>regenerator-runtime/runtime</code> and all the nested <code>core-js</code> entry points.</p><p>For example, when targeting Chrome 72, it will apply this transformation:</p><details class="details_IpIu alert alert--info details_jERq" data-collapsed="true"><summary>Input</summary><div><div class="collapsibleContent_Fd2D"><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/es"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/proposals/set-methods"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/features/set/map"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><details class="details_IpIu alert alert--info details_jERq" data-collapsed="true"><summary>Output</summary><div><div class="collapsibleContent_Fd2D"><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es.array.unscopables.flat"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es.array.unscopables.flat-map"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es.object.from-entries"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.difference"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.intersection"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.is-disjoint-from"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.is-subset-of"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.is-superset-of"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.map"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.symmetric-difference"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/esnext.set.union"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details><p>Unlike when using <code>core-js</code> 2, it doesn't transform <code>@babel/polyfill</code> imports because when used directly that package loads version 2 of <code>core-js</code>.</p></li><li><p>If you are using <code>@babel/plugin-transform-runtime</code>, you need to use the <code>corejs: 3</code> option:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/transform-runtime"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">corejs</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can remove <code>@babel/runtime-corejs2</code>, but you need to install <code>@babel/runtime-corejs3</code>!</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npm remove @babel/runtime-corejs2</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">npm install --save @babel/runtime-corejs3</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p><code>@babel/polyfill</code> isn't a plugin or preset, but a runtime package: if we added an option to switch between <code>core-js@2</code> and <code>core-js@3</code>, both the package versions would need to be included in your bundle. For this reason, we decided to deprecate it: you now should load <code>core-js</code> for polyfills, and <code>regenerator-runtime/runtime</code> if you are transforming generators:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// before</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"@babel/polyfill"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// after</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/stable"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"regenerator-runtime/runtime"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This gives you the ability to load any version you want, and to update those two package independently.</p><p>In case you are interested, you should check the old source of <code>@babel/polyfill</code> for <code>core-js@2</code>:  <a href="https://github.com/babel/babel/blob/cf4bd8bb8d7e9feb7de8d97ef0eabcdc7499fce2/packages/babel-polyfill/src/index.js" target="_blank" rel="noopener noreferrer">packages/babel-polyfill/src/index.js</a>.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="partial-application-9343-and-9474">Partial Application (<a href="https://github.com/babel/babel/pull/9343" target="_blank" rel="noopener noreferrer">#9343</a> and <a href="https://github.com/babel/babel/pull/9474" target="_blank" rel="noopener noreferrer">#9474</a>)<a href="#partial-application-9343-and-9474" class="hash-link" aria-label="Direct link to partial-application-9343-and-9474" title="Direct link to partial-application-9343-and-9474">​</a></h2><p>This release includes both <code>@babel/parser</code> and transform support for the <a href="https://github.com/tc39/proposal-partial-application" target="_blank" rel="noopener noreferrer">partial application proposal</a>, which is currently at Stage 1 (last presented in July 2018). All the implementation work has been done by <a href="https://github.com/byara" target="_blank" rel="noopener noreferrer">Behrang Yarahmadi</a>, sponsored by Trivago.</p><p>This new feature allows you to bind some arguments and the <code>this</code> receiver function, similarly to the existing <code>Function#bind</code> method but with fewer limitations.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> half </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">divide</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// half = num =&gt; divide(num, 3)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">half</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// 3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">element</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">addEventListener</span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string" style="color:#718c00">"click"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// handleEvent will be called with the correct "this".</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">handleEvent</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"click"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// e =&gt; this.handleEvent("click", e)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It is also really useful in conjunction with the pipeline operator proposal (especially when using the "minimal" or "F-sharp" variants), since it makes it possible to avoid a lot of arrow functions:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> player</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">clamp</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Without this proposal:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> player</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token plain">_</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">clamp</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> _</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can test it by adding <code>@babel/plugin-proposal-partial-application</code> to your config, or by enabling the <code>stage 1</code> preset in the online <a href="https://babeljs.io/repl/build/main#?presets=stage-1" target="_blank" rel="noopener noreferrer">repl</a>!</p><blockquote><p>ℹ️ NOTE: Although the proposal's readme also describes partial application for tagged template literals, it has not been implemented because <a href="https://github.com/babel/babel/pull/9343#issuecomment-457307782" target="_blank" rel="noopener noreferrer">it will likely be removed</a>.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="static-private-methods-9446">Static private methods (<a href="https://github.com/babel/babel/pull/9446" target="_blank" rel="noopener noreferrer">#9446</a>)<a href="#static-private-methods-9446" class="hash-link" aria-label="Direct link to static-private-methods-9446" title="Direct link to static-private-methods-9446">​</a></h2><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#is</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">obj</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> obj </span><span class="token keyword" style="color:#8959a8">instanceof</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">name</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token maybe-class-name">Person</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">#is</span><span class="token punctuation">(</span><span class="token plain">name</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"It is already a person!"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks again to <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim</a> (Bloomberg) for implementing this proposal!</p><p>If you already use instance private methods you can use this new feature without any additional configuration, otherwise you need to add <code>@babel/plugin-proposal-private-methods</code> to your plugins list. When using the online <a href="https://babeljs.io/repl/build/main#?presets=stage-3" target="_blank" rel="noopener noreferrer">repl</a> it is enabled by the <code>stage-3</code> preset.</p><p>Class private features support is only one step away from being complete! 😄</p><div style="margin:auto;width:fit-content"><table><thead><tr><th>Class Private</th><th><strong>Instance</strong></th><th><strong>Static</strong></th></tr></thead><tbody><tr><td><strong>Fields</strong> <br> <code>class A { #a = 1 }</code></td><td><a href="https://babeljs.io/blog/2018/08/27/7.0.0#tc39-proposals-https-githubcom-tc39-proposals-support" target="_blank" rel="noopener noreferrer">7.0.0</a></td><td><a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">7.1.0</a></td></tr><tr><td><strong>Methods</strong> <br> <code>class A { #a() {} }</code></td><td><a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">7.2.0</a></td><td>7.4.0</td></tr><tr><td><strong>Accessors</strong> <br> <code>class A { get #a() {} }</code></td><td><a href="https://babeljs.io/blog/2019/01/21/7.3.0#private-instance-accessors-getters-and-setters-9101-https-githubcom-babel-babel-pull-9101" target="_blank" rel="noopener noreferrer">7.3.0</a></td><td>✖️</td></tr></tbody></table></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-34-rc-support-9529-and-9534">TypeScript 3.4 RC support (<a href="https://github.com/babel/babel/pull/9529" target="_blank" rel="noopener noreferrer">#9529</a> and <a href="https://github.com/babel/babel/pull/9534" target="_blank" rel="noopener noreferrer">#9534</a>)<a href="#typescript-34-rc-support-9529-and-9534" class="hash-link" aria-label="Direct link to typescript-34-rc-support-9529-and-9534" title="Direct link to typescript-34-rc-support-9529-and-9534">​</a></h2><p>TypeScript 3.4 RC was <a href="https://devblogs.microsoft.com/typescript/announcing-typescript-3-4-rc/" target="_blank" rel="noopener noreferrer">released</a> a few days ago, and thanks to <a href="https://github.com/tanhauhau" target="_blank" rel="noopener noreferrer">Tan Li Hau</a> it is already supported by Babel!</p><p>There are two new features for type annotations: <code>const</code> contexts, which mark an object as "deeply frozen", and the <code>readonly</code> modifier for arrays and tuples.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> student </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Joe Blogs"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">marks</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">25</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">23</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">30</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">as</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">const</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token literal-property property">vowels</span><span class="token operator">:</span><span class="token plain"> readonly string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"e"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"i"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"o"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"u"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Keep in mind that TypeScript 3.4 RC is not a stable release, so you should wait until TypeScript 3.4 is officially released: you can subscribe to the <a href="https://devblogs.microsoft.com/typescript/" target="_blank" rel="noopener noreferrer">TypeScript blog</a> to be notified when it will be available. 🙂</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="parenthesized-expressions-8025">Parenthesized expressions (<a href="https://github.com/babel/babel/issues/8025" target="_blank" rel="noopener noreferrer">#8025</a>)<a href="#parenthesized-expressions-8025" class="hash-link" aria-label="Direct link to parenthesized-expressions-8025" title="Direct link to parenthesized-expressions-8025">​</a></h2><p>Parentheses are not usually meaningful for JavaScript compilers or code generators: they are only "hints" used to tell the parser that some nodes have different precedence from the default one:</p><div style="margin:auto;width:fit-content"><table><thead><tr><th><strong>Code</strong></th><th align="center"><code>1 + 2 * 3</code> / <code>1 + (2 * 3)</code></th><th align="center"><code>(1 + 2) * 3</code></th></tr></thead><tbody><tr><td><strong>AST structure</strong></td><td align="center"><img loading="lazy" src="https://i.imgur.com/pcfIRPq.jpg" class="img_SS3x"></td><td align="center"><img loading="lazy" src="https://i.imgur.com/1CXk8BZ.jpg" class="img_SS3x"></td></tr></tbody></table></div><p>When the AST has been generated, the precedence of operations is determined by the tree structure and not by the original parentheses: for this reason Babel did not track them.</p><p>When printing an AST, <code>@babel/generator</code> has no knowledge about the original formatting and only generates parentheses where needed.</p><p>There are some situations where this causes problems for users. For example, when using Google Closure Compiler, parentheses are used to mark <a href="https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#type-casting" target="_blank" rel="noopener noreferrer">type cast expressions</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/** @type {!MyType} */</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">valueExpression</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We already had a <code>ParenthesizedExpression</code> node to represent parentheses, but it was never generated by <code>@babel/parser</code> and it could only be injected by custom plugins. Thanks to the work of <a href="https://github.com/arv" target="_blank" rel="noopener noreferrer">Erik Arvidsson</a>, you can now use the <code>createParenthesizedExpressions</code> <a href="https://babeljs.io/docs/en/options#parseropts" target="_blank" rel="noopener noreferrer">parser option</a> to automatically track them!</p><div style="margin:auto;width:fit-content"><table><thead><tr><th><strong>Code</strong></th><th align="center"><code>1 + (2 * 3)</code></th><th align="center"><code>(1 + 2) * 3</code></th></tr></thead><tbody><tr><td><strong>AST structure</strong></td><td align="center"><img loading="lazy" src="https://i.imgur.com/1uMC81f.jpg" class="img_SS3x"></td><td align="center"><img loading="lazy" src="https://i.imgur.com/mT7sk7P.jpg" class="img_SS3x"></td></tr></tbody></table></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babelparser-spec-compliancy"><code>@babel/parser</code> spec compliancy<a href="#babelparser-spec-compliancy" class="hash-link" aria-label="Direct link to babelparser-spec-compliancy" title="Direct link to babelparser-spec-compliancy">​</a></h2><p><a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">Daniel</a> is making <code>@babel/parser</code> more and more compliant to the ECMAScript specification: it is now passing 98.97% of the tests in the <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">Test262</a> suite. 😎</p><p>This release makes <code>@babel/parser</code> aware of JavaScript's scoping rules: it now knows which variables are declared, if there are conflicts, whether they are hoisted or not, and if a specific syntactic construct is allowed in the context where it is found.</p><p>All of these invalid examples are now correctly reported as errors, avoiding the need to manually disallow them in every tool that uses <code>@babel/parser</code> under the hood:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> a</span><span class="token punctuation">,</span><span class="token plain"> a</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Duplicate declaration 💥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">foo</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">bar</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> b </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> b</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Duplicate declaration, again 💥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports"> </span><span class="token exports maybe-class-name">Foo</span><span class="token exports"> </span><span class="token exports punctuation">}</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Error, Foo is not declared ❓</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Super in a non-derived class 🤔</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">method</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">d</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> d</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Duplicate parameter 💥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="code-placeholders-9364">Code placeholders (<a href="https://github.com/babel/babel/pull/9364" target="_blank" rel="noopener noreferrer">#9364</a>)<a href="#code-placeholders-9364" class="hash-link" aria-label="Direct link to code-placeholders-9364" title="Direct link to code-placeholders-9364">​</a></h2><p>Code is not always meant to be directly written by humans: what if some code needs to be generated, maybe using a predefined template?</p><p>Template files are often used to generate HTML code, either using a language like PHP or a template engine like Handlebars:</p><div class="language-htmlmixed codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-htmlmixed codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;!-- PHP --&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;section&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  &lt;h1&gt;&lt;?= $title ?&gt;&lt;/h1&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  &lt;main&gt;&lt;?= $body ?&gt;&lt;/main&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;/section&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;!-- Handlebars --&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;section&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  &lt;h1&gt;{{ title }}&lt;/h1&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  &lt;main&gt;{{ body }}&lt;/main&gt;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&lt;/section&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you have ever developed a Babel plugin, you might have used <code>@babel/template</code>: it is a utility which allows you to do the same thing, but generating JavaScript code:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> buildAssign </span><span class="token operator">=</span><span class="token plain"> template</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">  var NAME = VALUE;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00"></span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">buildAssign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token constant" style="color:#f5871f">NAME</span><span class="token operator">:</span><span class="token plain"> varName</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token constant" style="color:#f5871f">VALUE</span><span class="token operator">:</span><span class="token plain"> varValue</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Until now, <code>@babel/template</code> used uppercase identifier as "placeholders", which then needed to be replaced. While this approach worked well in most cases, it also had some caveats:</p><ul><li>by default, every uppercase identifier was marked as a placeholder and <code>@babel/template</code> would threw an error if it was not replaced.</li><li>it was not possible to put a placeholder where an identifier is not allowed, for example in place of a function body or an exported declaration.</li></ul><p>To solve these problems, we introduced a new syntactic element, which can replace any node: <code>%%placeholder_name%%</code>.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> buildLazyFn </span><span class="token operator">=</span><span class="token plain"> template</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">  function %%name%%(%%params%%) {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">    return function () %%body%%;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00">  }</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token template-string string" style="color:#718c00"></span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">buildLazyFn</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> functionName</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">params</span><span class="token operator">:</span><span class="token plain"> functionParams</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">body</span><span class="token operator">:</span><span class="token plain"> functionBody</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This feature has being sponsored by <a href="https://stripe.com" target="_blank" rel="noopener noreferrer">Stripe</a> (via <a href="https://runkit.com" target="_blank" rel="noopener noreferrer">Runkit</a>). We have been experimenting with new ways of sponsoring Babel, and for the first time a company directly sponsored the implementation of a feature by paying a member of the team to work on it. If your company wants to sponsor the implementation of an ECMAScript proposal, or a general improvement to Babel, please contact us!</p><hr><p><a href="https://twitter.com/search?q=https%3A%2F%2Fbabeljs.io%2Fblog%2F2019%2F03%2F19%2F7.4.0" target="_blank" rel="noopener noreferrer">Discuss on Twitter</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.3.0 Released: Named capturing groups, private instance accessors and smart pipelines]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2019/01/21/7.3.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2019/01/21/7.3.0</guid>
            <pubDate>Mon, 21 Jan 2019 16:00:00 GMT</pubDate>
            <description><![CDATA[After over 80 commits, the latest Babel minor release is here!]]></description>
            <content:encoded><![CDATA[<p>After over 80 commits, the latest Babel minor release is here!</p><p>This release includes support for named capturing groups in regular expressions, private instance accessors, the smart pipeline operator and a bunch of improvements to TypeScript parsing. You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.3.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>Thanks to <a href="https://github.com/jamesgeorge007" target="_blank" rel="noopener noreferrer">@jamesgeorge007</a> and <a href="https://github.com/armano2" target="_blank" rel="noopener noreferrer">@armano2</a> for their first PR!</p><p><a href="https://github.com/bloomberg" target="_blank" rel="noopener noreferrer"><strong>Bloomberg</strong></a> is continuing to sponsor the implementation of new class features in Babel: after giving us <a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">static private fields</a> and <a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">private instance methods</a>, they've just implemented private instance getters and setters.</p><p>Another shout out goes to the <a href="https://www.ampproject.org" target="_blank" rel="noopener noreferrer">AMP Project</a>, which increased their <a href="https://twitter.com/left_pad/status/1084955653389590533" target="_blank" rel="noopener noreferrer">support of Babel</a> to $24k/year becoming a Base Support Sponsor.</p><p>If you or your company want to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly! As a volunteer-driven project, we rely on the community's support to both fund our efforts in supporting the wide range of JavaScript users and taking ownership of the code.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="private-instance-accessors-getters-and-setters-9101">Private instance accessors (getters and setters) (<a href="https://github.com/babel/babel/pull/9101" target="_blank" rel="noopener noreferrer">#9101</a>)<a href="#private-instance-accessors-getters-and-setters-9101" class="hash-link" aria-label="Direct link to private-instance-accessors-getters-and-setters-9101" title="Direct link to private-instance-accessors-getters-and-setters-9101">​</a></h2><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #firstname </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Babel"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #lastname </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"JS"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">get</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">#name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#firstname</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">" "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#lastname</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">alert</span><span class="token punctuation">(</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">Hi, </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation keyword" style="color:#8959a8">this</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">#name</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">!</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks to <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim</a> (Bloomberg) for implementing this proposal!</p><p>You can test this new feature by adding <code>@babel/plugin-proposal-private-methods</code> to your config, if you haven't already added it from Babel 7.2.0, or by enabling the <code>stage-3</code> preset in the online <a href="https://babeljs.io/repl/build/main#?code_lz=MYGwhgzhAEAKCmAnCB7AdtA3gKGtAxAGYCWyALmmALbzQC80ARAEJgBG8IjA3LgeBArVaDRgCkAyjz58A5vDIFKNABQBKLHzyIFAV0QYyAC2IQAdEVKDltANRMH946YsChNXngC-MvBDAAngASxOqaeHhgIEhkKgAGIQA00AAkmM7m-DZeAIRxap7QPl5AA&amp;presets=stage-3" target="_blank" rel="noopener noreferrer">repl</a>.</p><p>Class private features support is almost complete!</p><div style="margin:auto;width:fit-content"><table><thead><tr><th>Class Private</th><th><strong>Instance</strong></th><th><strong>Static</strong></th></tr></thead><tbody><tr><td><strong>Fields</strong> <br> <code>class A { #a = 1}</code></td><td><a href="https://babeljs.io/blog/2018/08/27/7.0.0#tc39-proposals-https-githubcom-tc39-proposals-support" target="_blank" rel="noopener noreferrer">7.0.0</a></td><td><a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">7.1.0</a></td></tr><tr><td><strong>Methods</strong> <br> <code>class A { #a() {} }</code></td><td><a href="https://babeljs.io/blog/2018/12/03/7.2.0#private-instance-methods-8654-https-githubcom-babel-babel-pull-8654" target="_blank" rel="noopener noreferrer">7.2.0</a></td><td>✖</td></tr><tr><td><strong>Accessors</strong> <br> <code>class A { get #a() {} }</code></td><td>7.3.0</td><td>✖</td></tr></tbody></table></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="smart-pipeline-operator-9179">Smart pipeline operator (<a href="https://github.com/babel/babel/pull/9179" target="_blank" rel="noopener noreferrer">#9179</a>)<a href="#smart-pipeline-operator-9179" class="hash-link" aria-label="Direct link to smart-pipeline-operator-9179" title="Direct link to smart-pipeline-operator-9179">​</a></h2><blockquote><p>Babel implements multiple variants of this <a href="https://github.com/tc39/proposal-pipeline-operator/wiki#proposal-1-f-sharp-only" target="_blank" rel="noopener noreferrer">proposal</a> to help TC39 test and gather feedback from the community. As with all proposals, expect changes in the future.</p></blockquote><p>In <a href="https://babeljs.io/blog/2018/12/03/7.2.0#smart-pipeline-operator-parsing-8289-https-githubcom-babel-babel-pull-8289" target="_blank" rel="noopener noreferrer">Babel 7.2.0</a> we landed parsing support for the <a href="https://github.com/js-choi/proposal-smart-pipelines/" target="_blank" rel="noopener noreferrer">Smart Pipeline Operator</a> proposal. Thanks to the work of <a href="https://github.com/thiagoarrais" target="_blank" rel="noopener noreferrer">Thiago Arrais</a>, you can now transpile it down to standard ECMAScript and try it out!</p><p>We currently only support the main proposal, and none of the <a href="https://github.com/js-choi/proposal-smart-pipelines#additional-features" target="_blank" rel="noopener noreferrer">additional features</a>. Also, we don't support <code>yield</code> and <code>await</code> in pipelines yet.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">name</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> # </span><span class="token operator">||</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">doubleSay</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">', '</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> capitalize</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> # </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'!'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">User</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Message</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> stream</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">write</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">sync</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token property-access">log</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can enable it in your project using the <code>@babel/plugin-proposal-pipeline-operator</code> plugin with the <code>proposal: "smart"</code> option:</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-pipeline-operator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token property">"proposal"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"smart"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Previously, the "minimal" proposal was added in back in <!-- -->[v7.0.0-beta.3]<!-- --> via <a href="https://github.com/babel/babel/pull/6335" target="_blank" rel="noopener noreferrer">#6335</a></p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="named-capturing-groups-7105">Named capturing groups (<a href="https://github.com/babel/babel/pull/7105" target="_blank" rel="noopener noreferrer">#7105</a>)<a href="#named-capturing-groups-7105" class="hash-link" aria-label="Direct link to named-capturing-groups-7105" title="Direct link to named-capturing-groups-7105">​</a></h2><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> stringRe </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">(?&lt;quote&gt;"|')(?&lt;contents&gt;.*?)\k&lt;quote&gt;</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> contents </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">"foo bar"</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">match</span><span class="token punctuation">(</span><span class="token plain">stringRe</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Support for the biggest ECMAScript 2018 feature missing in Babel is now here! Previously, partial support for named groups was available via the awesome <a href="https://github.com/DmitrySoshnikov/babel-plugin-transform-modern-regexp" target="_blank" rel="noopener noreferrer">babel-plugin-transform-modern-regexp</a> community plugin by <a href="https://twitter.com/DmitrySoshnikov" target="_blank" rel="noopener noreferrer">Dmitry Soshnikov</a>. We also coordinated efforts with <code>core-js</code> to provide full support with the new <code>@babel/plugin-transform-named-capturing-groups-regex</code> package.</p><p><code>@babel/preset-env</code> has also been updated to include this, so many of you will be able to use it without making any changes!</p><p>Note that the runtime features (i.e. the <code>groups</code> property) only work in browsers with proper support for ES6 regular expressions. If you need to support older environments, you can include a polyfill for <code>RegExp</code>'s methods.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-updates-9302-9309">TypeScript updates (<a href="https://github.com/babel/babel/pull/9302" target="_blank" rel="noopener noreferrer">#9302</a>, <a href="https://github.com/babel/babel/pull/9309" target="_blank" rel="noopener noreferrer">#9309</a>)<a href="#typescript-updates-9302-9309" class="hash-link" aria-label="Direct link to typescript-updates-9302-9309" title="Direct link to typescript-updates-9302-9309">​</a></h2><p>Thanks to the work by <a href="https://github.com/armano2" target="_blank" rel="noopener noreferrer">Armano</a> on <code>@babel/parser</code> and <a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">Henry</a>/<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">Brian</a> on <code>@babel/generator</code> (have you seen the <a href="https://www.youtube.com/watch?v=L-PxPBDUf6w&amp;t=4s" target="_blank" rel="noopener noreferrer">live stream</a>?), we now support <code>let x: typeof import('./x');</code>, added in <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-9.html" target="_blank" rel="noopener noreferrer">TypeScript 2.9</a>. We now also support the <code>bigint</code> type keyword, added in <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-2.html" target="_blank" rel="noopener noreferrer">TypeScript 3.2</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711"><code>babel-eslint</code> v11.0.0-beta.0: Automatic Syntax Detection by Reading Config (<a href="https://github.com/babel/babel-eslint/pull/711" target="_blank" rel="noopener noreferrer">babel/babel-eslint#711</a>)<a href="#babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711" class="hash-link" aria-label="Direct link to babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711" title="Direct link to babel-eslint-v1100-beta0-automatic-syntax-detection-by-reading-config-babelbabel-eslint711">​</a></h2><p>Thanks to <a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">Kai</a> (also on the ESLint TSC) for finishing this work!</p><p>Up until now, <code>babel-eslint</code> has manually enabled all syntax plugins (with the list falling out of date frequently). It also meant that it could parse syntax that a configured instance of Babel itself didn't allow at compile time. We now require <code>@babel/core</code> as a peerDependency and assume that a Babel config exists when using <code>babel-eslint</code> and use that same config to modify itself (making this a breaking change). This change will hopefully make maintaining the module itself more manageable as well as re-using Babel's config which is a reasonable assumption for a user making use of <code>babel-eslint</code>.</p><p>You can help us by checking if this beta release works for your project 🙂</p><hr><p><a href="https://twitter.com/search?q=https%3A%2F%2Fbabeljs.io%2Fblog%2F2019%2F01%2F21%2F7.3.0" target="_blank" rel="noopener noreferrer">Discuss on Twitter</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.2.0 Released: Private Instance Methods]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/12/03/7.2.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/12/03/7.2.0</guid>
            <pubDate>Mon, 03 Dec 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[We just released a new minor version of Babel!]]></description>
            <content:encoded><![CDATA[<p>We just released a new minor version of Babel!</p><p>This release includes support for private instance methods and a bunch of bug fixes regarding Flow and TypeScript types. You can read the whole changelog <a href="https://github.com/babel/babel/releases/tag/v7.2.0" target="_blank" rel="noopener noreferrer">on GitHub</a>.</p><p>A lot of new contributors fixed bugs or implemented new features in this release: thanks to <a href="https://github.com/Gcaufy" target="_blank" rel="noopener noreferrer">Gcaufy</a>, <a href="https://github.com/morozRed" target="_blank" rel="noopener noreferrer">Grigory Moroz</a>, <a href="https://github.com/phapp88" target="_blank" rel="noopener noreferrer">Paul Happ</a>, <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim McClure</a> and <a href="https://github.com/katrotz" target="_blank" rel="noopener noreferrer">Veaceslav Cotruta</a>!</p><p>A big shout out to Bloomberg for sponsoring the implementation of private class elements! This support for private <em>instance</em> methods  is a follow-up to private <em>static</em> fields released in Babel <a href="https://babeljs.io/blog/2018/09/17/7.1.0#private-static-fields-stage-3" target="_blank" rel="noopener noreferrer">7.1.0</a>.</p><p>If you or your company wants to support Babel and the evolution of JavaScript, but aren't sure how, you can donate to us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">OpenCollective</a> and, better yet, work with us on the implementation of <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">new ECMAScript proposals</a> directly!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="private-instance-methods-8654">Private Instance Methods (<a href="https://github.com/babel/babel/pull/8654" target="_blank" rel="noopener noreferrer">#8654</a>)<a href="#private-instance-methods-8654" class="hash-link" aria-label="Direct link to private-instance-methods-8654" title="Direct link to private-instance-methods-8654">​</a></h2><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  #age </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">19</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">#increaseAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">#age</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">birthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">#increaseAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">alert</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Happy Birthday!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks to <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim</a> for implementing this proposal, and to <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a> and <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a> for the reviews!</p><p>You can test private methods by adding the <code>@babel/plugin-proposal-private-methods</code> plugin to your Babel configuration, or enabling the <code>stage-3</code> preset in the <a href="https://babeljs.io/repl/build/main#?presets=stage-3" target="_blank" rel="noopener noreferrer">repl</a>.</p><p>Private accessors <a href="https://github.com/babel/babel/pull/9101" target="_blank" rel="noopener noreferrer">are also coming</a>, and we have done some big internal refactoring that allows us to add support for private elements to decorators soon 🎉.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="smart-pipeline-operator-parsing-8289">"Smart" Pipeline Operator Parsing (<a href="https://github.com/babel/babel/pull/8289" target="_blank" rel="noopener noreferrer">#8289</a>)<a href="#smart-pipeline-operator-parsing-8289" class="hash-link" aria-label="Direct link to smart-pipeline-operator-parsing-8289" title="Direct link to smart-pipeline-operator-parsing-8289">​</a></h2><p>Thanks to the work of <a href="https://github.com/mAAdhaTTah" target="_blank" rel="noopener noreferrer">James DiGioia</a> and <a href="https://github.com/js-choi" target="_blank" rel="noopener noreferrer">J. S. Choi</a>, <code>@babel/parser</code> now also can parse the <a href="https://github.com/js-choi/proposal-smart-pipelines/" target="_blank" rel="noopener noreferrer">Smart Pipeline Operator</a>, in addition to the <a href="https://github.com/tc39/proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">minimal version</a>.</p><p>We currently only support the "core" of the smart pipeline proposal, and not any additional features. We also currently support only <code>#</code> as a preliminary placeholder. The <a href="https://github.com/tc39/proposal-pipeline-operator/issues/91" target="_blank" rel="noopener noreferrer">actual placeholder has not yet been decided</a>, and other possibilities such as <code>?</code>, <code>@</code>, and <code>%</code> may be experimentally supported by <code>@babel/parser</code> in the future.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// "Smart"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> # </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">toStringBase</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> #</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// "111"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// "Simple"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> result </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">toStringBase</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel implements multiple variants of this proposal to help TC39 test and gather feedback from the community. As with all proposals, expect changes in the future.</p><p>If you are directly using <code>@babel/parser</code> and you want to test this proposal, you can pass the <code>proposal: "smart"</code> option to the pipeline plugin:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> ast </span><span class="token operator">=</span><span class="token plain"> babel</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">code</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"pipelineOperator"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">proposal</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"smart"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We don't support transpiling this syntax yet, but it will come soon.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-names-8769">Plugin Names (<a href="https://github.com/babel/babel/pull/8769" target="_blank" rel="noopener noreferrer">#8769</a>)<a href="#plugin-names-8769" class="hash-link" aria-label="Direct link to plugin-names-8769" title="Direct link to plugin-names-8769">​</a></h2><p>Every official plugin now provides Babel its name. Although this doesn't affect normal Babel use, it provides a consistent identifier for each plugin. This is particularly useful for things like <a href="https://github.com/babel/website/pull/1736" target="_blank" rel="noopener noreferrer">Time Travel</a>, which allows you to see exactly what each plugin is doing to your code. You can see this in effect via our <a href="https://babeljs.io/repl/build/main#?timeTravel=true" target="_blank" rel="noopener noreferrer">repl</a>:</p><p><img loading="lazy" src="https://i.imgur.com/AzKc37i.gif" class="img_SS3x"></p><hr><p><a href="https://twitter.com/search?q=https%3A%2F%2Fbabeljs.io%2Fblog%2F2018%2F12%2F03%2F7.2.0" target="_blank" rel="noopener noreferrer">Discuss on Twitter</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[7.1.0 Released: Decorators, Private Static Fields]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/09/17/7.1.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/09/17/7.1.0</guid>
            <pubDate>Mon, 17 Sep 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[There's already another release! 7.1.0 includes support for Stage 2 Decorators and adds support for Stage 3 Private Static Fields as well as some various bug fixes.]]></description>
            <content:encoded><![CDATA[<p>There's already another release! 7.1.0 includes support for Stage 2 Decorators and adds support for Stage 3 Private Static Fields as well as some various bug fixes.</p><blockquote><p>If you didn't see earlier, we released <a href="https://babeljs.io/blog/2018/08/27/7.0.0" target="_blank" rel="noopener noreferrer">7.0</a>!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="decorators-stage-2">Decorators (Stage 2)<a href="#decorators-stage-2" class="hash-link" aria-label="Direct link to Decorators (Stage 2)" title="Direct link to Decorators (Stage 2)">​</a></h2><blockquote><p><a href="https://github.com/babel/babel/pull/7976" target="_blank" rel="noopener noreferrer">https://github.com/babel/babel/pull/7976</a>, by <a href="https://github.com/nicolo-ribaudo" target="_blank" rel="noopener noreferrer">Nicolò</a></p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @decorator</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It's been many years in the making, but thanks to the amazing work by <a href="https://github.com/nicolo-ribaudo" target="_blank" rel="noopener noreferrer">Nicolò</a>, this release includes initial support for Stage 2 decorators (via <code>@babel/plugin-proposal-decorators</code>). Shoutout to <a href="https://github.com/peey" target="_blank" rel="noopener noreferrer">Peeyush</a> for implementing parser support (and initial transform work) during <a href="https://babeljs.io/blog/2017/08/11/gsoc-peey-1" target="_blank" rel="noopener noreferrer">Google Summer of Code</a> last year and thanks to many members of TC39 including <a href="https://github.com/littledan" target="_blank" rel="noopener noreferrer">Daniel</a>, <a href="https://github.com/bakkot" target="_blank" rel="noopener noreferrer">Kevin</a>, and <a href="https://github.com/diervo" target="_blank" rel="noopener noreferrer">Diego</a> for their reviews. Keep in mind that since the proposal is Stage 2, it's still subject to major changes. Since there is a lot of the ecosystem on the previous versions of the proposal, we can attempt a codemod for some simple automated transformations to upgrade code with help from the community.</p><p>Please check out our separate <a href="https://babeljs.io/blog/2018/09/17/decorators" target="_blank" rel="noopener noreferrer">blog post</a> for more information regarding some history, changes from the previous proposal, and what's next!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="private-static-fields-stage-3">Private Static Fields (Stage 3)<a href="#private-static-fields-stage-3" class="hash-link" aria-label="Direct link to Private Static Fields (Stage 3)" title="Direct link to Private Static Fields (Stage 3)">​</a></h2><blockquote><p><a href="https://github.com/babel/babel/pull/8205" target="_blank" rel="noopener noreferrer">https://github.com/babel/babel/pull/8205</a>, by Bloomberg</p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> #foo </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thanks to <a href="https://github.com/robpalme" target="_blank" rel="noopener noreferrer">Rob</a>, <a href="https://github.com/rricard" target="_blank" rel="noopener noreferrer">Robin</a>, <a href="https://github.com/rpamely" target="_blank" rel="noopener noreferrer">Robert</a>, <a href="https://github.com/tim-mc" target="_blank" rel="noopener noreferrer">Tim</a>, <a href="https://github.com/mkubilayk" target="_blank" rel="noopener noreferrer">Kubilay</a> and the team at <a href="https://github.com/bloomberg" target="_blank" rel="noopener noreferrer">@Bloomberg</a> for implementing this new feature and <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a> for the review! I believe this is the first time we've had a company sponsor implementation work for a proposal and looking forward to more from them! If you want to see proposals improve, move forward, or have implementation experience in the wild then consider sponsoring work on it for Babel in addition to just going to TC39.</p><p>Private Class Methods support is <a href="https://github.com/babel/proposals/issues/22" target="_blank" rel="noopener noreferrer">WIP</a>!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="better-monorepo-support">Better Monorepo Support<a href="#better-monorepo-support" class="hash-link" aria-label="Direct link to Better Monorepo Support" title="Direct link to Better Monorepo Support">​</a></h2><blockquote><p><a href="https://github.com/babel/babel/pull/8660" target="_blank" rel="noopener noreferrer">https://github.com/babel/babel/pull/8660</a>, by <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan</a></p></blockquote><p>We're introducing a new option: <code>rootMode</code> for <code>babel.config.js</code> files to better support the various ways monorepos are used. The default just checks <code>root</code> but you can change it to look up directories.</p><p>Check the <a href="https://babeljs.io/docs/en/next/options#rootmode" target="_blank" rel="noopener noreferrer"><code>rootMode</code></a> docs for more information.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[TC39 Standards Track Decorators in Babel]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/09/17/decorators</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/09/17/decorators</guid>
            <pubDate>Mon, 17 Sep 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[Babel 7.1.0 finally supports the new decorators proposal: you can try it out by using the @babel/plugin-proposal-decorators plugin 🎉.]]></description>
            <content:encoded><![CDATA[<p>Babel 7.1.0 finally supports the new decorators proposal: you can try it out by using the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-decorators" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-decorators</code></a> plugin 🎉.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="a-bit-of-history">A Bit of History<a href="#a-bit-of-history" class="hash-link" aria-label="Direct link to A Bit of History" title="Direct link to A Bit of History">​</a></h2><p>Decorators were <a href="https://github.com/wycats/javascript-decorators/blob/696232bbd997618d603d6577848d635872f25c43/README.md" target="_blank" rel="noopener noreferrer">first proposed</a> by <a href="https://github.com/wycats" target="_blank" rel="noopener noreferrer">Yehuda Katz</a> more than three years ago. TypeScript released support for decorators in <a href="https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-15" target="_blank" rel="noopener noreferrer">version 1.5</a> (2015) alongside with many ES6 features.
Some major frameworks, like Angular and MobX, started using them to enhance their developer experience: this made decorators popular and gave the community a false sense of stability.</p><p>Babel first implemented decorators in <a href="https://github.com/babel/babel/blob/main/.github/CHANGELOG-v5.md#500" target="_blank" rel="noopener noreferrer">version 5</a>, but removed them in Babel 6 because the proposal was still in flux. <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan Smyth</a> created an unofficial plugin (<a href="https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-decorators-legacy</code></a>) which replicated the Babel 5 behavior; it has since then been moved to the official Babel repository during the first Babel 7 alpha release. This plugin still used the old decorators semantics, because it wasn't clear yet what the new proposal would have been.</p><p>Since then, <a href="https://github.com/littledan" target="_blank" rel="noopener noreferrer">Daniel Ehrenberg</a> and <a href="https://github.com/bterlson" target="_blank" rel="noopener noreferrer">Brian Terlson</a> become co-authors of the proposal along with <a href="https://github.com/wycats" target="_blank" rel="noopener noreferrer">Yehuda Katz</a>, it has been almost completely rewritten. Not everything has been decided yet, and there isn't a compliant implementation as of today.</p><p>Babel 7.0.0 introduced a new flag to the <code>@babel/plugin-proposal-decorators</code> plugin: the <code>legacy</code> option, whose only valid value was <code>true</code>. This breaking change was needed to provide a smooth transition path from the Stage 1 version of the proposal to the current one.</p><p>In Babel 7.1.0 we are introducing support for this new proposal, and it is enabled by default when using the <code>@babel/plugin-proposal-decorators</code> plugin. If we didn't introduce the <code>legacy: true</code> option in Babel 7.0.0, it wouldn't be possible to use the correct semantics by default (which would be equivalent to <code>legacy: false</code>).</p><p>The new proposal also supports decorators on private fields and methods. We haven't implemented this feature yet in Babel (for each class, you can use either decorators or private elements), but it will come very soon.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="what-changed-in-the-new-proposal">What Changed In The New Proposal?<a href="#what-changed-in-the-new-proposal" class="hash-link" aria-label="Direct link to What Changed In The New Proposal?" title="Direct link to What Changed In The New Proposal?">​</a></h2><p>Even though the new proposal looks very similar to the old one, there are several important differences that make them incompatible.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="syntax">Syntax<a href="#syntax" class="hash-link" aria-label="Direct link to Syntax" title="Direct link to Syntax">​</a></h3><p>The old proposal allowed any valid left-hand side expression (literals, function and class expressions, <code>new</code> expressions and function calls, simple and computed property accesses) to be used as the body of a decorator. For example, this was valid code:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">getDecorators</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">methods</span><span class="token punctuation">[</span><span class="token plain">name</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @decorator</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain">bar</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That syntax had a problem: the <code>[...]</code> notation was used as <em>both</em> property access inside the decorator body and to define computed names. To prevent such ambiguity, the new proposal only allows dot property access (<code>foo.bar</code>), optionally with arguments at the end (<code>foo.bar()</code>). If you need more complex expressions, you can wrap them in parentheses:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @decorator</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">dec</span><span class="token punctuation">(</span><span class="token plain">arg1</span><span class="token punctuation">,</span><span class="token plain"> arg2</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @namespace</span><span class="token punctuation">.</span><span class="token property-access">decorator</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token punctuation">(</span><span class="token plain">complex </span><span class="token operator">?</span><span class="token plain"> dec1 </span><span class="token operator">:</span><span class="token plain"> dec2</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="object-decorators">Object Decorators<a href="#object-decorators" class="hash-link" aria-label="Direct link to Object Decorators" title="Direct link to Object Decorators">​</a></h3><p>The old version of the proposal allowed, in addition to class and class elements decorators, object members decorators:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> myObj </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @dec1 foo</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @dec2 </span><span class="token function" style="color:#4271ae">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Due to some incompatibilities with the current object literal semantics, they have been removed from the proposal. If you are using them in your code, stay tuned because they might be re-introduced in a follow-on proposal (<a href="https://github.com/tc39/proposal-decorators/issues/119" target="_blank" rel="noopener noreferrer">tc39/proposal-decorators#119</a>).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="decorator-functions-arguments">Decorator Functions Arguments<a href="#decorator-functions-arguments" class="hash-link" aria-label="Direct link to Decorator Functions Arguments" title="Direct link to Decorator Functions Arguments">​</a></h3><p>The third important change introduced by the new proposal is about the arguments passed to the decorator functions.</p><p>In the first version of the proposal, class elements decorators received a target class (or object), a key, and a property descriptor — similar in shape to what you would pass to <code>Object.defineProperty</code>. Class decorators took as their only argument a target constructor.</p><p>The new decorators proposal is much more powerful: element decorators take an object which, other than changing the property descriptor, allows changing the key, the placement (<code>static</code>, <code>prototype</code> or <code>own</code>), and the kind (<code>field</code> or <code>method</code>) of the element. They can also create additional properties and define a function (a <em>finisher</em>) which is run on the decorated class.</p><p>Class decorators take an object which contains the descriptors of every single class element, making it possible to modify them before creating the class.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="upgrading">Upgrading<a href="#upgrading" class="hash-link" aria-label="Direct link to Upgrading" title="Direct link to Upgrading">​</a></h3><p>Given these incompatibilities, it is not possible to use existing decorators with the new proposal: this would make the migration very slow, since existing libraries (MobX, Angular, etc.) can't be upgraded without introducing breaking changes.
To workaround this issue, we have published an utility package which wraps the decorators in your code. After running it,
you can safely change your Babel config to use the new proposal 🎉.</p><p>You can upgrade your files using a one-liner:</p><div class="language-shell= codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell= codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npx wrap-legacy-decorators src/file-with-decorators.js --decorators-before-export --write</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If your code only runs in Node, or if you are bundling your code with Webpack or Rollup, you can avoid injecting the wrapper function in each file by using an external dependency:</p><div class="language-shell= codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell= codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npm install --save decorators-compat</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">npx wrap-legacy-decorators src/file-with-decorators.js --decorators-before-export --external-helpers --write</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For more information, you can read <a href="https://github.com/nicolo-ribaudo/legacy-decorators-migration-utility" target="_blank" rel="noopener noreferrer">the package documentation</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="open-questions">Open Questions<a href="#open-questions" class="hash-link" aria-label="Direct link to Open Questions" title="Direct link to Open Questions">​</a></h2><p>Not everything has been decided yet: decorators are a very big feature and defining them in the best possible way is complex.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="where-should-decorators-on-exported-classes-go">Where Should Decorators on Exported Classes Go?<a href="#where-should-decorators-on-exported-classes-go" class="hash-link" aria-label="Direct link to Where Should Decorators on Exported Classes Go?" title="Direct link to Where Should Decorators on Exported Classes Go?">​</a></h3><blockquote><p><a href="https://github.com/tc39/proposal-decorators/issues/69" target="_blank" rel="noopener noreferrer">tc39/proposal-decorators#69</a></p></blockquote><p>The decorator proposal has gone back and forth on this question: should decorators come before or after the export keyword?</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> @decorator </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@decorator</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">MyClass</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The underlying question is whether or not the <code>export</code> keyword is part of the class declaration or it is a "wrapper". In the first case it should come <em>after</em> decorators, since decorators come at the beginning of the declaration; in the second one it should come <em>before</em>, because decorators are part of the class declaration.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="how-to-make-decorators-securely-interact-with-private-elements">How to Make Decorators Securely Interact with Private Elements?<a href="#how-to-make-decorators-securely-interact-with-private-elements" class="hash-link" aria-label="Direct link to How to Make Decorators Securely Interact with Private Elements?" title="Direct link to How to Make Decorators Securely Interact with Private Elements?">​</a></h3><blockquote><p><a href="https://github.com/tc39/proposal-decorators/issues/129" target="_blank" rel="noopener noreferrer">tc39/proposal-decorators#129</a>, <a href="https://github.com/tc39/proposal-decorators/issues/133" target="_blank" rel="noopener noreferrer">tc39/proposal-decorators#133</a></p></blockquote><p>Decorators give rise to an important security concern: if it is possible to decorate private elements, then private names (which can be considered as the "keys" of private elements) could be leaked. There are different safety levels to be thought of:
1) Decorators should not accidentally leak private names. Malicious code should not be able to "steal" private names from other decorators, in any way.
2) Only decorators directly applied to private elements might be considered trusted: should class decorators not be able to read and write private elements?
3) <em>Hard privacy</em> (one of the goals of the class fields proposal) means that private elements should only be accessible from inside the class: should any decorator have access to private names? Should it be only possible to decorate public elements?</p><p>These questions need further discussion before being resolved, and that's where Babel comes in.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-role-of-babel">The Role of Babel<a href="#the-role-of-babel" class="hash-link" aria-label="Direct link to The Role of Babel" title="Direct link to The Role of Babel">​</a></h2><p>Following the trend in the <a href="http://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal" target="_blank" rel="noopener noreferrer">What's Happening With the Pipeline (|&gt;) Proposal?</a> article, with the Babel 7 release we are starting to use our position in the JS ecosystem to help proposal authors even more, by giving developers the ability to test and give feedback about different variations of the proposals.</p><p>For this reason, alongside with the update of <code>@babel/plugin-proposal-decorators</code> we introduced a new option: <code>decoratorsBeforeExport</code>, which allows users to try both <code>export @decorator class C {}</code> and <code>@decorator export default class</code>.</p><p>We will also introduce an option to customize the privacy constraint of decorated private elements. These options will be required until TC39 folks make a decision about them, so that we can let the default behavior be whatever the final proposal will specify.</p><p>If you are directly using our parser (<a href="https://babeljs.io/docs/en/next/babel-parser.html" target="_blank" rel="noopener noreferrer"><code>@babel/parser</code></a>, formerly <code>babylon</code>) you can already use the <code>decoratorsBeforeExport</code> option in version 7.0.0:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> ast </span><span class="token operator">=</span><span class="token plain"> babylon</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token plain">code</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"decorators"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">decoratorsBeforeExport</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="usage">Usage<a href="#usage" class="hash-link" aria-label="Direct link to Usage" title="Direct link to Usage">​</a></h3><p>For usage in Babel itself:</p><div class="tabs-container tabList_J5MA"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_l0OV tabs__item--active">npm</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_l0OV">Yarn</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_wHwb"><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> @babel/plugin-proposal-decorators --save-dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div><div role="tabpanel" class="tabItem_wHwb" hidden=""><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">yarn</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token plain"> @babel/plugin-proposal-decorators --dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></div><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/plugin-proposal-decorators"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token property">"decoratorsBeforeExport"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Check the <a href="https://babeljs.io/docs/en/babel-plugin-proposal-decorators" target="_blank" rel="noopener noreferrer"><code>@babel/plugin-proposal-decorators</code></a> docs for more options.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="your-role">Your Role<a href="#your-role" class="hash-link" aria-label="Direct link to Your Role" title="Direct link to Your Role">​</a></h2><p>As a JavaScript developer, you can help outline the future of the language. You can test the various semantics which are being considered for decorators, and give feedback to the proposal authors. We need to know how you are using them in real-life projects! You can also find out why some design decisions were taken by reading the discussions in the issues and the meeting notes in the <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">proposal's repository</a>.</p><p>If you want to try out decorators right now, you can play with the different presets options in our <a href="https://babeljs.io/repl/build/main" target="_blank" rel="noopener noreferrer">repl</a>!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel 7 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/08/27/7.0.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/08/27/7.0.0</guid>
            <pubDate>Mon, 27 Aug 2018 18:00:00 GMT</pubDate>
            <description><![CDATA[After almost 2 years, 4k commits, over 50 pre-releases, and a lot of help we are excited to announce the release of Babel 7. It's been almost 3 years since the release of Babel 6! There's a lot of moving parts so please bear with us in the first weeks of release. Babel 7 is a huge release: we've made it faster, created an upgrade tool, JS configs, config "overrides", more options for size/minification, JSX Fragments, TypeScript, new proposals, and more!]]></description>
            <content:encoded><![CDATA[<p>After almost 2 years, 4k commits, over 50 pre-releases, and a lot of help we are excited to announce the release of Babel 7. It's been almost <a href="https://babeljs.io/blog/2015/10/29/6.0.0" target="_blank" rel="noopener noreferrer">3 years</a> since the release of Babel 6! There's a lot of moving parts so please bear with us in the first weeks of release. Babel 7 is a huge release: we've made it faster, created an upgrade tool, JS configs, config "overrides", more options for size/minification, JSX Fragments, TypeScript, new proposals, and more!</p><blockquote><p>If you appreciate the work we're doing on Babel, you can sponsor Babel on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>, support me on <a href="https://www.patreon.com/henryzhu" target="_blank" rel="noopener noreferrer">Patreon</a>, or get you or your company involved with Babel as part of work. We'd appreciate the collective ownership of this vital project in the JavaScript community!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="its-happening-">It's Happening! 🎉<a href="#its-happening-" class="hash-link" aria-label="Direct link to It's Happening! 🎉" title="Direct link to It's Happening! 🎉">​</a></h2><p>Software is never going to be perfect but we're ready to ship something that's already been used in production for some time now! <a href="https://www.npmjs.com/package/@babel/core" target="_blank" rel="noopener noreferrer"><code>@babel/core</code></a> is already at 5.1 mil downloads/month because of its usage in tools like <a href="https://zeit.co/blog/next6" target="_blank" rel="noopener noreferrer">Next.js 6</a>, <a href="https://medium.com/the-vue-point/vue-cli-3-0-is-here-c42bebe28fbb" target="_blank" rel="noopener noreferrer">vue-cli 3.0</a>, <a href="https://facebook.github.io/react-native/blog/2018/07/04/releasing-react-native-056" target="_blank" rel="noopener noreferrer">React Native 0.56</a>, and even <a href="https://github.com/Automattic/wp-calypso" target="_blank" rel="noopener noreferrer">WordPress.com's frontend</a> 🙂!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babels-role">Babel's Role<a href="#babels-role" class="hash-link" aria-label="Direct link to Babel's Role" title="Direct link to Babel's Role">​</a></h2><p>I'd like to start this post by re-introducing Babel's <a href="https://www.youtube.com/watch?v=fntd0sPMOtQ" target="_blank" rel="noopener noreferrer">role</a> in the JavaScript ecosystem over the last few years.</p><p>The initial issue was that unlike server languages, there was no way to guarantee that every user has the same support for JavaScript because users could be using different browsers with varying levels of support (especially older versions of Internet Explorer). If developers wanted to use new syntax (e.g. <code>class A {}</code>), users on old browsers would just get a blank screen due to the <code>SyntaxError</code>.</p><p>Babel provided a way for developers to use the latest JavaScript syntax while allowing them to not worry about how to make it backwards compatible for their users by translating it (<code>class A {}</code> to <code>var A = function A() {}</code>).</p><p>Because of its ability to transform JavaScript code, it also can be used to implement new features: thus it has become a bridge to help <a href="https://github.com/tc39" target="_blank" rel="noopener noreferrer">TC39</a> (the committee that specifies the JavaScript language) get feedback on proposed JavaScript ideas and for the community to have a say in the future of the language.</p><p>Babel is fundamental to JavaScript development today. There are currently over <a href="https://github.com/babel/babel/network/dependents" target="_blank" rel="noopener noreferrer">1.3 million dependent repos on GitHub</a>, <a href="https://www.npmjs.com/package/babel-core" target="_blank" rel="noopener noreferrer">17 million downloads on npm per month</a>, and <a href="http://babeljs.io/users" target="_blank" rel="noopener noreferrer">hundreds of users</a> including many major frameworks (React, Vue, Ember, Polymer), and companies (Facebook, Netflix, Airbnb). It has become such a foundation for JavaScript development that many people don't even know that it is being used. Even if you aren't using it yourself, it's highly likely your dependencies are using Babel.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="maintainers-are-people">Maintainers are People<a href="#maintainers-are-people" class="hash-link" aria-label="Direct link to Maintainers are People" title="Direct link to Maintainers are People">​</a></h2><p>Babel has a huge influence on not just the future of the language itself but its community and ecosystem as well. But even with all of this responsibility, Babel is just a community driven project by a couple of volunteers.</p><p>It was only just this past year some of the team were able to meet for the first time in person:</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">The original <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a> team, at last together. From left to right: <a href="https://twitter.com/left_pad?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@left_pad</a>, <a href="https://twitter.com/jamiebuilds?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@jamiebuilds</a>, <a href="https://twitter.com/sebmck?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@sebmck</a>, yours truly, and <a href="https://twitter.com/loganfsmyth?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@loganfsmyth</a> <a href="https://t.co/XfPj6OhZfA" target="_blank" rel="noopener noreferrer">pic.twitter.com/XfPj6OhZfA</a></p>— Amjad Masad (@amasad) <a href="https://twitter.com/amasad/status/991903859999031298?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">May 3, 2018</a></blockquote><p>As much as this is an announcement post, I'd like to take the opportunity to remind everyone of the state of this project.</p><p>I myself joined a few months before the 6.0 release, which had its own amount of controversy and backlash. Much of the reception there led to existing maintainer burnout (including <a href="https://twitter.com/sebmck" target="_blank" rel="noopener noreferrer">Sebastian</a>, Babel's creator) and a few of us that were left took on the reins.</p><p>Like many maintainers, we accidentally stumbled into the role. Many of us didn't have any formal training into how compilers worked or how to maintain an open source project. Ironically, I even purposely avoided majoring in Computer Science in college because I didn't want to take classes on compilers or anything low level because it seemed uninteresting and difficult. Yet I found myself drawn to tooling, linters, Babel, and JavaScript as a language.</p><p>I'd like to encourage everyone to look into the open source projects that you depend on and to support them (both with time and monetary support if possible).</p><p>Many maintainers aren't inherently experts in the things they work on; and there is much to be accomplished from just starting the work first. You will come in with both curiosity and humility, both of which are great attributes to have as a maintainer. My desire is a hope for the vision of the project versus just all of us <a href="https://twitter.com/TheLarkInn/status/990790109799870469" target="_blank" rel="noopener noreferrer">doing "tasks"</a>.</p><p>Babel isn't a company, or an open source team at a major company like Facebook. There's only a handful of <a href="https://babeljs.io/team" target="_blank" rel="noopener noreferrer">volunteers</a> working on Babel, and it's only been a few months since I took the leap to <a href="https://twitter.com/left_pad/status/969793227862790144" target="_blank" rel="noopener noreferrer">leave my job</a> and be the only one so far to work on open source full time. But people can come and go, have lives outside of this "hobby", raise families, move on to different things, switch jobs or are looking for jobs, etc. Are we collectively doing what we can to sustain the things that are so fundamental to how we work, or are we going to allow the foundations to slowly crumble? How do we keep open source welcoming and inclusive but with clear boundaries? Can we learn from the <a href="https://github.com/nayafia/awesome-maintainers" target="_blank" rel="noopener noreferrer">experiences of other maintainers</a>?</p><p>Although Open Source has clearly taken over software, can we really consider it to be in a healthy state without taking into account the <a href="https://nolanlawson.com/2017/03/05/what-it-feels-like-to-be-an-open-source-maintainer/" target="_blank" rel="noopener noreferrer">people</a> behind it?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babelsponsorseverything">#BabelSponsorsEverything<a href="#babelsponsorseverything" class="hash-link" aria-label="Direct link to #BabelSponsorsEverything" title="Direct link to #BabelSponsorsEverything">​</a></h2><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Tips 4 <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a> at <a href="https://twitter.com/ReactRally?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@ReactRally</a> <a href="https://twitter.com/hashtag/BabelSponsorsEverything?src=hash&amp;ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">#BabelSponsorsEverything</a> <a href="https://t.co/WCxefMOC8V" target="_blank" rel="noopener noreferrer">pic.twitter.com/WCxefMOC8V</a></p>— Harry Wolff (@hswolff) <a href="https://twitter.com/hswolff/status/1030557108830273536?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">August 17, 2018</a></blockquote><script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script><p>Open Source sustainability feels like giving out an offering basket at the moment. It's not difficult to state the value that projects provide to the thousands of people and companies using open source, but yet we don't see that value being shown to the few that are willing to put in the work. There can be so many <a href="https://github.com/nayafia/lemonade-stand" target="_blank" rel="noopener noreferrer">ways to support</a> open source and yet not all approaches work for each project or people.</p><hr><p>Now let's go to the changes!!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="major-breaking-changes">Major Breaking Changes<a href="#major-breaking-changes" class="hash-link" aria-label="Direct link to Major Breaking Changes" title="Direct link to Major Breaking Changes">​</a></h2><blockquote><p>We are documenting these in our <a href="http://babeljs.io/docs/en/next/v7-migration" target="_blank" rel="noopener noreferrer">Migration Guide</a>. Many of these changes can be done automatically with our new <a href="https://github.com/babel/babel-upgrade" target="_blank" rel="noopener noreferrer"><code>babel-upgrade</code></a> tool, or can be added in the future.</p></blockquote><ul><li>Drop support for un-maintained Node versions: 0.10, 0.12, 4, 5 (<a href="http://babeljs.io/blog/2017/09/12/planning-for-7.0#drop-support-for-unmaintained-node-versions-010-012-5-4315-https-githubcom-babel-babel-issues-4315" target="_blank" rel="noopener noreferrer">details</a>)</li><li>Move us to the <code>@babel</code> namespace by switching to using "scoped" packages (<a href="http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#renames-scoped-packages-babel-x" target="_blank" rel="noopener noreferrer">details</a>). This helps differentiate official packages, so <code>babel-core</code> becomes <code>@babel/core</code> (and no squatting)</li><li>Remove (and stop publishing) any yearly presets (<code>preset-es2015</code>, etc) (<a href="http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#deprecated-yearly-presets-eg-babel-preset-es20xx" target="_blank" rel="noopener noreferrer">details</a>). <a href="https://babeljs.io/docs/en/next/babel-preset-env.html" target="_blank" rel="noopener noreferrer"><code>@babel/preset-env</code></a> replaces the need for these as it includes all yearly additions as well as the ability to target a specific set of browsers</li><li>Also drop the <a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">"Stage"</a> presets (<code>@babel/preset-stage-0</code>, etc) in favor of opting into individual proposals. Similarly remove proposals from <code>@babel/polyfill</code> by default (<a href="https://github.com/babel/babel/pull/8440" target="_blank" rel="noopener noreferrer">details</a>). Please consider reading the whole <a href="https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets" target="_blank" rel="noopener noreferrer">post</a> on this for more explanation.</li><li>Some packages have renames: any TC39 proposal plugin will now be <code>-proposal</code> instead of <code>-transform</code> (<a href="http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#renames-proposal" target="_blank" rel="noopener noreferrer">details</a>). So <code>@babel/plugin-transform-class-properties</code> becomes <code>@babel/plugin-proposal-class-properties</code>.</li><li>Introduce a <code>peerDependency</code> on <code>@babel/core</code> for certain user-facing packages (e.g. <code>babel-loader</code>, <code>@babel/cli</code>, etc) (<a href="http://babeljs.io/blog/2017/12/27/nearing-the-7.0-release#peer-dependencies-integrations" target="_blank" rel="noopener noreferrer">details</a>)</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babel-upgrade"><code>babel-upgrade</code><a href="#babel-upgrade" class="hash-link" aria-label="Direct link to babel-upgrade" title="Direct link to babel-upgrade">​</a></h2><p><a href="https://github.com/babel/babel-upgrade" target="_blank" rel="noopener noreferrer"><code>babel-upgrade</code></a> is a new tool we've started that tries to automatically make upgrade changes: currently with dependencies in <code>package.json</code> and <code>.babelrc</code> config.</p><p>We recommend running it directly on a git repo with <code>npx babel-upgrade</code>, or you can install it globally with <code>npm i babel-upgrade -g</code>.</p><p>If you'd like to modify the files, you can pass <code>--write</code> as well as <code>--install</code>.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">npx babel-upgrade --write --install</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Please considering contributing by reporting issues or PRs to help everyone transition to Babel 7! A hope for the future is that we use this same tool for all future breaking changes and create a bot to PR projects to update.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="javascript-config-files">JavaScript Config Files<a href="#javascript-config-files" class="hash-link" aria-label="Direct link to JavaScript Config Files" title="Direct link to JavaScript Config Files">​</a></h2><p>We are introducing <a href="https://babeljs.io/docs/en/next/babelconfigjs.html" target="_blank" rel="noopener noreferrer"><code>babel.config.js</code></a>. It isn't a requirement or even a replacement for <code>.babelrc</code>, but having this may be useful in <em>certain cases</em>.</p><p><code>*.js</code> configuration files are fairly common in the JavaScript ecosystem. ESLint and Webpack both allow for <code>.eslintrc.js</code> and <code>webpack.config.js</code> configuration files, respectively.</p><p>Below is the case of only compiling with a plugin in "production" (you can do this already with the <code>"env"</code> option in a <code>.babelrc</code> file):</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> env </span><span class="token operator">=</span><span class="token plain"> process</span><span class="token punctuation">.</span><span class="token property-access">env</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">NODE_ENV</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    env </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"production"</span><span class="token plain"> </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-plugin-that-is-cool"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">filter</span><span class="token punctuation">(</span><span class="token known-class-name class-name" style="color:#eab700">Boolean</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>babel.config.js</code> has a different config resolution than a <code>.babelrc</code>. It will always resolve the config from that file versus originally when Babel would do a lookup from each file upward until it found a config. This makes it possible to take advantage of the next feature posted below, <code>overrides</code>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="selective-configuration-with-overrides">Selective Configuration with <code>overrides</code><a href="#selective-configuration-with-overrides" class="hash-link" aria-label="Direct link to selective-configuration-with-overrides" title="Direct link to selective-configuration-with-overrides">​</a></h2><p>Recently, I published a <a href="https://babeljs.io/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages" target="_blank" rel="noopener noreferrer">post</a> with thoughts on both publishing ES2015+ packages and also consuming/compiling them.</p><p>There's a <a href="https://babeljs.io/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages#selective-compilation-with-overrides" target="_blank" rel="noopener noreferrer">section</a> that goes into using a new key in Babel's config called <code>overrides</code> which allows you to specify different configs per glob.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// default config...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">overrides</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"./node_modules"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token comment" style="color:#8e908c">// config for node_modules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"./tests"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token comment" style="color:#8e908c">// config for tests</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This allows an application that requires different compilation configs for its tests, client code, and server code to skip needing to create a new <code>.babelrc</code> file per folder.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="speed-">Speed 🏎<a href="#speed-" class="hash-link" aria-label="Direct link to Speed 🏎" title="Direct link to Speed 🏎">​</a></h2><p>Babel itself is <a href="https://twitter.com/left_pad/status/927554660508028929" target="_blank" rel="noopener noreferrer">faster</a> so it should take less time to build! We've made a lot of changes to optimize the code as well as <a href="https://twitter.com/bmeurer/status/924346958810107904" target="_blank" rel="noopener noreferrer">accept</a> <a href="https://twitter.com/rauchg/status/924349334346276864" target="_blank" rel="noopener noreferrer">patches</a> from the <a href="https://twitter.com/v8js" target="_blank" rel="noopener noreferrer">v8</a> team. We're glad to be a part of the <a href="https://github.com/v8/web-tooling-benchmark" target="_blank" rel="noopener noreferrer">Web Tooling Benchmark</a> alongside many other great JavaScript tools.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="output-options">Output Options<a href="#output-options" class="hash-link" aria-label="Direct link to Output Options" title="Direct link to Output Options">​</a></h3><p>Babel has supported <a href="https://babeljs.io/docs/en/next/plugins#plugin-options" target="_blank" rel="noopener noreferrer">preset and plugin options</a> for some time now. To recap you can wrap the plugin in an array and pass an options object to the plugin:</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "plugins": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "pluginA",</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">   ["pluginA", {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">     // options here</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">   }],</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We've made some changes to the <code>loose</code> option of some plugins and added some new options for others! Note by using these options you are opting into non-spec compliant behavior and should know what you are doing; this can become an issue when you switch off of compiling to use the syntax natively. These kinds of options are best used in a library, if at all.</p><ul><li>For classes, <code>class A {}</code> will now not include the <code>classCallCheck</code> helper.</li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">var A = function A() {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">  _classCallCheck(this, A);</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token plain">};</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>There is a new option if every use of a <code>for-of</code> loop is just an array: <code>["transform-for-of", { "assumeArray": true }]</code></li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> elm</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">elm </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> array</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">elm</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> elm</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> _i </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> _array </span><span class="token operator">=</span><span class="token plain"> array</span><span class="token punctuation">;</span><span class="token plain"> _i </span><span class="token operator">&lt;</span><span class="token plain"> _array</span><span class="token punctuation">.</span><span class="token property-access">length</span><span class="token punctuation">;</span><span class="token plain"> _i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  elm </span><span class="token operator">=</span><span class="token plain"> _array</span><span class="token punctuation">[</span><span class="token plain">_i</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">elm</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>We exclude the <code>transform-typeof-symbol</code> plugin in <code>loose</code> mode for <code>preset-env</code> <a href="https://github.com/babel/babel/pull/6831" target="_blank" rel="noopener noreferrer">#6831</a></li></ul><p>We've found a lot of libraries doing this already, so we decided to do this by default.</p><p>Note that the default behavior is to be as spec compliant as possible so that switching off of Babel or using <code>preset-env</code> is seamless vs. allowing smaller output just to save bytes (there's a tradeoff there that each project can make). We plan to work on better docs and tooling to make that easier.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="pure-annotation-support">"Pure" Annotation Support<a href="#pure-annotation-support" class="hash-link" aria-label="Direct link to &quot;Pure&quot; Annotation Support" title="Direct link to &quot;Pure&quot; Annotation Support">​</a></h3><p>After <a href="https://github.com/babel/babel/pull/6209" target="_blank" rel="noopener noreferrer">#6209</a>, transpiled ES6 classes are annotated with a <code>/*#__PURE__*/</code> comment that allows gives a hint to minifiers like <a href="https://github.com/mishoo/UglifyJS2" target="_blank" rel="noopener noreferrer"><code>Uglify</code></a> and <a href="https://github.com/babel/minify" target="_blank" rel="noopener noreferrer"><code>babel-minify</code></a> for dead code elimination. These annotations are added to other helper functions as well.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">/*#__PURE__*/</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>There might be more opportunities for minifier hints and optimizations, let us know!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="syntax">Syntax<a href="#syntax" class="hash-link" aria-label="Direct link to Syntax" title="Direct link to Syntax">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="tc39-proposals-support"><a href="https://github.com/tc39/proposals" target="_blank" rel="noopener noreferrer">TC39 Proposals</a> Support<a href="#tc39-proposals-support" class="hash-link" aria-label="Direct link to tc39-proposals-support" title="Direct link to tc39-proposals-support">​</a></h3><p>I'd like to re-iterate that <a href="https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets" target="_blank" rel="noopener noreferrer">we've removed the Stage presets</a> in favor of a policy of asking users to explicitly opt-in to proposals &lt; Stage 4.</p><p>The concern is that we are automatically opting people into syntax that is not fixed or done with the expectation that it will not change. But this is not the case, especially for proposals that are Stage 0 or 1. This <a href="https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal" target="_blank" rel="noopener noreferrer">post</a> explains a bit on the kind of thinking behind newer ideas.</p><p>Here's a small listing of some of the new syntax Babel supports (keep in mind this feature set is a moving target that could be added/removed/stalled) and which ones have been added in v7:</p><ul><li>ES2018: <a href="https://babeljs.io/docs/en/babel-plugin-proposal-object-rest-spread" target="_blank" rel="noopener noreferrer">Object Rest Spread</a> (<code>var a = { b, ...c }</code>)</li><li>ES2018 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-unicode-property-regex" target="_blank" rel="noopener noreferrer">Unicode Property Regex</a></li><li>ES2018 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-json-strings" target="_blank" rel="noopener noreferrer">JSON Superset</a></li><li>ES2015 (new): <a href="https://babeljs.io/docs/en/babel-plugin-transform-new-target" target="_blank" rel="noopener noreferrer"><code>new.target</code></a></li><li>Stage 3 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-class-properties" target="_blank" rel="noopener noreferrer">Class Private Instance Fields</a> (<code>class A { #b = 2 }</code>)</li><li>Stage 3 (WIP): <a href="https://github.com/babel/babel/issues/8052" target="_blank" rel="noopener noreferrer">Static Class Fields, Private Static Methods</a> (<code>class A { static #a() {} }</code>)</li><li>Stage 3 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-optional-catch-binding" target="_blank" rel="noopener noreferrer">Optional Catch Binding</a> <code>try { throw 0 } catch { do() }</code></li><li>Stage 3 (new): <a href="https://babeljs.io/docs/en/babel-plugin-syntax-bigint" target="_blank" rel="noopener noreferrer">BigInt</a> (syntax only)</li><li>Stage 3: <a href="https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import" target="_blank" rel="noopener noreferrer">Dynamic Import</a> (<code>import("a")</code>)</li><li>Stage 2 (new): <a href="https://babeljs.io/docs/en/babel-plugin-syntax-import-meta" target="_blank" rel="noopener noreferrer"><code>import.meta</code></a> (syntax only) (<code>import.meta.url</code>)</li><li>Stage 2 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-numeric-separator" target="_blank" rel="noopener noreferrer">Numeric Separators</a> (<code>1_000</code>)</li><li>Stage 2 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-function-sent" target="_blank" rel="noopener noreferrer"><code>function.sent</code></a></li><li>Stage 2: <a href="https://babeljs.io/docs/en/babel-plugin-proposal-export-namespace-from" target="_blank" rel="noopener noreferrer"><code>export-namespace-from</code></a> (<code>export * as ns from 'mod'</code>), split from <code>export-extensions</code></li><li>Stage 2: Decorators. Check below for an update on our progress!</li><li>Stage 1: <a href="https://babeljs.io/docs/en/babel-plugin-proposal-export-default-from" target="_blank" rel="noopener noreferrer"><code>export-default-from</code></a> (<code>export v from 'mod'</code>), split from <code>export-extensions</code></li><li>Stage 1 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-optional-chaining" target="_blank" rel="noopener noreferrer">Optional Chaining</a> (<code>a?.b</code>)</li><li>Stage 1 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-logical-assignment-operators" target="_blank" rel="noopener noreferrer">Logical Assignment Operators</a> (<code>a &amp;&amp;= b; a ||= b</code>)</li><li>Stage 1 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-nullish-coalescing-operator" target="_blank" rel="noopener noreferrer">Nullish Coalescing Operator</a> (<code>a ?? b</code>)</li><li>Stage 1 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-pipeline-operator" target="_blank" rel="noopener noreferrer">Pipeline Operator</a> (<code>a |&gt; b</code>)</li><li>Stage 1 (new): <a href="https://babeljs.io/docs/en/babel-plugin-proposal-throw-expressions" target="_blank" rel="noopener noreferrer">Throw Expressions</a> (<code>() =&gt; throw new Error("a")</code>)</li></ul><blockquote><p>It's hard for anyone to keep track of all the proposals, so we attempt to do that at <a href="https://github.com/babel/proposals/" target="_blank" rel="noopener noreferrer">babel/proposals</a>.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript-support-babelpreset-typescript">TypeScript Support (<code>@babel/preset-typescript</code>)<a href="#typescript-support-babelpreset-typescript" class="hash-link" aria-label="Direct link to typescript-support-babelpreset-typescript" title="Direct link to typescript-support-babelpreset-typescript">​</a></h3><p>We worked with the <a href="https://github.com/Microsoft/TypeScript" target="_blank" rel="noopener noreferrer">TypeScript</a> team on getting Babel to parse/transform type syntax with <code>@babel/preset-typescript</code>, similar to how we handle <a href="https://flow.org/" target="_blank" rel="noopener noreferrer">Flow</a> with <code>@babel/preset-flow</code>.</p><blockquote><p>For more details check out this <a href="https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/" target="_blank" rel="noopener noreferrer">post</a> from the TypeScript team!</p></blockquote><p>Before (with types):</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  firstName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  lastName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token builtin" style="color:#f5871f">string</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">greeter</span><span class="token punctuation">(</span><span class="token plain">person </span><span class="token operator">:</span><span class="token plain"> Person</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Hello, "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token plain">firstName </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">" "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token plain">lastName</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After (types removed):</p><div class="language-typescript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-typescript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">greeter</span><span class="token punctuation">(</span><span class="token plain">person</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Hello, "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token plain">firstName </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">" "</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token plain">lastName</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Both Flow and Typescript are tools that enable JavaScript users to take advantage of gradual typing, and we'd like to enable both in Babel. We plan on continuing to work closely with both of their respective teams at FB and Microsoft (in addition to the community-at-large) to maintain compatibility and support new features.</p><blockquote><p>This integration is fairly new, so it's possible some syntax isn't supported fully. We'd appreciate your help in <a href="https://github.com/babel/babel/labels/area:%20typescript?page=2&amp;q=is%3Aopen+label%3A%22area%3A+typescript%22" target="_blank" rel="noopener noreferrer">reporting issues and maybe sending a PR</a>!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="jsx-fragment-support-">JSX Fragment Support (<code>&lt;&gt;</code>)<a href="#jsx-fragment-support-" class="hash-link" aria-label="Direct link to jsx-fragment-support-" title="Direct link to jsx-fragment-support-">​</a></h3><p>As mentioned in the <a href="https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html" target="_blank" rel="noopener noreferrer">React Blog</a>, JSX Fragment support has been available as of <code>beta.31</code>.</p><div class="language-jsx codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSX</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-jsx codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag class-name" style="color:#eab700">ChildA</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag class-name" style="color:#eab700">ChildB</span><span class="token tag" style="color:#c82829"> </span><span class="token tag punctuation" style="color:#c82829">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#c82829">&lt;/</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// output 👇</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Fragment</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token maybe-class-name">ChildA</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token maybe-class-name">ChildB</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babel-helpers-changes">Babel Helpers Changes<a href="#babel-helpers-changes" class="hash-link" aria-label="Direct link to Babel Helpers Changes" title="Direct link to Babel Helpers Changes">​</a></h2><blockquote><p>The <a href="https://github.com/babel/babel-upgrade/pull/71" target="_blank" rel="noopener noreferrer">babel-upgrade PR</a> is in progress</p></blockquote><p><code>@babel/runtime</code> has been split up into <code>@babel/runtime</code> and <code>@babel/runtime-corejs2</code> (<a href="https://github.com/babel/babel/pull/8266" target="_blank" rel="noopener noreferrer">PR</a>). The former only contains Babel's helper functions and the latter contains that as well as any polyfill functions (e.g. <code>Symbol</code>, <code>Promise</code>).</p><p>Babel may need to inject certain functions into the code that can re-used. We just call these "helper functions" just like functions that are shared between modules.</p><p>An example of this is with compiling a <code>class</code> (without <code>loose</code> mode on):</p><p>The specification says that you need to call a class with <code>new Person()</code> but if it's compiled to a function you could technically just do <code>Person()</code> so we include a runtime check for this.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">instance</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter maybe-class-name" style="color:#f5871f">Constructor</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token plain">instance </span><span class="token keyword" style="color:#8959a8">instanceof</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Constructor</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">TypeError</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Cannot call a class as a function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Person</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token maybe-class-name">Person</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>With <code>@babel/plugin-transform-runtime</code> and <code>@babel/runtime</code> (as a dependency), Babel can extract the individual functions and just require the modular functions to enable smaller output like so:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _classCallCheck </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"@babel/runtime/helpers/classCallCheck"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Person</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token maybe-class-name">Person</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The same can be done with <code>external-helpers</code> and <code>rollup-plugin-babel</code>. We are looking into seeing if we can automatically do this in the future. Look out for a standalone post on Babel's helpers soon.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="automatic-polyfilling-experimental">Automatic Polyfilling (experimental)<a href="#automatic-polyfilling-experimental" class="hash-link" aria-label="Direct link to Automatic Polyfilling (experimental)" title="Direct link to Automatic Polyfilling (experimental)">​</a></h2><p>Polyfills are necessary for enabling features like <code>Promise</code>, <code>Symbol</code> in environments that do not have support for them. This is important when differentiating between what Babel does as a compiler (transforms <em>syntax</em>) vs. a polyfill (implements built-in functions/objects).</p><p>It's easy enough to just import something that covers everything like <code>@babel/polyfill</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"@babel/polyfill"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>But it includes the whole polyfill, and you may not need to import everything if browsers support it already. This is the same problem that <code>@babel/preset-env</code> tries to solve with syntax, so we apply it here with polyfills. The option <code>useBuiltins: "entry"</code> does this by splitting the original import into only the imports that are necessary.</p><p>But we can do better by only importing the polyfills that are used in the codebase. The option <code>"useBuiltIns: "usage"</code> is our first attempt at enabling something like that (<a href="https://babeljs.io/docs/en/babel-preset-env#usebuiltins" target="_blank" rel="noopener noreferrer">docs</a>).</p><p>It will run through each file and inject an import at the top of each file if that built-in is "used" in the code. For example:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es6.promise"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The inference isn't perfect so there may be false positives.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.array.includes"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">a</span><span class="token punctuation">.</span><span class="token property-access">includes</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// assume a is an []</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Other ideas in this space are to use <a href="https://polyfill.io" target="_blank" rel="noopener noreferrer">polyfill.io</a> if you are ok with relying on a service (or read how <a href="https://twitter.com/kentcdodds" target="_blank" rel="noopener noreferrer">Kent C. Dodds</a> used it to <a href="https://blog.kentcdodds.com/polyfill-as-needed-with-polyfill-service-35f0ff306a26" target="_blank" rel="noopener noreferrer">build a hosted service at PayPal</a>).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="misc">Misc<a href="#misc" class="hash-link" aria-label="Direct link to Misc" title="Direct link to Misc">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-macros-">Babel Macros 🎣<a href="#babel-macros-" class="hash-link" aria-label="Direct link to Babel Macros 🎣" title="Direct link to Babel Macros 🎣">​</a></h3><p>One of the best parts of Babel is the pluggability of the tool. Over the years, Babel went from being just a "6to5" compiler into a code transform <em>platform</em>, enabling some fantastic optimizations for both user and developer experience. <a href="https://www.npmjs.com/search?q=keywords%3Ababel%20plugin" target="_blank" rel="noopener noreferrer">Tons of Babel plugins have been developed</a> for specific libraries and use cases to improve performance and capabilities of library APIs that would not be possible otherwise (some "libraries" are completely transpiled away resulting in no runtime at all).</p><p>Unfortunately, adding these plugins to your codebase requires changing configuration (which some toolkits like <a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a> don't allow) and it adds complexity to your code because developers have to know what Babel plugins are operating on a file to know what will happen to the code they're writing. These problems have been solved by <a href="https://github.com/kentcdodds/babel-plugin-macros" target="_blank" rel="noopener noreferrer">babel-plugin-macros</a> by <a href="https://twitter.com/kentcdodds" target="_blank" rel="noopener noreferrer">Kent C. Dodds</a>!</p><p>Once <code>babel-plugin-macros</code> has been installed and <a href="https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/user.md" target="_blank" rel="noopener noreferrer">added to your config</a> (it's included in <code>create-react-app</code> v2), you don't need to bother with your configuration to use any macros. In addition, it's even easier to <a href="https://github.com/kentcdodds/babel-plugin-macros/blob/master/other/docs/author.md" target="_blank" rel="noopener noreferrer">write your own custom transforms</a> for use cases specific to your app or one part of your code.</p><p>Learn more about <code>babel-plugin-macros</code> in our original post <a href="https://babeljs.io/blog/2017/09/11/zero-config-with-babel-macros" target="_blank" rel="noopener noreferrer">"Zero-config code transformation with babel-plugin-macros"</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="module-targeting">Module Targeting<a href="#module-targeting" class="hash-link" aria-label="Direct link to Module Targeting" title="Direct link to Module Targeting">​</a></h3><p>Babel has always attempted to balance the size impact of transformations and capabilities they provide to JavaScript authors. In Babel 7, it has become much easier to configure Babel to support the growing popularity of the <a href="https://github.com/kristoferbaxter/preset-env-modules" target="_blank" rel="noopener noreferrer">module/nomodule pattern</a>.</p><p>Notably, several CLI tools for popular web frameworks (<a href="https://cli.vuejs.org/guide/browser-compatibility.html#modern-mode" target="_blank" rel="noopener noreferrer">1</a>, <a href="https://github.com/developit/preact-cli/pull/583" target="_blank" rel="noopener noreferrer">2</a>) are already leveraging support leading to a roughly 20% reduction in shipped JavaScript to consumers of applications transpiled by Babel.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="caller-metadata-and-better-defaults">Caller Metadata and Better Defaults<a href="#caller-metadata-and-better-defaults" class="hash-link" aria-label="Direct link to Caller Metadata and Better Defaults" title="Direct link to Caller Metadata and Better Defaults">​</a></h3><p>We've added a <a href="https://github.com/babel/babel/pull/8485" target="_blank" rel="noopener noreferrer"><code>caller</code> option</a> to <code>@babel/core</code> so our tooling can pass metadata to presets/plugins. For example: <code>babel-loader</code> can add something <a href="https://github.com/babel/babel-loader/pull/660" target="_blank" rel="noopener noreferrer">like this</a> so that <code>preset-env</code> can automatically disable the module transformation (same with <code>rollup</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">babel</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code;"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  filename</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@babel/preset-env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">caller</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-loader"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">supportsStaticESM</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is exciting since it enables a way for tooling to provide better defaults and less configuration! For the case of webpack/rollup: we can automatically defer to using their module transformation instead of Babel's (same with <code>import("a")</code>). Look out for more tooling to take advantage of this in the future!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="class-c-extends-htmlelement-"><code>class C extends HTMLElement {}</code><a href="#class-c-extends-htmlelement-" class="hash-link" aria-label="Direct link to class-c-extends-htmlelement-" title="Direct link to class-c-extends-htmlelement-">​</a></h3><blockquote><p>One of our oldest issues gets it's own heading (<a href="https://github.com/babel/babel/pull/7020" target="_blank" rel="noopener noreferrer">details</a>)</p></blockquote><p>Babel has always had the caveat where it could not support extending native built-ins (<code>Array</code>, <code>Error</code>, etc) and now it can! We've gotten a lot of issues about this; 🎉 you should celebrate like <a href="https://twitter.com/WebReflection/status/940724280035303430" target="_blank" rel="noopener noreferrer">Andrea</a>!</p><p>This change was made to the class plugin so it should be automatically enabled if you are using <code>preset-env</code>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="website-changes-">Website Changes 🌏<a href="#website-changes-" class="hash-link" aria-label="Direct link to Website Changes 🌏" title="Direct link to Website Changes 🌏">​</a></h3><p>We've moved our site from <a href="https://jekyllrb.com/" target="_blank" rel="noopener noreferrer">Jekyll</a> to <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>!</p><p>We're still in the process of setting up <a href="https://github.com/babel/website/issues/1619" target="_blank" rel="noopener noreferrer">translations</a> with <a href="https://crowdin.com/project/babeljs" target="_blank" rel="noopener noreferrer">Crowdin</a>, and with Babel 7 out, we will be in a better place to start that process.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="repl">REPL<a href="#repl" class="hash-link" aria-label="Direct link to REPL" title="Direct link to REPL">​</a></h4><p><img loading="lazy" src="https://i.imgur.com/j0qOllj.png" class="img_SS3x"></p><p>We've rewritten the <a href="https://babeljs.io/repl" target="_blank" rel="noopener noreferrer">REPL</a> as a <a href="https://github.com/babel/website/tree/main/js/repl" target="_blank" rel="noopener noreferrer">React Component</a>, and have been working with Ives on integrating better with <a href="https://codesandbox.io/" target="_blank" rel="noopener noreferrer">CodeSandbox</a>. This allows you to install any plugin or preset from <a href="https://www.npmjs.com/search?q=babel-plugin" target="_blank" rel="noopener noreferrer">npm</a> in the REPL as well as get any updates that <a href="https://github.com/CompuIves/codesandbox-client" target="_blank" rel="noopener noreferrer">CodeSandbox</a> gets.</p><p>We're participating in <a href="https://railsgirlssummerofcode.org/" target="_blank" rel="noopener noreferrer">Rails Girls Summer of Code</a> again! This time, <a href="https://twitter.com/MarinaGJCho" target="_blank" rel="noopener noreferrer">Gyujin</a> and <a href="https://twitter.com/sujinleeme" target="_blank" rel="noopener noreferrer">Sujin</a> have been working hard to integrate <a href="https://twitter.com/heisenbugger" target="_blank" rel="noopener noreferrer">Boopathi's</a> <a href="https://github.com/babel/babel-time-travel" target="_blank" rel="noopener noreferrer">babel-time-travel</a> into the REPL which you can already test now!</p><p>There are so many opportunities here to get involved to make Babel, <a href="https://en.wikipedia.org/wiki/AST" target="_blank" rel="noopener noreferrer">ASTs</a>, and other tools work better!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="we-have-a-song-">We Have A Song 🎶<a href="#we-have-a-song-" class="hash-link" aria-label="Direct link to We Have A Song 🎶" title="Direct link to We Have A Song 🎶">​</a></h3><blockquote><p>Hallelujah—In Praise of Babel</p></blockquote><p>One day, <a href="https://twitter.com/angustweets" target="_blank" rel="noopener noreferrer">Angus</a> graciously <a href="https://twitter.com/angustweets/status/938817321652576256" target="_blank" rel="noopener noreferrer">imparted</a> to us a <a href="https://medium.com/@angustweets/hallelujah-in-praise-of-babel-977020010fad" target="_blank" rel="noopener noreferrer">song</a> which I thought was amazing, so why not make it our "official" song? And <a href="https://twitter.com/swyx" target="_blank" rel="noopener noreferrer">Shawn</a> made a brilliant cover <a href="https://www.youtube.com/watch?v=40abpedBKK8" target="_blank" rel="noopener noreferrer">here</a>.</p><p>You can find it in our repo at <a href="https://github.com/babel/babel/blob/main/SONG.md" target="_blank" rel="noopener noreferrer">SONG.md</a>. We hope to see other projects follow up on this!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="whats-next">What's Next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's Next?" title="Direct link to What's Next?">​</a></h2><ul><li>Babel is inherently tied to what it compiles: JavaScript. As long as there are new additions to propose/work on there is work to be done there. That includes the time/effort to implement and maintain the syntax even before it becomes "stable". We care about the whole process: the upgrade path, education of new features, teaching of standards/language design, ease of use, and integration with other projects.<ul><li>Related: we are almost finished implementing <a href="https://github.com/babel/babel/pull/7976" target="_blank" rel="noopener noreferrer">the new decorators proposal</a> in Babel thanks to <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò</a>. It has been a long journey (it has taken <a href="https://github.com/babel/babel/pull/6107#issue-135801160" target="_blank" rel="noopener noreferrer">more than one year</a>!) because the new proposal is completely different and much more powerful than the old one, but it is almost there 🎉. You can expect it to be released in one of the next minor versions, alongside with a blog post which will explain the changes in detail.</li></ul></li><li><a href="https://twitter.com/heisenbugger" target="_blank" rel="noopener noreferrer">Boopathi</a> has been diligently maintaining <a href="https://github.com/babel/minify" target="_blank" rel="noopener noreferrer"><code>babel-minify</code></a>, so we'll being doing a 1.0 for that next!</li><li>There are a lot of new features in the works: plugin ordering, better validation/errors, speed, re-thinking loose/spec options, caching, using Babel asynchronously, building against itself from CI, smoke tests, running test262. Check out this <a href="http://babeljs.io/docs/en/roadmap" target="_blank" rel="noopener noreferrer">roadmap</a> doc for some more possible ideas!</li></ul><p>We have no secret plans: we're trying the best we can with what we have to serve this community.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="open-source-is-a-mirror">Open Source is a Mirror<a href="#open-source-is-a-mirror" class="hash-link" aria-label="Direct link to Open Source is a Mirror" title="Direct link to Open Source is a Mirror">​</a></h2><p>I'd love if we'd have the time and resources to accomplish all of these ideas and to do it well. But as we've shown with this current release, things take much longer than expected!</p><p>Why do these releases take so long anyway? Is it from the feature creep, both from ourselves and our users? Was it because we don't understand how to prioritize among all the possible things to add or fix? Deciding to fix low-hanging fruit vs. fundamental issues until the end? Or "distractions" from helping others on GitHub, Slack, Twitter? Are we just bad are estimating our time, understanding the complexities of these issues, overcommitting as volunteers?</p><p>Or are we just setting too high of an expectation on ourselves, or feel so pressured by others to perform and fit to their needs at the harm of ourselves? I can only describe it as dread when seeing a message from someone online wondering why something hasn't been released while another asks why this bug isn't fixed yet. I want to just rush it out and be done with it but I also have a desire to take this seriously.</p><p>I've tried to <a href="https://twitter.com/left_pad/status/1032348719931432961" target="_blank" rel="noopener noreferrer">express</a> some of these thoughts and struggles in my talk last week at React Rally: <a href="https://www.youtube.com/watch?v=h0sfFX7WH1c" target="_blank" rel="noopener noreferrer">Through the (Open Source) Looking Glass</a>, which I hope you can take an opportunity to listen to. The question I ask myself: What can I do about the inevitable cycle of maintainer burnout, constant anxiety, and unrealistic expectations?</p><p>Like much of life, the things we do reflect our character and show us how we really are. The actions we take can in themselves can change us, for better or for worse. If we are to take our work seriously, we should keep one another accountable in these habits that seem so embedded in our culture: of instant gratification, success in terms of metrics, entitlement vs. gratitude, and pride in overworking.</p><p>But despite all of it, working towards this release has been so worth it.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="thanks">Thanks<a href="#thanks" class="hash-link" aria-label="Direct link to Thanks" title="Direct link to Thanks">​</a></h2><p>This is truly a really exciting release, not only through looking back at what we've accomplished and enabled, but much more just knowing how much time and heart was put into making it happen over the last year. It's hard to believe the opportunities and experiences that have happened along the way: interacting with and helping companies from all over the world, finding friends in almost any city I've visited, and speaking honestly about the unbelievable journey this group has taken up together.</p><p>Personally, I've never really put so much of my mental energy into anything of this magnitude and I'd like to thank so many people for lifting us up along the way. Shoutouts in particular to <a href="https://twitter.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan Smyth</a> who has spent countless time to change so much of how the core works and always takes time to be so helpful in our Slack while also working freelance and <a href="https://twitter.com/existentialism" target="_blank" rel="noopener noreferrer">Brian Ng</a> who has stepped up in such a big way to continue to maintain Babel as well as review all my blog posts and talks. <a href="https://twitter.com/TschinderDaniel" target="_blank" rel="noopener noreferrer">Daniel Tschinder</a>, <a href="https://twitter.com/svensauleau" target="_blank" rel="noopener noreferrer">Sven Sauleau</a>, <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolò Ribaudo</a>, and <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin Ridgewell</a> have all just been instrumental in making this release possible and enjoyable to work on.</p><p>Shoutout to all the many community members on Slack, Twitter, and across all the projects on GitHub that also have to understand what we are doing for their own users. I'd like to give a huge thanks to my friends at <a href="https://www.behance.net/" target="_blank" rel="noopener noreferrer">Behance</a>/<a href="https://www.adobe.com/" target="_blank" rel="noopener noreferrer">Adobe</a> for sponsoring me for almost a year to work on Babel half time before deciding to go full-time (as well as helping test Babel 7 in production throughout the whole time I was there). Big thanks to all of our <a href="https://babeljs.io/#sponsors" target="_blank" rel="noopener noreferrer">sponsors</a> for our Open Collective, especially <a href="https://babeljs.io/blog/2018/07/16/announcing-babels-new-partnership-with-trivago" target="_blank" rel="noopener noreferrer">Trivago</a> and <a href="https://handshake.org/" target="_blank" rel="noopener noreferrer">Handshake</a>. And thanks to our friends and family for all their love and support.</p><p>We're all pretty tired at this point, but it's truly been an honor and privilege to serve in this way, so we hope you appreciate the release!</p><script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Removing Babel's Stage Presets]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/07/27/removing-babels-stage-presets</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/07/27/removing-babels-stage-presets</guid>
            <pubDate>Fri, 27 Jul 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[Moving forward with v7, we've decided it's best to stop publishing the Stage presets in Babel (e.g. @babel/preset-stage-0).]]></description>
            <content:encoded><![CDATA[<p>Moving forward with v7, we've decided it's best to stop publishing the Stage presets in Babel (e.g. <code>@babel/preset-stage-0</code>).</p><p>We didn't make this decision lightly and wanted to show the context behind the interplay between TC39, Babel, and the community.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="some-history">Some History<a href="#some-history" class="hash-link" aria-label="Direct link to Some History" title="Direct link to Some History">​</a></h2><p>A Babel preset is a sharable list of plugins.</p><p>The <a href="https://babeljs.io/docs/en/next/presets" target="_blank" rel="noopener noreferrer">official Babel Stage presets</a> tracked the <a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">TC39 Staging process</a> for new <a href="https://github.com/tc39/proposals" target="_blank" rel="noopener noreferrer">syntax proposals</a> in JavaScript.</p><p>Each preset (ex. <code>stage-3</code>, <code>stage-2</code>, etc.) included all the plugins for that particular stage and the ones above it. For example, <code>stage-2</code> included <code>stage-3</code>, and so on.</p><hr><p>This allowed users who wanted to use experimental syntax to simply add the preset, instead of needing to configure/install each individual plugin.</p><p>We actually <a href="https://github.com/babel/babel/pull/2649" target="_blank" rel="noopener noreferrer">added</a> the Stage presets shortly after Babel's v6 release (it was previously a config flag in v5). Shown below is an older example from Babel v6.</p><p>It was common to see this in a config:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2015"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"react"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"stage-0"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The original source of <a href="https://unpkg.com/babel-preset-stage-0@6.0.14/index.js" target="_blank" rel="noopener noreferrer">babel-preset-stage-0</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.js</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel-preset-stage-1"</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel-plugin-transform-do-expressions"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel-plugin-transform-function-bind"</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="problems">Problems<a href="#problems" class="hash-link" aria-label="Direct link to Problems" title="Direct link to Problems">​</a></h2><p>These presets were a convenient way to use what we all wanted: the new, shiny, "yet-to-be-determined" future of JavaScript.</p><p>Looking back, it worked really well! (Maybe too well?)</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="too-good-a-job">Too Good a Job?<a href="#too-good-a-job" class="hash-link" aria-label="Direct link to Too Good a Job?" title="Direct link to Too Good a Job?">​</a></h3><p>Languages like <a href="https://coffeescript.org/" target="_blank" rel="noopener noreferrer">CoffeeScript</a> and tooling like <a href="https://github.com/google/traceur-compiler" target="_blank" rel="noopener noreferrer">Traceur</a> helped establish the idea of compiling JavaScript. Babel made it even easier to both use new/future syntax and integrate with existing tooling. The expectations changed from skepticism and worry to completely embracing the experimental.</p><p>We probably wouldn't be where we are if not for the wide adoption of compilers such as Babel: it accelerated the usage (and teaching) of ES2015 to a much larger audience. The growth of React further fueled usage as its JSX syntax, class properties, and object rest/spread led to people knowing a bit more about these syntax proposals.</p><p>Babel became a one-time setup for people, never to be thought of again. It became the underlying infrastructure, hidden behind other tools until there was a <code>SyntaxError</code>, dependency issues, or integration issues. Simply use <code>stage-0</code>.</p><p>This was awesome to see in some ways, as it meant that these ideas were being tested in the wild, even in production environments. However, it also meant that many companies, tools, and people would encounter some trouble if a proposal changed in a significant way (or even got dropped altogether).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="back-and-forth">Back and Forth<a href="#back-and-forth" class="hash-link" aria-label="Direct link to Back and Forth" title="Direct link to Back and Forth">​</a></h3><p>Over the years, we've raised many issues to discuss what to do with the Stage presets in <a href="https://github.com/babel/babel/issues/4914" target="_blank" rel="noopener noreferrer">#4914</a>, <a href="https://github.com/babel/babel/issues/4955" target="_blank" rel="noopener noreferrer">#4955</a>, <a href="https://github.com/babel/babel/issues/7770" target="_blank" rel="noopener noreferrer">#7770</a>. I even wrote in an older post about Babel 7.0 that said we <em>weren't</em> <a href="https://babeljs.io/blog/2017/12/27/nearing-the-7.0-release" target="_blank" rel="noopener noreferrer">removing them</a> 😅.</p><p>However, we found that keeping the Stage presets would lead to issues even for Babel itself:</p><ul><li>It was a common issue to ask something like: <a href="https://github.com/babel/babel/issues/2948" target="_blank" rel="noopener noreferrer">"What presets(s) are needed to use async functions?"</a>. It would be unclear for people to know exactly what <code>stage-0</code> meant, and few people would look at its <code>package.json</code> or source.</li><li>Removing a proposal plugin in Stage 3 (once it moves to Stage 4) is actually a breaking change. This issue is exacerbated when you are trying to use <code>@babel/preset-env</code> to not compile a natively supported proposal.</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="es7-decorators">"ES7 Decorators"<a href="#es7-decorators" class="hash-link" aria-label="Direct link to &quot;ES7 Decorators&quot;" title="Direct link to &quot;ES7 Decorators&quot;">​</a></h3><p>Part of the issue is precisely around naming things, and as we often hear, naming things is hard.</p><p>There were a lot of names for ES6 itself: Harmony, ES Next, ES6, ES2015. When people hear about new ideas it makes sense to just pick the latest number and attach the name to it.</p><p>Therefore, it's easy to <a href="https://twitter.com/search?q=es7%20class%20properties&amp;src=typd" target="_blank" rel="noopener noreferrer">search</a> <a href="https://twitter.com/search?q=es7%20decorators&amp;src=typd" target="_blank" rel="noopener noreferrer">around</a> for tweets/blog posts/talks that say "ES7 Decorators" and find that it's become the accustomed name for it.</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Your reminder that binding with :: is just an experimental proposal at stage 0 and might never become a part of JS. Don't call it "ES7".</p>— Dan Abramov (@dan_abramov) <a href="https://twitter.com/dan_abramov/status/785082176610115584?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">October 9, 2016</a></blockquote><p>It's completely understandable that this happens without realizing it, but continuing to do so sets different expectations for how the language progresses. It's nothing to feel guilty about — we learn as a community and remind one another of how JavaScript works.</p><p><a href="https://twitter.com/_jayphelps/status/779770321003962369" target="_blank" rel="noopener noreferrer">Jay Phelps</a> wrote a nice <a href="https://medium.com/@jayphelps/please-stop-referring-to-proposed-javascript-features-as-es7-cad29f9dcc4b" target="_blank" rel="noopener noreferrer">article</a> about this subject. He explains it would be best to call them by the "Stage" they are currently at: "Stage 2 Decorators", or just simply the "Decorators Proposal".</p><p>The reasoning is that saying "ES7 Decorators" assumes that Decorators is expected to be in ES7. I mentioned this in my <a href="https://babeljs.io/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages#staging-process" target="_blank" rel="noopener noreferrer">last post regarding compiling node_modules</a>, but being in a particular Stage doesn't guarantee much: a proposal can stall, move backward, or get removed entirely.</p><p>We wanted to highlight this fact when we decided to <a href="https://babeljs.io/docs/en/next/v7-migration#switch-to-proposal-for-tc39-proposals-blog-2017-12-27-nearing-the-70-releasehtml-renames-proposal" target="_blank" rel="noopener noreferrer">change the names</a> of the proposal plugins from <code>@babel/plugin-transform-</code> to <code>@babel/plugin-proposal-</code>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babelscript">BabelScript<a href="#babelscript" class="hash-link" aria-label="Direct link to BabelScript" title="Direct link to BabelScript">​</a></h3><p>Having presets for proposals so early in the process may imply that these proposals are guaranteed to move forward or have a stable implementation.</p><p><a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">TC39</a> urges caution when using Stage 2-or below proposals, as it might result in inadvertent pressure from the community to keep the implementation as-is instead of improving it for fear of breaking existing code or ecosystem fragmentation (e.g. using a different symbol like <code>#</code> instead of <code>@</code> for decorators).</p><p>People joke that developers who use Babel are using "BabelScript" instead of JavaScript, implying that somehow once a Babel plugin is made for a certain feature, that must mean it’s "fixed" or officially part of the language already (which is not true). For some, the first thought for people when they see a new syntax/idea (Stage "-1") is whether there a Babel plugin for it.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="setting-expectations">Setting Expectations<a href="#setting-expectations" class="hash-link" aria-label="Direct link to Setting Expectations" title="Direct link to Setting Expectations">​</a></h3><p>After compilers like Babel made it common practice for people to write ES2015, it was natural for developers to want to try out even newer and more experimental "features". The way this worked in Babel was to use the <code>stage</code> flag in previous versions or the <code>stage-x</code> presets.</p><p>Being the most convenient way of opting into any new feature, it quickly became the default for people when configuring Babel (even though in Babel v6 it moved to not doing anything by default, which caused lots of complaints).</p><p>It became common to see <code>"stage-0"</code> being used in libraries, boilerplates, talks, tweets, and slides.</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">"Just say no" to `babel?stage=0` in production.</p>— Ryan Florence (@ryanflorence) <a href="https://twitter.com/ryanflorence/status/627154904302288897?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">July 31, 2015</a></blockquote><p>There was a lot of good discussions even years ago, but it wasn't the easiest thing to navigate: we wouldn't want to penalize users who understood the tradeoffs by putting <code>console.warn</code>s when using it, and not having the option at all seemed unreasonable at the time.</p><p>Blindly opting into Stage 0 (whether we had it by default) or people choosing to do so seems dangerous, but also never using any proposals is overly cautious. Ideally, everyone should able to make an informed decision about the kinds of features that seem reasonable to them and use them wisely, regardless of what stage they are in. <a href="https://twitter.com/jugglinmike" target="_blank" rel="noopener noreferrer">Mike Pennisi</a> wrote <a href="https://bocoup.com/blog/javascript-developers-watch-your-language" target="_blank" rel="noopener noreferrer">a great post</a> about these concerns.</p><p>It isn't our intention to threaten, rush, or force specific things into the ecosystem or JavaScript but to faithfully maintain the implementation/discussions around new ideas.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="hesitations">Hesitations<a href="#hesitations" class="hash-link" aria-label="Direct link to Hesitations" title="Direct link to Hesitations">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="other-considerations">Other Considerations<a href="#other-considerations" class="hash-link" aria-label="Direct link to Other Considerations" title="Direct link to Other Considerations">​</a></h3><p>We also could have tried to:</p><ul><li><a href="https://github.com/babel/babel/issues/4914" target="_blank" rel="noopener noreferrer">Rename the presets</a> to better signify the stability level (doesn't solve the versioning problem)</li><li>Better versioning strategies: independently version the presets and update them immediately when needed, maybe use <code>0.x</code></li><li>Warn/Error for old out-of-date versions of presets</li></ul><p>In the end, people would still have to look up what proposals are at what Stage to know which ones to use if we kept the Stages in.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="why-now">Why Now?<a href="#why-now" class="hash-link" aria-label="Direct link to Why Now?" title="Direct link to Why Now?">​</a></h3><p>Why not remove it earlier? The Stage presets have been part of Babel for years, and there were concerns with adding more "complexity" to using Babel. A lot of tooling, documentation, articles, and knowledge were around the Stage presets. Earlier, we thought it was better to officially maintain the presets since someone else would (and will) inevitably create them.</p><p>We're trying to determine the right level of feedback: if it's only the committee that decides what goes into the language,  it may lead to well-specified features that are not needed, but if the community expects that in-progress, experimental proposals are considered stable or ok to use in production without consequence, then we'll have other issues. We all want to move forward and proceed with intention: not rushing, but not being too cautious. Babel is the right place to do that experimentation but knowing where the boundaries are is necessary.</p><p>Removing the presets would be considered a "feature" since it means someone would have to make an explicit decision to use each proposal, which is reasonable for any proposal since they all have varying levels of instability, usefulness, and complexity.</p><p>We fully expect some initial <a href="https://news.ycombinator.com/item?id=11371906" target="_blank" rel="noopener noreferrer">backlash</a> from this, but ultimately feel that removing the Stage presets is a better decision for us all in the long run. However, removing previous defaults or removing the Stage presets doesn't mean we don't care about ease of use, new users, or documentation. We work with what we can to keep the project stable, provide tooling to make things better, and document what we know.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="migrating">Migrating<a href="#migrating" class="hash-link" aria-label="Direct link to Migrating" title="Direct link to Migrating">​</a></h2><blockquote><p>For a more automatic migration, we have updated <a href="https://github.com/babel/babel-upgrade" target="_blank" rel="noopener noreferrer">babel-upgrade</a> to do this for you (you can run <code>npx babel-upgrade</code>).</p></blockquote><p>The TL;DR is that we're removing the Stage presets. At some level, people will have to opt-in and know what kinds of proposals are being used instead of assuming what people should use, especially given the unstable nature of some of these proposals. If you use another preset or a toolchain, (e.g. <a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a>) it's possible this change doesn't affect you directly.</p><p>We have deprecated the Stage presets as of <code>7.0.0-beta.52</code>. If you don't want to change your config now, we would suggest you <em>pin</em> the versions to <code>beta.54</code> until you can upgrade; after <code>beta.54</code> we will throw an error with a message saying how to migrate. And check that all your versions are the same while in prerelease.</p><p>As an alternative, you are free to make your own preset that contains the same plugins and upgrade them as you please. In the future, we may want to work on a <code>babel-init</code> that can help you set up plugins interactively or update <code>babel-upgrade</code> itself to list and add the current Stage plugins. Maybe Babel should stay as a low-level tool and rely on other higher-level/framework tools like <code>create-react-app</code> to handle these choices for people.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="preventing-proposal-lock-in">Preventing Proposal Lock-In<a href="#preventing-proposal-lock-in" class="hash-link" aria-label="Direct link to Preventing Proposal Lock-In" title="Direct link to Preventing Proposal Lock-In">​</a></h3><p><a href="https://twitter.com/JamesDiGioia" target="_blank" rel="noopener noreferrer">James DiGioia</a> wrote a <a href="https://babeljs.io/blog/2018/07/19/whats-happening-with-the-pipeline-proposal" target="_blank" rel="noopener noreferrer">post</a> recently about the changes to using the pipeline operator (<code>|&gt;</code>).</p><p>The main point in the post is that the proposal itself is in flux and has a few options to explore. Because we'd like to implement all three of the current possibilities as Babel plugins for both spec feedback and user feedback, we believed the way the plugin is used should change as well. This a relatively new approach for TC39 and Babel!</p><p>Previously, we would add the proposal plugin to the config and that was it. Now, we remove the default behavior and ask users to opt into a flag that shows which proposal is chosen, and make it clear that there isn't a fixed (or even favored) option at the moment.</p><div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> "plugins": [</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token deleted-sign deleted prefix deleted" style="color:#c82829">-</span><span class="token deleted-sign deleted line" style="color:#c82829">   "@babel/plugin-proposal-pipeline-operator"</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token deleted-sign deleted line" style="color:#c82829"></span><span class="token inserted-sign inserted prefix inserted" style="color:#718c00">+</span><span class="token inserted-sign inserted line" style="color:#718c00">   ["@babel/plugin-proposal-pipeline-operator", { "proposal": "minimal" }]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token inserted-sign inserted line" style="color:#718c00"></span><span class="token unchanged prefix unchanged"> </span><span class="token unchanged line"> ]</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token unchanged line"></span><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is something that we'd like to continue to do moving forward as another indication that these proposals are open to change and feedback from all of us. The removal of the Stage presets makes this even easier as before we had to pass down these options even if you didn't use the syntax.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="ecosystem-maintenance-burden">Ecosystem Maintenance Burden<a href="#ecosystem-maintenance-burden" class="hash-link" aria-label="Direct link to Ecosystem Maintenance Burden" title="Direct link to Ecosystem Maintenance Burden">​</a></h3><p>A language's "syntax budget" doesn't just apply to the complexity of the language itself but can extend down to the tooling. Each new syntax addition brings new <a href="http://jshint.com/blog/new-lang-features/" target="_blank" rel="noopener noreferrer">burden</a> to the maintainers of other JavaScript projects.</p><p>Once new syntax is proposed, many things need updating: parsers (<code>babylon</code>), syntax highlighting (<code>language-babel</code>), linters (<code>babel-eslint</code>), test frameworks (<code>jest</code>/<code>ava</code>), formatters (<code>prettier</code>), code coverage (<code>istanbul</code>), minifiers (<code>babel-minify</code>), and more.</p><p>There have been many issues brought up on projects like <code>acorn</code>, <code>eslint</code>, <code>jshint</code>, <code>typescript</code>, and others to support Stage 0 proposals because they were in Babel. There aren't many projects that would adhere to a policy that required them to support any proposal since that would be extremely demanding to maintain. In many ways, it's surprising we even attempt to handle it in Babel itself given the constant updates and churn.</p><p>Who is doing that work, and is it our responsibility to make sure everything works? Every one of those projects (mostly volunteers) is lacking in help in almost every aspect, and yet we continually get complaints about this across the board. How are we, as a community, to take responsibility for dealing with our infrastructure (not dissimilar to open source as a whole)?</p><p>Babel has taken on the unusual burden of supporting these experimental features; at the same time, it's reasonable that other projects take a more conservative policy. If you'd like to see new language features supported across the ecosystem, <a href="https://github.com/tc39/ecma262/blob/master/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">contribute to TC39</a> and this project to bring these proposals to Stage 4.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="the-future">The Future<a href="#the-future" class="hash-link" aria-label="Direct link to The Future" title="Direct link to The Future">​</a></h3><p>The purpose of this project is to act as a part of the TC39 process: being a resource for both implementing newer (Stage 0-2) proposals and receiving feedback from users while also supporting older versions of JavaScript. We hope this post sheds more light on how we are trying, as best we can, to better align this project in the JavaScript ecosystem. We will be releasing a RC for v7 soon!</p><hr><p>If you appreciate this post and the work we're doing on Babel, you can support me on <a href="https://www.patreon.com/henryzhu" target="_blank" rel="noopener noreferrer">Patreon</a>, ask your company to sponsor us on <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>, or better yet get your company involved with Babel as part of your work. We'd appreciate the collective ownership.</p><p>With thanks to all the <a href="https://github.com/babel/website/pull/1735" target="_blank" rel="noopener noreferrer">reviewers</a>! Feel free to give feedback on <a href="https://twitter.com/left_pad/status/1022877618348146693?s=20" target="_blank" rel="noopener noreferrer">Twitter</a>.</p><script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What's Happening With the Pipeline (|>) Proposal?]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/07/19/whats-happening-with-the-pipeline-proposal</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/07/19/whats-happening-with-the-pipeline-proposal</guid>
            <pubDate>Thu, 19 Jul 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[With the release of babel@7.0.0-beta52, we introduced a new required configuration flag to @babel/plugin-proposal-pipeline-operator, a breaking change for the pipeline operator. To clear up any confusion, let's take a look at the pipeline proposal and why we needed to introduce this configuration option.]]></description>
            <content:encoded><![CDATA[<p>With the release of <a href="https://github.com/babel/babel/releases/tag/v7.0.0-beta.52" target="_blank" rel="noopener noreferrer">babel@7.0.0-beta52</a>, we introduced a new required configuration flag to <code>@babel/plugin-proposal-pipeline-operator</code>, a breaking change for the pipeline operator. To clear up any confusion, let's take a look at the pipeline proposal and why we needed to introduce this configuration option.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="current-status">Current Status<a href="#current-status" class="hash-link" aria-label="Direct link to Current Status" title="Direct link to Current Status">​</a></h2><p>The pipeline operator was originally <a href="https://github.com/babel/babel/pull/3159" target="_blank" rel="noopener noreferrer">introduced</a> by <a href="https://github.com/gilbert" target="_blank" rel="noopener noreferrer">Gilbert Garza</a>, providing a clean syntax for "streamlining chained function calls in a readable, functional manner." The pipeline operator has roots in a number of languages, including F#, Hack, Elm, Elixir, and others, but there were two major points of contention in introducing the new syntax to JavaScript:</p><ul><li>Whether and how to introduce placeholders</li><li>How to handle async / await in the pipeline</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="placeholders">Placeholders<a href="#placeholders" class="hash-link" aria-label="Direct link to Placeholders" title="Direct link to Placeholders">​</a></h3><p>The first issue was the question of placeholders. This was first raised by <a href="https://github.com/zenparsing" target="_blank" rel="noopener noreferrer">Kevin Smith</a> in <a href="https://github.com/tc39/proposal-pipeline-operator/issues/84" target="_blank" rel="noopener noreferrer">this issue</a>, where he suggested <a href="https://docs.hhvm.com/hack/operators/pipe-operator" target="_blank" rel="noopener noreferrer">Hack-style pipelining</a>. In Hack, a placeholder is required for every right-hand side of the pipeline, as in this example:</p><div class="language-hack codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-hack codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">namespace Hack\UserDocumentation\Operators\Pipe\Examples\MapFilterCountPiped;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">function piped_example(array&lt;int&gt; $arr): int {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  return $arr</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    |&gt; \array_map($x ==&gt; $x * $x, $$)</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    |&gt; \array_filter($$, $x ==&gt; $x % 2 == 0)</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    |&gt; \count($$);</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">var_dump(piped_example(range(1, 10)));</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We built on this concept, as a placeholder can easily be used in arbitrary expressions, with the placeholder representing the value returned from the previous step. This affords additional flexibility and power within a pipeline step.</p><p>The downside is the complexity involved in introducing a new token. The hash (<code>#</code>) is the current choice, and although this is still open to bikeshedding, any token would potentially have multiple meanings. The hash is also used by the <a href="https://github.com/tc39/proposal-class-fields#private-fields" target="_blank" rel="noopener noreferrer">private fields proposal</a>, and <a href="https://github.com/tc39/proposal-partial-application/issues/21#issuecomment-361092565" target="_blank" rel="noopener noreferrer">all other options are in use in one form or another</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="async--await">Async / Await<a href="#async--await" class="hash-link" aria-label="Direct link to Async / Await" title="Direct link to Async / Await">​</a></h3><p>The initial introduction of the pipeline included this syntax for <code>await</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">x </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> f</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>which would desugar to</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">f</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Unfortunately, users may expect this alternative desugaring:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">(</span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> f</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>While there was pushback on the idea of including async handling in the pipeline at all, committee members expressed concern about a pipeline operator that didn't handle async/await. While there are ways to handle Promise-returning functions without explicit syntax, they are too cumbersome to be useful or require a helper function.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="proposed-solutions">Proposed Solutions<a href="#proposed-solutions" class="hash-link" aria-label="Direct link to Proposed Solutions" title="Direct link to Proposed Solutions">​</a></h2><p>As a result of these discussions, two proposals, along with a base minimal proposal, emerged to resolve them: F# Pipelines and Smart Pipelines. Let's go through how they resolve the problems posed above.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="minimal-pipelines"><a href="https://github.com/tc39/proposal-pipeline-operator/" target="_blank" rel="noopener noreferrer">Minimal Pipelines</a><a href="#minimal-pipelines" class="hash-link" aria-label="Direct link to minimal-pipelines" title="Direct link to minimal-pipelines">​</a></h3><p>This proposal covers the basic functionality of the pipeline operator. The minimal proposal bans await, so there's no async handling involved at all, and includes no placeholders. It matches the behavior of the babel plugin before we introduced the configuration and is the current specification in the pipeline operator proposal repository. It functions more as a straw man, to compare the benefits and tradeoffs of other the proposals, and is unlikely to be accepted as-is without lethal defects in both of the alternatives.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="f-pipelines"><a href="https://github.com/valtech-nyc/proposal-fsharp-pipelines/" target="_blank" rel="noopener noreferrer">F# Pipelines</a><a href="#f-pipelines" class="hash-link" aria-label="Direct link to f-pipelines" title="Direct link to f-pipelines">​</a></h3><p>On the question of placeholders, F# Pipelines argue they're not needed. In the base proposal, arrow functions fill the area placeholders fill, requiring less new syntax and building on a syntax developers are already familiar with and have been using since ES2015.</p><p>As currently specced, arrow functions are required to be wrapped in parentheses:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> person </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">score</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">25</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> newScore </span><span class="token operator">=</span><span class="token plain"> person</span><span class="token punctuation">.</span><span class="token property-access">score</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> double</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">7</span><span class="token punctuation">,</span><span class="token plain"> _</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">boundScore</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">,</span><span class="token plain"> _</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Exploration is underway to determine whether it would be feasible to enable arrow functions to be used without parentheses, as they are a significant syntactical burden.</p><p>On the question of async, F# Pipelines treat <code>await</code> similar to a unary function:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">promise </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This would desugar to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> promise</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>and can thus be used in the middle of larger function chains with async:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">promise</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">doubleSay</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">', '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> capitalize</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> x </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'!'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">User</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Message</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> stream</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">write</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token property-access">log</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The special casing of <code>await</code> could potentially enable other unary operators to be used similarly (e.g. <code>typeof</code>), but the F# pipelines don't support them initially.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="smart-pipelines"><a href="https://github.com/js-choi/proposal-smart-pipelines/" target="_blank" rel="noopener noreferrer">Smart Pipelines</a><a href="#smart-pipelines" class="hash-link" aria-label="Direct link to smart-pipelines" title="Direct link to smart-pipelines">​</a></h3><p>Smart Pipelines takes the idea of the placeholder to its logical conclusion, enabling it to manage partial application as well as arbitrary expressions in a pipeline. The above long chain would be written thus:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">promise</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> #</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">doubleSay</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">', '</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> # </span><span class="token operator">||</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">TypeError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> capitalize</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> # </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'!'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">User</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Message</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> stream</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">write</span><span class="token punctuation">(</span><span class="token plain">#</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token property-access">log</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Smart Pipelines have a few rules for the placeholder. If a bare identifier is provided to a step in the pipeline, no token is necessary, called <a href="https://github.com/js-choi/proposal-smart-pipelines/blob/master/readme.md#bare-style" target="_blank" rel="noopener noreferrer">"bare style"</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">x </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> a</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">x </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> f</span><span class="token punctuation">.</span><span class="token property-access">b</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Unlike Hack, unary functions don't require a placeholder token.</p><p>For other expressions, a placeholder (called a "lexical topic token") is required, and the code will throw an early SyntaxError if it is not included in <a href="https://github.com/js-choi/proposal-smart-pipelines/blob/master/readme.md#topic-style" target="_blank" rel="noopener noreferrer">"topic style"</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">10</span><span class="token plain"> </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> # </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">promise </span><span class="token operator">|</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> #</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If there are any operators, parentheses (including for method calls), brackets, or anything other than identifiers and dot punctuators, then a topic token is necessary. This avoids footguns and eliminate ambiguity when not using a topic token.</p><p>Smart pipelines thus resolve the issue of async in an integrative way, allowing all possible expressions to be embedded in a pipeline; not only <code>await</code>, but also <code>typeof</code>, <code>yield</code>, and another other operator desired.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="where-babel-comes-in">Where Babel Comes In<a href="#where-babel-comes-in" class="hash-link" aria-label="Direct link to Where Babel Comes In" title="Direct link to Where Babel Comes In">​</a></h2><p>Once all three proposals were fleshed out, we realized discussion and debate were unlikely to resolve the inherent tension between them. We decided the best way to make a decision would be with the feedback of developers, using the proposals in real code. Given Babel's role in the community, we decided to introduce all three of the above proposals into the pipeline operator plugin.</p><p>Because these proposals parse slightly differently, support needs to be added to <code>@babel/parser</code> (formerly <code>babylon</code>), and the parser needs to be configured based on which proposal is its current parse target. The pipeline operator plugin itself thus needs the <code>"proposal"</code> option, both to configure babylon as well as its own transformation.</p><p>We were working under a compressed timeline for this, as we needed to introduce any breaking changes to babel, <code>@babel/parser</code>, as well as the pipeline proposal plugin before babel@7 left beta. We also wanted the plugin to be able to eventually default to whichever of the proposals get accepted, so the configuration option becomes obsolete.</p><p>Given these two constraints, we opted to introduce this new configuration option and make it required, forcing users to decide which proposal they want to use in their project. Once a particular proposal gets accepted as the canonical behavior of the pipeline operator, we'll deprecate the <code>"proposal"</code> option and make the default whichever gets accepted, and the rejected proposals will be removed in the following major version.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="get-involved">Get Involved<a href="#get-involved" class="hash-link" aria-label="Direct link to Get Involved" title="Direct link to Get Involved">​</a></h2><p>If you're interested in getting involved in the pipeline proposal, all the conversations are public and you  find them in the <a href="https://github.com/tc39/proposal-pipeline-operator/" target="_blank" rel="noopener noreferrer">pipeline operator repository</a>. You can also check out the <a href="https://docs.google.com/presentation/d/1eFFRK1wLIazIuK0F6fY974OIDvvWXS890XAMB59PUBA/edit#slide=id.p" target="_blank" rel="noopener noreferrer">presentation from the last TC39 meeting</a>. Lastly, you can find <a href="https://twitter.com/jamesdigioia" target="_blank" rel="noopener noreferrer">James DiGioia</a>, <a href="https://twitter.com/__jschoi" target="_blank" rel="noopener noreferrer">J. S. Choi</a>, or <a href="https://twitter.com/littledan" target="_blank" rel="noopener noreferrer">Daniel Ehrenberg</a> on Twitter.</p><p>But most importantly, once the work is complete, try out the pipeline operator in your own projects! We're also working on adding options to the <a href="https://babeljs.io/repl/" target="_blank" rel="noopener noreferrer">repl</a>, so you'll be able to try out the code there as well. We need feedback and real code in order for this to be useful, so we'd love to hear from you. Tweet us at <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a> to let us know.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Announcing Babel's New Partnership with trivago!]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/07/16/announcing-babels-new-partnership-with-trivago</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/07/16/announcing-babels-new-partnership-with-trivago</guid>
            <pubDate>Mon, 16 Jul 2018 12:30:00 GMT</pubDate>
            <description><![CDATA[We are happy to announce a new partnership with trivago, the hotel search website.]]></description>
            <content:encoded><![CDATA[<p>We are happy to announce a new partnership with <a href="https://www.trivago.com/" target="_blank" rel="noopener noreferrer">trivago</a>, the hotel search website.</p><p>They've committed to fund our community with $2,000 per month, for a total of $24,000 per year!</p><p>trivago is famous for their TV ads ("Hotel? trivago!") but also recognized for their substantial financial support for the <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">Webpack</a> community. They have a <a href="https://tech.trivago.com/opensource/" target="_blank" rel="noopener noreferrer">track record of supporting Open Source communities</a> without interfering with their work so we were very excited when they got in touch to offer their support for Babel.</p><p>Just as it is for many projects and companies all over the world, <a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a> is a key technology for trivago’s applications. It enables high productivity from using the modern JavaScript language while still shipping compatible code for their users running older browsers like IE11. Internally, they utilize around a dozen custom Babel plugins and their own JavaScript framework, <a href="https://melody.js.org" target="_blank" rel="noopener noreferrer">Melody</a> also heavily relies on Babel to do its magic.</p><p>In addition to those immediate benefits, Babel has a very concrete impact on the future of the ECMAScript specification and the shape of the language itself due to its unique place in the ecosystem for implementing proposals in the TC39 process as early as Stage 0.</p><p>This new partnership with trivago brings us one step closer toward reaching our goal of having full-time maintainers working on Babel, but we're still not there yet and will continue to try to find additional partners that want to help us reach a sustainable level of funding. We also desire to have the capacity to spend more time on programs like <a href="https://twitter.com/left_pad/status/988019997023920128" target="_blank" rel="noopener noreferrer">RGSoC</a> and mentoring new contributors/companies to get involved.</p><p>If you're working at a company that is using Babel, consider advocating a partnership with us to your supervisor. Webpack recently spoke to <a href="https://twitter.com/pgotthardt" target="_blank" rel="noopener noreferrer">Patrick Gotthardt</a>, our contact at trivago, about <a href="https://medium.com/webpack/trivago-sponsors-webpack-for-second-year-bfe6ca2f0702" target="_blank" rel="noopener noreferrer">their experience</a> with investing in their community and he shared a lot of good reasons for why they're doing it at such a large scale.</p><p>As a community, we need the funding not just to maintain Babel in its current state but to support our efforts in working with TC39, the ECMA committee responsible for defining the future of the JavaScript language and the JavaScript package ecosystem. This includes both attending the bi-monthly meetings and just helping to implement all the new proposals and work towards bringing them to a stable, well-thought out state. This is a community effort that is mostly being done by a couple of volunteers: with the help of the ecosystem of companies that use the tool we can make the future of JavaScript amazing.</p><p>We hope that the new partnership with trivago ($24,000) as well as our already existing partnerships with Adobe ($12,000), Facebook ($10,000), the AMP Project ($9,600), Coinbase/Webflow ($5,500) and many other companies will encourage even more <a href="https://babeljs.io/users" target="_blank" rel="noopener noreferrer">companies who rely on Babel</a> to also form a partnership with our community and to help us reach our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">goals</a> of funding more full time developers not just to support the project itself but the community and language at large.</p><p>Please join us in moving JavaScript forward!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[On Consuming (and Publishing) ES2015+ Packages]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages</link>
            <guid>https://paion-data.github.io/babel-website/blog/2018/06/26/on-consuming-and-publishing-es2015+-packages</guid>
            <pubDate>Tue, 26 Jun 2018 12:00:00 GMT</pubDate>
            <description><![CDATA[For those of us that need to support older browsers, we run a compiler like Babel over application code. But that's not all of the code that we ship to browsers; there's also the code in our node_modules.]]></description>
            <content:encoded><![CDATA[<p>For those of us that need to support older browsers, we run a compiler like Babel over application code. But that's not all of the code that we ship to browsers; there's also the code in our <code>node_modules</code>.</p><p>Can we make compiling our dependencies not just possible, but normal?</p><p>The ability to compile dependencies is an enabling feature request for the whole ecosystem. Starting with some of the changes we made in Babel v7 to make selective dependency compilation possible, we hope to see it standardized moving forward.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="assumptions">Assumptions<a href="#assumptions" class="hash-link" aria-label="Direct link to Assumptions" title="Direct link to Assumptions">​</a></h2><ul><li>We ship to modern browsers that support ES2015+ <a href="https://kangax.github.io/compat-table/es6/" target="_blank" rel="noopener noreferrer">natively</a> (don't have to support IE) or are able to send multiple kinds of bundles (i.e. <a href="https://philipwalton.com/articles/deploying-es2015-code-in-production-today/" target="_blank" rel="noopener noreferrer">by using <code>&lt;script type="module"&gt;</code> and <code>&lt;script nomodule&gt;</code></a> or ).</li><li>Our dependencies actually publish ES2015+ instead of the current baseline of ES5/ES3.</li><li>The future baseline shouldn't be fixed at ES2015, but is a changing target.</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="why">Why<a href="#why" class="hash-link" aria-label="Direct link to Why" title="Direct link to Why">​</a></h2><p>Why is compiling dependencies (as opposed to just compiling our own code) desirable in the first place?</p><ul><li>To have the freedom to make the tradeoffs of where code is able to run (vs. the library).</li><li>To ship less code to users, since JavaScript has a <a href="https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e" target="_blank" rel="noopener noreferrer">cost</a>.</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-ephemeral-javascript-runtime">The Ephemeral JavaScript Runtime<a href="#the-ephemeral-javascript-runtime" class="hash-link" aria-label="Direct link to The Ephemeral JavaScript Runtime" title="Direct link to The Ephemeral JavaScript Runtime">​</a></h2><p>The argument for why compiling dependencies would be helpful is the same for why Babel <a href="https://github.com/babel/babel/pull/3476" target="_blank" rel="noopener noreferrer">eventually</a> introduced <a href="https://babeljs.io/docs/en/next/babel-preset-env.html" target="_blank" rel="noopener noreferrer"><code>@babel/preset-env</code></a>. We saw that developers would eventually want to move past only compiling to ES5.</p><p>Babel used to be <a href="https://babeljs.io/blog/2017/10/05/babel-turns-three" target="_blank" rel="noopener noreferrer"><code>6to5</code></a>, since it only converted from ES2015 (known as ES6 back then) to ES5. Back then, the browser support for ES2015 was almost non-existent, so the idea of a JavaScript compiler was both novel and useful: we could write modern code, and have it work for all of our users.</p><p>But what about the browser runtimes themselves? Because evergreen browsers will eventually catch up to the standard (as they have with ES2015), creating <code>preset-env</code> helps Babel and the community align with both the browsers and TC39 itself. If we only compiled to ES5, no one would ever run native code in the browsers.</p><p>The real difference is realizing that there will <em>always</em> be a sliding window of support:</p><ul><li>Application code (our supported environments)</li><li>Browsers (Chrome, Firefox, Edge, Safari)</li><li>Babel (the abstraction layer)</li><li>TC39/ECMAScript proposals (and Babel implementations)</li></ul><p>Thus, the need isn't just for <code>6to5</code> to be renamed to Babel because it compiles to <code>7to5</code>, but for Babel to change the implicit assumption it only targets ES5. With <code>@babel/preset-env</code>, we are able to write the latest JavaScript and target whichever browser/environment!</p><p>Using Babel and <code>preset-env</code> helps us keep up with that constantly changing sliding window. However, even if we use it, it's currently used only for <em>our application code</em>, and not for our code’s dependencies.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="who-owns-our-dependencies">Who Owns Our Dependencies?<a href="#who-owns-our-dependencies" class="hash-link" aria-label="Direct link to Who Owns Our Dependencies?" title="Direct link to Who Owns Our Dependencies?">​</a></h2><p>Because we have control over our own code, we are able to take advantage of <code>preset-env</code>: both by writing in ES2015+ and targeting ES2015+ browsers.</p><p>This isn't necessarily the case for our dependencies; in order to get the same benefits as compiling our code we may need to make some changes.</p><p>Is it as straightforward as just running Babel over <code>node_modules</code>?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="current-complexities-in-compiling-dependencies">Current Complexities in Compiling Dependencies<a href="#current-complexities-in-compiling-dependencies" class="hash-link" aria-label="Direct link to Current Complexities in Compiling Dependencies" title="Direct link to Current Complexities in Compiling Dependencies">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="compiler-complexity">Compiler Complexity<a href="#compiler-complexity" class="hash-link" aria-label="Direct link to Compiler Complexity" title="Direct link to Compiler Complexity">​</a></h3><p>Although it shouldn't deter us from making this possible, we should be aware that compiling dependencies does increase the surface area of issues and complexity, especially for Babel itself.</p><ul><li>Compilers are no different than other programs and have bugs.</li><li>Not every dependency needs to be compiled, and compiling more files does mean a slower build.</li><li><code>preset-env</code> itself could have bugs because we use <a href="https://kangax.github.io/compat-table/es6/" target="_blank" rel="noopener noreferrer"><code>compat-table</code></a> for our data vs. <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">Test262</a> (the official test suite).</li><li>Browsers themselves can have issues with running native ES2015+ code vs. ES5.</li><li>There is still a question of determining what is "supported": see <a href="https://github.com/babel/babel-preset-env/issues/54" target="_blank" rel="noopener noreferrer">babel/babel-preset-env#54</a> for an example of an edge case. Does it pass the test just because it parses or has partial support?</li></ul><h4 class="anchor anchorWithStickyNavbar_JmGV" id="specific-issues-in-babel-v6">Specific Issues in Babel v6<a href="#specific-issues-in-babel-v6" class="hash-link" aria-label="Direct link to Specific Issues in Babel v6" title="Direct link to Specific Issues in Babel v6">​</a></h4><p>Running a <code>script</code> as a <code>module</code> either causes a <code>SyntaxError</code>, new runtime errors, or unexpected behavior due to the <a href="https://developers.google.com/web/fundamentals/primers/modules#intro" target="_blank" rel="noopener noreferrer">differences in semantics</a> between classic scripts and modules.</p><p>Babel v6 viewed every file as a <code>module</code> and thus in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noopener noreferrer">"strict mode"</a>.</p><blockquote><p>One could argue this is actually a good thing, since everyone using Babel is opting in to strict mode by default 🙂.</p></blockquote><p>Running Babel with a conventional setup on all our <code>node_modules</code> may cause issues with code that is a <code>script</code> such as a jQuery plugin.</p><p>An example of an issue is how <a href="https://github.com/babel/babel/issues/7636" target="_blank" rel="noopener noreferrer"><code>this</code> gets converted to <code>undefined</code></a>.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Input</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">$</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// …</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">jQuery</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Output</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token string" style="color:#718c00">"use strict"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">$</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// …</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token punctuation">.</span><span class="token property-access">jQuery</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This was <a href="https://github.com/babel/babel/pull/6280" target="_blank" rel="noopener noreferrer">changed in v7</a> so that it won't auto-inject the <code>"use strict"</code> directive unless the source file is a <code>module</code>.</p><p>It was also not in Babel's original scope to compile dependencies: we actually got issue reports that people would accidentally do it, making the build slower. There is a lot of defaults and documentation in the tooling that purposely disable compiling <code>node_modules</code>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="using-non-standard-syntax">Using Non-Standard Syntax<a href="#using-non-standard-syntax" class="hash-link" aria-label="Direct link to Using Non-Standard Syntax" title="Direct link to Using Non-Standard Syntax">​</a></h3><p>There are many issues with <em>shipping</em> uncompiled proposal syntax (this post was inspired by <a href="https://twitter.com/dan_abramov/status/1009179550134296577" target="_blank" rel="noopener noreferrer">Dan's concern</a> about this).</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="staging-process">Staging Process<a href="#staging-process" class="hash-link" aria-label="Direct link to Staging Process" title="Direct link to Staging Process">​</a></h4><p>The <a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">TC39 staging process</a> does not always move forward: a proposal can move to any point in the process: even moving backwards from Stage 3 to Stage 2 as was the case with Numeric Separators (<code>1_000</code>),  dropped entirely (<code>Object.observe()</code>, and others we may have forgotten 😁), or just stall like function bind (<code>a::b</code>) or decorators until recently.</p><ul><li>Summary of the Stages: Stage 0 has no criteria and means the proposal is just an idea, Stage 1 is accepting that the problem is worth solving, Stage 2 is about describing a solution in spec text, Stage 3 means the specific solution is thought out, and Stage 4 means that it is ready for inclusion in the spec with tests, multiple browser implementations, and in-the-field experience.</li></ul><h4 class="anchor anchorWithStickyNavbar_JmGV" id="using-proposals">Using Proposals<a href="#using-proposals" class="hash-link" aria-label="Direct link to Using Proposals" title="Direct link to Using Proposals">​</a></h4><blockquote class="twitter-tweet" data-lang="en"><p lang="und" dir="ltr"><a href="https://t.co/femUb4vgxh" target="_blank" rel="noopener noreferrer">pic.twitter.com/femUb4vgxh</a></p>— Rach Smith 🌈 (@rachsmithtweets) <a href="https://twitter.com/rachsmithtweets/status/892478598765887488?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">August 1, 2017</a></blockquote><p>We already recommend that people should be careful when using proposals lower than Stage 3, let alone publishing them.</p><p>But only telling people not to use Stage X goes against the whole purpose of Babel in the first place. A big reason why proposals gain improvements and move forward are because of the feedback the committee gets from real-world usage (whether in production or not) based on using it via Babel.</p><p>There is certainly a balance to be had here: we don't want to scare people away from using new syntax (that is a hard sell 😂), but we also don't want people to get the idea that "once it's in Babel, the syntax is official or immutable". Ideally people look into the purpose of a proposal and make the tradeoffs for their use case.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="removing-the-stage-presets-in-v7">Removing the Stage Presets in v7<a href="#removing-the-stage-presets-in-v7" class="hash-link" aria-label="Direct link to Removing the Stage Presets in v7" title="Direct link to Removing the Stage Presets in v7">​</a></h4><p>Even though one of the most common things people do is use the Stage 0 preset, we plan to remove the stage presets in v7. We thought at first it would be convenient, that people would make their own unofficial ones anyway, or it might help with "JavaScript fatigue". It seems to cause more of an issue: people continue to copy/paste configs without understanding what goes into a preset in the first place.</p><p>After all, seeing <code>"stage-0"</code> says nothing. My hope is that in making the decision to use proposal plugins explicit, people will have to learn what non-standard syntax they are opting into. More intentionally, this should lead to a better understanding of not just Babel but of JavaScript as a language and its development instead of just its usage.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="publishing-non-standard-syntax">Publishing Non-standard Syntax<a href="#publishing-non-standard-syntax" class="hash-link" aria-label="Direct link to Publishing Non-standard Syntax" title="Direct link to Publishing Non-standard Syntax">​</a></h3><p>As a library author, publishing non-standard syntax is setting our users up for possible inconsistencies, refactoring, and breakage of their projects. Because a TC39 proposal (even at Stage 3) has a possibility of changing, it means we will inevitability have to change the library code. A "new" proposal doesn't mean the idea is fixed or certain but rather that we collectively want to explore the solution space.</p><p>At least if we ship the compiled version, it will still work, and the library maintainer can change the output so that it compiles into code that works the same as before. Shipping the uncompiled version means that anyone consuming a package needs to have a build step to use it and needs to have the same configuration of Babel as us. This is in the same bucket as using TS/JSX/Flow: we wouldn't expect consumers to configure the same compiler environment just because we used them.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="conflating-javascript-modules-and-es2015">Conflating JavaScript Modules and ES2015+<a href="#conflating-javascript-modules-and-es2015" class="hash-link" aria-label="Direct link to Conflating JavaScript Modules and ES2015+" title="Direct link to Conflating JavaScript Modules and ES2015+">​</a></h3><p>When we write <code>import foo from "foo"</code> or <code>require("foo")</code> and <code>foo</code> doesn't have an <code>index.js</code>, it resolves to the <code>main</code> field in the <code>package.json</code> of the module.</p><p>Some tools like Rollup/webpack also read from another field called <code>module</code> (previously <code>jsnext:main</code>). It uses this to instead resolve to the JS Module file.</p><ul><li>An example with <a href="https://github.com/reactjs/redux" target="_blank" rel="noopener noreferrer"><code>redux</code></a></li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// redux package.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"main"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"lib/redux.js"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ES5 + Common JS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"module"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"es/redux.js"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ES5 + JS Modules</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This was introduced so that users could consume JS Modules (ESM).</p><p>However, the sole intention of this field is ESM, not anything else. The <a href="https://github.com/rollup/rollup/wiki/pkg.module#wait-it-just-means-import-and-export--not-other-future-javascript-features" target="_blank" rel="noopener noreferrer">Rollup docs</a> specify that the <code>module</code> field makes it clear that it's not intended for future JavaScript syntax.</p><p>Despite this warning, package authors invariably conflate the use of ES modules with the JavaScript language level they authored it in.</p><p>As such, we may need another way to signal the language level.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="non-scalable-solutions">Non-scalable Solutions?<a href="#non-scalable-solutions" class="hash-link" aria-label="Direct link to Non-scalable Solutions?" title="Direct link to Non-scalable Solutions?">​</a></h4><p>A common suggestion is for libraries to start publishing ES2015 under another field like <code>es2015</code>, e.g. <code>"es2015": "es2015/package.mjs"</code>.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// @angular/core package.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"main"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./bundles/core.umd.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"module"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./fesm5/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"es2015"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./fesm2015/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"esm5"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./esm5/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"esm2015"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./esm2015/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"fesm5"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./fesm5/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"fesm2015"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./fesm2015/core.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This works for ES2015, but it begs the question of what we should do about ES2016? Are we supposed to create a new folder for each year and a new field in <code>package.json</code>? That seems unsustainable, and will continue to produce larger <code>node_modules</code>.</p><blockquote><p>This was an issue with Babel itself: we had intended to continue to publish yearly presets (<code>preset-es2015</code>, <code>preset-es2016</code>..) until we realized that <code>preset-env</code> would remove that need.</p></blockquote><p>Publishing it based on specific environments/syntax would seem to be just as untenable as the amount of combinations only increases (<code>"ie-11-arrow-functions"</code>).</p><p>What about distributing just the source itself? That may have similar problems if we used non-standard syntax as mentioned earlier.</p><p>Having a <code>esnext</code> field may not be entirely helpful either. The "latest" version of JavaScript changes depending on the point in time we authored the code.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="dependencies-may-not-publish-es2015">Dependencies May Not Publish ES2015+<a href="#dependencies-may-not-publish-es2015" class="hash-link" aria-label="Direct link to Dependencies May Not Publish ES2015+" title="Direct link to Dependencies May Not Publish ES2015+">​</a></h3><p>This effort will only be standard if it becomes straightforward to apply as a library author. It will be hard to argue for the significance of this change if both new and popular libraries aren't able to ship the latest syntax.</p><p>Due to the complexity and tooling setup, it may be difficult for projects to publish ES2015+/ESM. This is probably the biggest issue to get right, and adding more documentation just isn't enough.</p><p>For Babel, we may need to add some feature requests to <code>@babel/cli</code> to make this easier, and maybe make the <code>babel</code> package do this by default? Or we should integrate better with tools like @developit's <a href="https://github.com/developit/microbundle" target="_blank" rel="noopener noreferrer">microbundle</a>.</p><p>And how do we deal with polyfills (this will be an upcoming post)? What would it look like for a library author (or the user) to not to have to think about polyfills?</p><p>With all that said, how does Babel help with all this?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="how-babel-v7-helps">How Babel v7 Helps<a href="#how-babel-v7-helps" class="hash-link" aria-label="Direct link to How Babel v7 Helps" title="Direct link to How Babel v7 Helps">​</a></h2><p>As we've discussed, compiling dependencies in Babel v6 can be pretty painful. Babel v7 will address some of these pain points.</p><p>One issue is around configuration lookup. Babel currently runs per file, so when compiling a file, it tries to find the closest config (<a href="https://babeljs.io/docs/en/next/babelrc" target="_blank" rel="noopener noreferrer"><code>.babelrc</code></a>) to know what to compile against. It keeps looking up the directory tree if it doesn't find it in the current folder.</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">project</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">└── .babelrc // closest config for a.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">└── a.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">└── node_modules</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    └── package</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        └── .babelrc // closest config for b.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        └── b.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We made a <a href="https://github.com/babel/babel/pull/7358" target="_blank" rel="noopener noreferrer">few changes</a>:</p><ul><li>One is to stop lookup at the package boundary (stop when we find a <code>package.json</code>). This makes sure Babel won't try to load a config file outside the app, the most surprising being when it finds one in the home directory.</li><li>If we use a monorepo, we may want to have a <code>.babelrc</code> per-package that extends some other central config.</li><li>Babel itself is a monorepo, so instead we are using the new <code>babel.config.js</code> which allows us to resolve all files to that config (no more lookup).</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="selective-compilation-with-overrides">Selective Compilation with <code>"overrides"</code><a href="#selective-compilation-with-overrides" class="hash-link" aria-label="Direct link to selective-compilation-with-overrides" title="Direct link to selective-compilation-with-overrides">​</a></h3><p>We added an <a href="https://github.com/babel/babel/pull/7091" target="_blank" rel="noopener noreferrer"><code>"overrides"</code></a> option which allows us to basically create a new config for any set of file paths.</p><blockquote><p>This allows every config object to specify a <code>test</code>/<code>include</code>/<code>exclude</code> field, just like you might do for Webpack. Each item allows an item, or array of items that can be a <code>string</code>, <code>RegExp</code>, or <code>function</code>.</p></blockquote><p>This allows us to have a single config for our whole app: maybe we want to compile our server JavaScript code differently than the client code (as well as compile some package(s) in <code>node_modules</code>).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// babel.config.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'@babel/preset-env'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">targets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">node</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'current'</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">overrides</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"./client-code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./node_modules/package-a"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'@babel/preset-env'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token literal-property property">targets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"chrome"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"60"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="recommendations-to-discuss">Recommendations to Discuss<a href="#recommendations-to-discuss" class="hash-link" aria-label="Direct link to Recommendations to Discuss" title="Direct link to Recommendations to Discuss">​</a></h2><p>We should shift our fixed view of publishing JavaScript to one that keeps up with the latest standard.</p><p>We should continue to publish ES5/CJS under <code>main</code> for backwards compatibility with current tooling but also publish a version compiled down to latest syntax (no experimental proposals) under a new key we can standardize on like <code>main-es</code>. (I don't believe <code>module</code> should be that key since it was intended only for JS Modules).</p><blockquote><p>Maybe we should decide on another key in <code>package.json</code>, maybe <code>"es"</code>? Reminds me of the poll I made for <a href="https://twitter.com/left_pad/status/758429846594850816" target="_blank" rel="noopener noreferrer">babel-preset-latest</a>.</p></blockquote><p>Compiling dependencies isn't just something for one project/company to take advantage of: it requires a push by the whole community to move forward. Even though this effort will be natural, it might require some sort of standardization: we can implement a set of criteria for how libraries can opt-in to publishing ES2015+ and verify this via CI/tooling/npm itself.</p><p>Documentation needs to updated to mention the benefits of compiling <code>node_modules</code>, how to do so for the library authors, and how to consume it in bundlers/compilers.</p><p>And with Babel 7, consumers can more safely use <code>preset-env</code> and opt-in to running on <code>node_modules</code> with new config options like <code>overrides</code>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="lets-do-this">Let's Do This!<a href="#lets-do-this" class="hash-link" aria-label="Direct link to Let's Do This!" title="Direct link to Let's Do This!">​</a></h2><p>Compiling JavaScript shouldn't be just about the specific ES2015/ES5 distinction, whether it's for our app or our dependencies! Hopefully this is an encouraging call to action re-starting conversations around using ES2015+ published dependencies more first-class.</p><p>This post goes into some of the ways Babel should help with this effort, but we'll need everyone's help to change the ecosystem: more education, more opt-in published packages, and better tooling.</p><hr><blockquote><p>Thanks to the <a href="https://twitter.com/left_pad/status/1010280464840617984" target="_blank" rel="noopener noreferrer">many</a> folks who offered to review this post including <a href="https://twitter.com/chrisdarroch" target="_blank" rel="noopener noreferrer">@chrisdarroch</a>, <a href="https://twitter.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>, <a href="https://twitter.com/mathias" target="_blank" rel="noopener noreferrer">@mathias</a>, <a href="https://twitter.com/betaorbust" target="_blank" rel="noopener noreferrer">@betaorbust</a>, <a href="https://twitter.com/_developit" target="_blank" rel="noopener noreferrer">@_developit</a>, <a href="https://twitter.com/jdalton" target="_blank" rel="noopener noreferrer">@jdalton</a>, <a href="https://twitter.com/bonsaistudio" target="_blank" rel="noopener noreferrer">@bonsaistudio</a>.</p></blockquote><script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nearing the 7.0 Release]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/12/27/nearing-the-7.0-release</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/12/27/nearing-the-7.0-release</guid>
            <pubDate>Wed, 27 Dec 2017 21:00:00 GMT</pubDate>
            <description><![CDATA[Check out Planning for 7.0 for the last updates throughout the 7.0 pre-releases. If something isn't clear in this post let me know!]]></description>
            <content:encoded><![CDATA[<blockquote><p>Check out <a href="https://babeljs.io/blog/2017/09/12/planning-for-7.0" target="_blank" rel="noopener noreferrer">Planning for 7.0</a> for the last updates throughout the 7.0 pre-releases. If something isn't clear in this post let me know!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="project-updates">Project Updates<a href="#project-updates" class="hash-link" aria-label="Direct link to Project Updates" title="Direct link to Project Updates">​</a></h2><ul><li>We started a new <a href="https://babeljs.io/docs/community/videos/" target="_blank" rel="noopener noreferrer">videos page</a>! We created this for people wanting to learn more about how Babel works and to help others contribute back. This page contains videos of conference talks on Babel and related concepts from team members and people in the community (you can send a PR if you have done a talk like this as well).</li></ul><p><a href="https://babeljs.io/docs/community/videos/" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://i.imgur.com/DkBEsfo.png" alt="videos" class="img_SS3x"></a></p><ul><li>We created a new <a href="https://babeljs.io/team" target="_blank" rel="noopener noreferrer">team page</a> as well! We will be updating this page in the future with more information about what people work on and why they are involved. For such a large project, there are many ways to get involved and help out.</li></ul><p><a href="https://babeljs.io/team" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://i.imgur.com/YcWgRwf.png" alt="team" class="img_SS3x"></a></p><ul><li>Babel turned 3 years old on <a href="https://babeljs.io/blog/2017/10/05/babel-turns-three" target="_blank" rel="noopener noreferrer">September 28, 2017</a>!</li><li>Daniel <a href="https://twitter.com/left_pad/status/926096965565370369" target="_blank" rel="noopener noreferrer">moved</a> <code>babel/babylon</code> and <code>babel/babel-preset-env</code> into the main Babel monorepo, <a href="https://github.com/babel/babel" target="_blank" rel="noopener noreferrer">babel/babel</a>, and this includes all git history, labels, issues.</li><li>We received a <a href="https://twitter.com/left_pad/status/923696620935421953" target="_blank" rel="noopener noreferrer">$1k/month donation</a> from Facebook Open Source!<ul><li>This the highest monthly donation we have gotten since the start (next highest is $100/month).</li><li>In the meantime, we will use our funds to meet in person and to send people to TC39 meetings. These meetings are every 2 months around the world.</li><li>If a company wants to specifically sponsor something, we can create separate issues to track. This was previously difficult because we had to pay out of pocket, or we had to find a conference on the same week to speak at to help cover expenses.</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="how-you-can-help">How you can help!<a href="#how-you-can-help" class="hash-link" aria-label="Direct link to How you can help!" title="Direct link to How you can help!">​</a></h3><p>If your company would like to <strong>give back</strong> by supporting a fundamental part of JavaScript development and it's future, consider donating to our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>. You can also donate developer time to help maintain the project.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="1-help-maintain-the-project-developer-time-at-work">#1 Help Maintain the Project (developer time at work)<a href="#1-help-maintain-the-project-developer-time-at-work" class="hash-link" aria-label="Direct link to #1 Help Maintain the Project (developer time at work)" title="Direct link to #1 Help Maintain the Project (developer time at work)">​</a></h4><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Engineer: There's a thing in SQL Server Enterprise blocking us<br>Company: Let's set up a call next week with them an ongoing discussion to resolve it next quarter<br><br>Engineer: There's a thing we need in babel, can I spent 2 days with a PR for it<br>Company: lol no it's their job <a href="https://t.co/icgaoJ0dTe" target="_blank" rel="noopener noreferrer">https://t.co/icgaoJ0dTe</a></p>— Shiya (@ShiyaLuo) <a href="https://twitter.com/ShiyaLuo/status/931230821976907776?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">November 16, 2017</a></blockquote><p>The best thing we can get on this project are people committed to helping out with the project given the massive amount of work/responsibility it takes. Again, <a href="https://dev.to/hzoo/im-the-maintainer-of-babel-ask-me-anything-282/comments/1k6d" target="_blank" rel="noopener noreferrer">I never felt ready</a> to be a maintainer but somehow stumbled upon it but I'm just one person, and our team is just a few people.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="2-fund-development">#2 Fund development<a href="#2-fund-development" class="hash-link" aria-label="Direct link to #2 Fund development" title="Direct link to #2 Fund development">​</a></h4><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Company: "We'd like to use SQL Server Enterprise"<br>MS: "That'll be a quarter million dollars + $20K/month"<br>Company: "Ok!"<br>...<br>Company: "We'd like to use Babel"<br>Babel: "Ok! npm i babel --save"<br>Company: "Cool"<br>Babel: "Would you like to help contribute financially?"<br>Company: "lol no"</p>— Adam Rackis (@AdamRackis) <a href="https://twitter.com/AdamRackis/status/931195056479965185?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">November 16, 2017</a></blockquote><p>We are definitely looking to be able to fund people on the team to work full-time. Logan in particular left his job a while ago and is using our current funds to work on Babel part time at the moment!</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="3-contribute-in-other-ways-">#3 Contribute in other ways 😊<a href="#3-contribute-in-other-ways-" class="hash-link" aria-label="Direct link to #3 Contribute in other ways 😊" title="Direct link to #3 Contribute in other ways 😊">​</a></h4><p>For example, <a href="https://twitter.com/angustweets" target="_blank" rel="noopener noreferrer">Angus</a> made us an <a href="https://medium.com/@angustweets/hallelujah-in-praise-of-babel-977020010fad" target="_blank" rel="noopener noreferrer">official song</a>!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="upgrading">Upgrading<a href="#upgrading" class="hash-link" aria-label="Direct link to Upgrading" title="Direct link to Upgrading">​</a></h3><p>We will also be working on a upgrade tool that will help <a href="https://github.com/babel/notes/issues/44" target="_blank" rel="noopener noreferrer">rewrite your package.json/.babelrc files</a> and more. Ideally this means it would modify any necessary version number changes, package renames, and config changes.</p><p>Please reach out to help and to post issues when trying to update! This is a great opportunity to get involved and to help the ecosystem update!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="summary-of-the-previous-post">Summary of the <a href="https://babeljs.io/blog/2017/09/12/planning-for-7.0" target="_blank" rel="noopener noreferrer">previous post</a><a href="#summary-of-the-previous-post" class="hash-link" aria-label="Direct link to summary-of-the-previous-post" title="Direct link to summary-of-the-previous-post">​</a></h3><ul><li>Dropped Node 0.10/0.12/5 support.</li><li>Updated <a href="https://github.com/babel/proposals/issues" target="_blank" rel="noopener noreferrer">TC39 proposals</a><ul><li>Numeric Separator: <code>1_000</code></li><li>Optional Chaining Operator: <code>a?.b</code></li><li><code>import.meta</code> (parsable)</li><li>Optional Catch Binding: <code>try { a } catch {}</code></li><li>BigInt (parsable): <code>2n</code></li><li>Split export extensions into <code>export-default-from</code> and <code>export-ns-form</code></li></ul></li><li><code>.babelrc.js</code> support (a config using JavaScript instead of JSON)</li><li>Added a new Typescript Preset + separated the React/Flow presets<ul><li>Added <a href="https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html" target="_blank" rel="noopener noreferrer">JSX Fragment Support</a> and various Flow updates</li></ul></li><li>Removed the internal <code>babel-runtime</code> dependency for smaller size</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="newly-updated-tc39-proposals">Newly Updated TC39 Proposals<a href="#newly-updated-tc39-proposals" class="hash-link" aria-label="Direct link to Newly Updated TC39 Proposals" title="Direct link to Newly Updated TC39 Proposals">​</a></h3><ul><li>Pipeline Operator: <code>a |&gt; b</code></li><li>Throw Expressions: <code>() =&gt; throw 'hi'</code></li><li>Nullish Coalescing Operator: <code>a ?? b</code></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deprecated-yearly-presets-eg-babel-preset-es20xx">Deprecated Yearly Presets (e.g. babel-preset-es20xx)<a href="#deprecated-yearly-presets-eg-babel-preset-es20xx" class="hash-link" aria-label="Direct link to Deprecated Yearly Presets (e.g. babel-preset-es20xx)" title="Direct link to Deprecated Yearly Presets (e.g. babel-preset-es20xx)">​</a></h3><p>TL;DR: use <code>babel-preset-env</code>.</p><p>What's better than you having to decide which Babel preset to use? Having it done for you, automatically!</p><p>Even though the amount of work that goes into maintaining the lists of data is humongous — again, why we need help — it solves multiple issues. It makes sure users are up to date with the spec. It means less configuration/package confusion. It means an easier upgrade path. And it means less issues about what is what.</p><p><code>babel-preset-env</code> is actually a pretty <em>old</em> preset that replaces every other syntax preset that you will need (es2015, es2016, es2017, es20xx, latest, etc...).</p><p><a href="https://npm-stat.com/charts.html?package=babel-preset-env&amp;package=babel-preset-es2015&amp;package=babel-preset-es2016&amp;package=babel-preset-es2017&amp;package=babel-preset-latest&amp;from=2016-11-21&amp;to=2017-11-21" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://i.imgur.com/nNKKFcp.png" alt="npm presets" class="img_SS3x"></a></p><p>It compiles the latest yearly release of JavaScript (whatever is in Stage 4) which replaces all the old presets. But it also has the ability to compile according to target environments you specify: whether that is for development mode, like the latest version of a browser, or for multiple builds, like a version for IE, and then another version for evergreen browsers.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="not-removing-the-stage-presets-babel-preset-stage-x"><del>Not removing the Stage presets (babel-preset-stage-x)</del><a href="#not-removing-the-stage-presets-babel-preset-stage-x" class="hash-link" aria-label="Direct link to not-removing-the-stage-presets-babel-preset-stage-x" title="Direct link to not-removing-the-stage-presets-babel-preset-stage-x">​</a></h3><p>EDIT: We removed them, explained <a href="https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets" target="_blank" rel="noopener noreferrer">here</a></p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Frustration level if we remove the Stage presets in Babel? (in favor explicitly requiring proposal plugins since they aren't JavaScript yet)</p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/873242704364306433?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">June 9, 2017</a></blockquote><p>We can always keep it up to date, and maybe we just need to determine a better system than what these presets are currently.</p><p>Right now, stage presets are literally just a list of plugins that we manually update after TC39 meetings. To make this manageable, we need to allow major version bumps for these "unstable" packages. Part of the reason for this is because the community will re-create these packages anyway, so we might as well do it from an official package and then have the ability to provide better messaging, etc.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="renames-scoped-packages-babelx">Renames: Scoped Packages (<code>@babel/x</code>)<a href="#renames-scoped-packages-babelx" class="hash-link" aria-label="Direct link to renames-scoped-packages-babelx" title="Direct link to renames-scoped-packages-babelx">​</a></h3><p>Here is a poll I did almost a year ago:</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Thoughts on <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a> using npm scoped packages for 7.0?</p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/821551189166878722" target="_blank" rel="noopener noreferrer">January 18, 2017</a></blockquote><p>Back then, not a lot of projects used scoped packages, so most people didn't even know they existed. You may also have had to pay for a npm org account back then, while now it's free (and supports non scoped packages, too). The issues with searching for scoped packages are solved and download counts work. The only thing left is that some 3rd party registries still don't support scoped packages, and I think we are at a point where it seems pretty unreasonable to wait on that.</p><p>If you want reasons why we prefer scoped packages:</p><ul><li>Naming is difficult: we won’t have to check if someone else decided to use our naming convention for their own plugin</li><li>Similarly, package squatting<ul><li>Sometimes people create <code>babel-preset-20xx</code> or some other package because it's funny, and then we have to make an issue/email to ask for it back.</li><li>People have a legit package, but it happens to be the same name as what we wanted to call it.
&nbsp;- People see that a new proposal is merging (like optional chaining, pipeline operator) and decide to fork and publish a version of it under the same name. Then, when we publish, it tell us the package was already published 🤔. Then, I have to find their email and email both them and npm support to get the package back and republish.</li></ul></li><li>What is an "official" package and what is a user/community package with the same name? We can get issue reports of people using misnamed or unofficial packages because they assumed it was part of Babel. One example of this was a report that <code>babel-env</code> was rewriting their <code>.babelrc</code> file, and it took them a while to realize it wasn't <code>babel-preset-env</code>.</li></ul><p>So, it seems obvious we should use scoped packages, and, if anything, we should have done it much earlier 🙂!</p><p>Examples of the scoped name change:</p><ul><li><code>babel-cli</code> -&gt; <code>@babel/cli</code></li><li><code>babel-core</code> -&gt; <code>@babel/core</code></li><li><code>babel-preset-env</code> -&gt; <code>@babel/preset-env</code></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="renames--proposal-">Renames: <code>-proposal-</code><a href="#renames--proposal-" class="hash-link" aria-label="Direct link to renames--proposal-" title="Direct link to renames--proposal-">​</a></h3><p>Any proposals will be named with <code>-proposal-</code> now to signify that they aren't officially in JavaScript yet.</p><p>So <code>@babel/plugin-transform-class-properties</code> becomes <code>@babel/plugin-proposal-class-properties</code>, and we would name it back once it gets into Stage 4.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="renames-drop-the-year-from-the-plugin-name">Renames: Drop the year from the plugin name<a href="#renames-drop-the-year-from-the-plugin-name" class="hash-link" aria-label="Direct link to Renames: Drop the year from the plugin name" title="Direct link to Renames: Drop the year from the plugin name">​</a></h3><p>Previous plugins had the year in the name, but it doesn't seem to be necessary now.</p><p>So <code>@babel/plugin-transform-es2015-classes</code> becomes <code>@babel/plugin-transform-classes</code>.</p><p>Since years were only the case for es3/es2015, we didn't change anything from es2016 or es2017. However, we are deprecating those presets in favor of preset-env, and, for the template literal revision, we just added it to the template literal transform for simplicity.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="peer-dependencies--integrations">Peer Dependencies + Integrations<a href="#peer-dependencies--integrations" class="hash-link" aria-label="Direct link to Peer Dependencies + Integrations" title="Direct link to Peer Dependencies + Integrations">​</a></h3><p>We are introducing a peer dependencies on <code>@babel/core</code> for all the plugins (<code>@babel/plugin-class-properties</code>), presets (<code>@babel/preset-env</code>), and top level packages (<code>@babel/cli</code>, <code>babel-loader</code>).</p><blockquote><p>peerDependencies are dependencies expected to be used by your code, as opposed to dependencies only used as an implementation detail.
— <a href="https://stackoverflow.com/a/34645112" target="_blank" rel="noopener noreferrer">Stijn de Witt via StackOverflow</a>.</p></blockquote><p><code>babel-loader</code> already had a <code>peerDependency</code> on <code>babel-core</code>, so this just changes it to <code>@babel/core</code>. This is just so that people weren't trying to install these packages on the wrong version of Babel.</p><p>For tools that already have a <code>peerDependency</code> on <code>babel-core</code> and aren't ready for a major bump (since changing the peer dependency is a breaking change), we have published a new version of <code>babel-core</code> to bridge the changes over with the new version <a href="https://github.com/babel/babel-bridge" target="_blank" rel="noopener noreferrer">babel-core@7.0.0-bridge.0</a>. For more information check out <a href="https://github.com/facebook/jest/pull/4557#issuecomment-344048628" target="_blank" rel="noopener noreferrer">this issue</a>.</p><p>Similarly, packages like <code>gulp-babel</code>, <code>rollup-plugin-babel</code>, etc, all used to have <code>babel-core</code> as a dependency. Now these will just have a <code>peerDependency</code> on <code>@babel/core</code>. This lets these packages not have to bump major versions when the <code>@babel/core</code> API hasn't changed.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5224-independent-publishing-of-experimental-packages"><a href="https://github.com/babel/babel/pull/5224" target="_blank" rel="noopener noreferrer">#5224</a> Independent Publishing of Experimental Packages<a href="#5224-independent-publishing-of-experimental-packages" class="hash-link" aria-label="Direct link to 5224-independent-publishing-of-experimental-packages" title="Direct link to 5224-independent-publishing-of-experimental-packages">​</a></h3><blockquote><p>I mention this in <a href="http://babeljs.io/blog/2016/12/07/the-state-of-babel" target="_blank" rel="noopener noreferrer">The State of Babel</a> in the <code>Versioning</code> section. <a href="https://github.com/babel/babylon/issues/275" target="_blank" rel="noopener noreferrer">Github Issue</a></p></blockquote><p>You might remember that after Babel 6, Babel became a set of npm packages with its own ecosystem of custom presets and plugins.</p><p>However since then, we have always used a "fixed/synchronized" versioning system (so that no package is on v7.0 or above). When we do a new release such as <code>v6.23.0</code> only packages that have updated code in the source are published with the new version while the rest of the packages are left as is. This mostly works in practice because we use <code>^</code> in our packages.</p><p>Unfortunately this kind of system requires that a major version be released for all packages once a single package needs it. This either means we make a lot small breaking changes (unnecessary), or we batch lots of breaking changes into a single release. Instead, we want to differentiate between the experimental packages (Stage 0, etc.) and everything else (es2015).</p><p>This means we intend to make major version bumps to any experimental proposal plugins when the spec changes rather than waiting to update all of Babel. So anything that is &lt; Stage 4 would be open to breaking changes in the form of major version bumps and same with the Stage presets themselves (if we don't drop them entirely).</p><p>This goes with our decision to change TC39 proposal plugins to use the <code>-proposal-</code> name. If the spec changes, we will do a major version bump to the plugin and the preset it belongs to (as opposed to just making a patch version which may break for people). Then, we will need to deprecate the old versions and setup an infrastructure to automatically update people so that everyone is up to date on what the spec will become (and so they don't get stuck on something, like we have with decorators).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="the-env-option-in-babelrc-is-not-being-deprecated">The <code>env</code> option in <code>.babelrc</code> is not being deprecated!<a href="#the-env-option-in-babelrc-is-not-being-deprecated" class="hash-link" aria-label="Direct link to the-env-option-in-babelrc-is-not-being-deprecated" title="Direct link to the-env-option-in-babelrc-is-not-being-deprecated">​</a></h3><p>Unlike in the <a href="https://babeljs.io/blog/2017/09/12/planning-for-7.0#deprecate-the-env-option-in-babelrc" target="_blank" rel="noopener noreferrer">last post</a>, we just fixed the merging behavior to be <a href="https://twitter.com/left_pad/status/936687774098444288" target="_blank" rel="noopener noreferrer">more consistent</a>.</p><p>The configuration in <code>env</code> is given higher priority than root config items, and instead of just being a weird approach of using both, plugins and presets now merge based on their identity, so you can do</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'env'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">modules</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">env</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">         </span><span class="token string" style="color:#718c00">'env'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>with <code>BABEL_ENV=test</code>, which would replace the root env config, with the one from test, which has no options.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="support-class-a-extends-array-oldest-caveat"><a href="https://twitter.com/left_pad/status/940723982638157829" target="_blank" rel="noopener noreferrer">Support <code>class A extends Array</code> (oldest caveat)</a><a href="#support-class-a-extends-array-oldest-caveat" class="hash-link" aria-label="Direct link to support-class-a-extends-array-oldest-caveat" title="Direct link to support-class-a-extends-array-oldest-caveat">​</a></h3><p>Babel will automatically wrap any native built-ins like <code>Array</code>, <code>Error</code>, <code>HTMLElement</code> etc so that doing this just works when compiling classes.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="speed">Speed<a href="#speed" class="hash-link" aria-label="Direct link to Speed" title="Direct link to Speed">​</a></h3><ul><li>Many <a href="https://twitter.com/rauchg/status/924349334346276864" target="_blank" rel="noopener noreferrer">fixes</a> from <a href="https://twitter.com/bmeurer" target="_blank" rel="noopener noreferrer">bmeurer</a> on the v8 team!</li><li>60% faster via the <a href="https://github.com/v8/web-tooling-benchmark" target="_blank" rel="noopener noreferrer">web-tooling-benchmark</a> <a href="https://twitter.com/left_pad/status/927554660508028929" target="_blank" rel="noopener noreferrer">https://twitter.com/left_pad/status/927554660508028929</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="preset-env-usebuiltins-usage">preset-env: <code>"useBuiltins": "usage"</code><a href="#preset-env-usebuiltins-usage" class="hash-link" aria-label="Direct link to preset-env-usebuiltins-usage" title="Direct link to preset-env-usebuiltins-usage">​</a></h3><p><code>babel-preset-env</code> introduced the idea of compiling syntax to different targets and via the <code>useBuiltIns</code> option, the ability to also only add polyfills that the targets don't support.</p><p>So with this option, something like:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-polyfill"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Can turn into</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.string.pad-start"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.string.pad-end"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// ...</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>if the target environment happens to support polyfills other than <code>padStart</code> or <code>padEnd</code>.</p><p>However in order to make that even better, we should only import polyfills that are "used" in the codebase itself. Why even import <code>padStart</code> if it's not even used in the code?</p><p><code>"useBuiltins": "usage"</code> is our first attempt to begin that idea. It does an import at the top of each file but only adds the import if it finds it used in the code. This approach means that we can import the minimum amount of polyfills necessary for the app (and only if the target environment doesn't support it).</p><p>So if you use <code>Promise</code> in your code, it will import it at the top of the file (if your target doesn't support it). Bundlers will dedupe the file if it's the same so this approach won't cause multiple polyfills to be imported.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es6.promise"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.array.includes"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">includes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">a</span><span class="token punctuation">.</span><span class="token property-access">includes</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>With type inference we can know if an instance method like <code>.includes</code> is for an array or not, and having a false positive is ok until that logic is better since it's still better than importing the whole polyfill like before.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="misc-updates">Misc Updates<a href="#misc-updates" class="hash-link" aria-label="Direct link to Misc Updates" title="Direct link to Misc Updates">​</a></h3><ul><li><a href="https://github.com/babel/babel/blob/main/packages/babel-template" target="_blank" rel="noopener noreferrer"><code>babel-template</code></a> is faster/easier to use</li><li><a href="https://github.com/facebook/regenerator" target="_blank" rel="noopener noreferrer">regenerator</a> was released under the <a href="https://twitter.com/left_pad/status/938825429955125248" target="_blank" rel="noopener noreferrer">MIT License</a> - it's the dependency used to compile generators/async</li><li>"lazy" option to the <code>modules-commonjs</code> plugin via <a href="https://github.com/babel/babel/pull/6952" target="_blank" rel="noopener noreferrer">#6952</a></li><li>You can now use <code>envName: "something"</code> in .babelrc or pass via cli <code>babel --envName=something</code> instead of having to use <code>process.env.BABEL_ENV</code> or <code>process.env.NODE_ENV</code></li><li><code>["transform-for-of", { "assumeArray": true }]</code> to make all for-of loops output as regular arrays</li><li>Exclude <code>transform-typeof-symbol</code> in loose mode for preset-env <a href="https://github.com/babel/babel/pull/6831" target="_blank" rel="noopener noreferrer">#6831</a></li><li><a href="https://twitter.com/left_pad/status/942859244759666691" target="_blank" rel="noopener noreferrer">Landed PR for better error messages with syntax errors</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="todos-before-release">Todos Before Release<a href="#todos-before-release" class="hash-link" aria-label="Direct link to Todos Before Release" title="Direct link to Todos Before Release">​</a></h3><ul><li><a href="https://github.com/babel/babel/issues/6766" target="_blank" rel="noopener noreferrer">Handle <code>.babelrc</code> lookup</a> (want this done before first RC release)</li><li><a href="https://github.com/babel/babel/pull/7091" target="_blank" rel="noopener noreferrer">"overrides" support</a>: different config based on glob pattern</li><li>Caching and invalidation logic in babel-core.</li><li>Either implement or have plan in place for versioning and handling polyfills independently from helpers, so we aren't explicitly tied to core-js 2 or 3, since people may have things that depend on one or the other and won't want to load both a lot of the time.</li><li>Either a <a href="https://github.com/babel/babel/pull/6107" target="_blank" rel="noopener noreferrer">working decorator implementation</a>, or functional legacy implementation, with clear path to land current spec behavior during 7.x's lifetime.</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="thanks">Thanks<a href="#thanks" class="hash-link" aria-label="Direct link to Thanks" title="Direct link to Thanks">​</a></h3><p>Shoutout to our team of volunteers: <a href="https://twitter.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan</a> who has been really pushing hard to fix a lot of our core issues regarding configs and more and the one doing all of that hard work, <a href="https://twitter.com/existentialism" target="_blank" rel="noopener noreferrer">Brian</a> who has been taking over maintenance of a lot of preset-env work and just whatever I was doing before 😛, and <a href="https://twitter.com/TschinderDaniel" target="_blank" rel="noopener noreferrer">Daniel</a> who has always been stepping in when we need the help whether it be maintaining babel-loader or helping move the babylon/babel-preset-env repo's over. And same with <a href="https://twitter.com/NicoloRibaudo" target="_blank" rel="noopener noreferrer">Nicolo</a>, <a href="https://twitter.com/svensauleau" target="_blank" rel="noopener noreferrer">Sven</a>, <a href="https://twitter.com/yavorsky_" target="_blank" rel="noopener noreferrer">Artem</a>, and <a href="https://twitter.com/jessidhia" target="_blank" rel="noopener noreferrer">Jessica</a> for stepping up in the last year to help out.</p><p>I'm really looking forward to a release (I'm tired too; it's almost been a year 😝), but also don't want to rush anything just because! Been a lot of ups and downs throughout this release but I've certainly learned a lot and I'm sure the rest of the team has as well.</p><p>And if I've learned anything at all this year, I should really heed this advice rather than just write about it.</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">"Before you go maintaining anything else, maintain your own body first" - Mom 😸</p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/944313617243099136?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">December 22, 2017</a></blockquote><blockquote><p>Also thanks to <a href="https://twitter.com/kosamari" target="_blank" rel="noopener noreferrer">Mariko</a> for the <a href="https://twitter.com/kosamari/status/944272286055530496" target="_blank" rel="noopener noreferrer">light push</a> to actually finish this post (2 months in the making)</p></blockquote><script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel Turns Three]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/10/05/babel-turns-three</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/10/05/babel-turns-three</guid>
            <pubDate>Thu, 05 Oct 2017 13:00:00 GMT</pubDate>
            <description><![CDATA[Happy Birthday Babel! 🎂 (Sept 28)]]></description>
            <content:encoded><![CDATA[<blockquote><p>Happy Birthday Babel! 🎂 (Sept 28)</p></blockquote><p>Babel has really come a long way since <a href="https://github.com/kittens" target="_blank" rel="noopener noreferrer">Sebastian</a> started the project only 3 years ago! A while back it was renamed from <a href="https://babeljs.io/blog/2015/02/15/not-born-to-die" target="_blank" rel="noopener noreferrer">6to5 to Babel</a>; for good reason as it has significantly contributed to the use of ES2015+ by <a href="https://babeljs.io/users" target="_blank" rel="noopener noreferrer">many companies</a>, libraries, and developers alike.</p><p>And now it's even helping move the language forward by supporting the proposals coming from TC39. We're looking forward to being able to participate more in <a href="https://twitter.com/loganfsmyth/status/844252727186149377" target="_blank" rel="noopener noreferrer">TC39 meetings</a>.</p><p>We're really happy to see that the project itself has grown so much since <a href="https://babeljs.io/blog/2016/09/28/6.16.0" target="_blank" rel="noopener noreferrer">last year</a>!</p><blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">According to BigQuery there's 110,000 websites using <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a>. (At least using the classes plugin). <a href="https://t.co/kOxlLsFKPX" target="_blank" rel="noopener noreferrer">pic.twitter.com/kOxlLsFKPX</a></p>— Sebastian McKenzie (@sebmck) <a href="https://twitter.com/sebmck/status/911336494824132608?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">September 22, 2017</a></blockquote><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><ul><li>The number of contributors to our main repository has doubled from 200 to 400</li><li>We've doubled the amount of <a href="https://www.npmjs.com/package/babel-core" target="_blank" rel="noopener noreferrer">downloads to <code>babel-core</code></a> (4.5m/month to 11m/month)</li><li>Grew from 4500 to 7500 users on our <a href="https://babeljs.slack.com" target="_blank" rel="noopener noreferrer">Slack community</a> (sign up <a href="http://slack.babeljs.io/" target="_blank" rel="noopener noreferrer">here</a>)</li><li>Up to 2000 community <code>babel-plugin</code> packages <a href="https://www.npmjs.com/search?q=babel-plugin" target="_blank" rel="noopener noreferrer">on npm</a> and over 1000 community <code>babel-preset</code> packages <a href="https://www.npmjs.com/search?q=babel-preset" target="_blank" rel="noopener noreferrer">on npm</a></li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="sustainability">Sustainability<a href="#sustainability" class="hash-link" aria-label="Direct link to Sustainability" title="Direct link to Sustainability">​</a></h2><p>By every metric above, it seems like Babel is doing really well, and it is! A lot of that is just the result of network effects and people coming to using Babel as the norm for compiling JavaScript. However the project isn't just about the code, but everyone involved in it.</p><p>I tried to give some talks this year to explain not just <a href="https://github.com/hzoo/so-how-does-babel-even-work" target="_blank" rel="noopener noreferrer">how Babel works</a> but what it's like to <a href="https://github.com/hzoo/maintaining-an-oss-project" target="_blank" rel="noopener noreferrer">maintain an Open Source project</a>. Hopefully I was able to get across the current state of things and start a dialog as many others have done about how we are to improve upon how we view OSS, not just for <a href="https://github.com/hzoo/maintainer-heal-thyself" target="_blank" rel="noopener noreferrer">maintainers themselves</a> but the culture around it.</p><p>We've accomplished a lot, but we have to continue to work in multiple ways to make it better by funding/sponsoring maintainers, adding new contributors, and working with the community that we are a part of.</p><ul><li>Participated in <a href="https://babeljs.io/blog/2017/08/09/babel-and-summer-of-code" target="_blank" rel="noopener noreferrer">Summer of Code</a>, both Google and Rails Girls, with 4 awesome interns: <a href="https://twitter.com/peeyFTW" target="_blank" rel="noopener noreferrer">Peeyush</a>, <a href="https://twitter.com/qantas94heavy" target="_blank" rel="noopener noreferrer">Karl</a>, <a href="https://twitter.com/KaraMarck" target="_blank" rel="noopener noreferrer">Kara</a>, and <a href="https://twitter.com/EmmaMDeacon" target="_blank" rel="noopener noreferrer">Emma</a>!</li><li>Support from my team at <a href="https://twitter.com/Behance" target="_blank" rel="noopener noreferrer">Behance</a> to work on Babel for <a href="https://twitter.com/left_pad/status/867714802386444288" target="_blank" rel="noopener noreferrer">half my time at work</a>!</li><li><a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a> on the <a href="https://twitter.com/AMPhtml/status/883373137517092864" target="_blank" rel="noopener noreferrer">AMP team at Google</a> is able to get 20% time at work to work on Babel as well as attend TC39 meetings (Google is a committee member)!</li><li>We started an <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a> with the hopes of funding maintainers in the future!</li><li>An amazing team of maintainers: some of us just did an <a href="https://hashnode.com/ama/with-babel-team-cj7awmk5e00ij54wu6onnyc5w" target="_blank" rel="noopener noreferrer">AMA</a>. (<a href="https://github.com/babel/babel#team" target="_blank" rel="noopener noreferrer">the team section</a> needs to be updated)</li></ul><blockquote><p>Reach out to us if your company would like to contribute on work time: please join us in making Babel a sustainable project for everyone, not just as users but for our community!</p></blockquote><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="whats-been-happening">What's been happening?<a href="#whats-been-happening" class="hash-link" aria-label="Direct link to What's been happening?" title="Direct link to What's been happening?">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deploying-native-es2015-is-discussed-more-with-babel-preset-env">Deploying native ES2015+ is discussed more with <a href="https://github.com/babel/babel-preset-env" target="_blank" rel="noopener noreferrer">babel-preset-env</a><a href="#deploying-native-es2015-is-discussed-more-with-babel-preset-env" class="hash-link" aria-label="Direct link to deploying-native-es2015-is-discussed-more-with-babel-preset-env" title="Direct link to deploying-native-es2015-is-discussed-more-with-babel-preset-env">​</a></h3><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">New article: How to deploy ES2015+ code in production today (without transpiling to ES5) and why you should! <a href="https://t.co/jBMA8aKpyN" target="_blank" rel="noopener noreferrer">https://t.co/jBMA8aKpyN</a> <a href="https://t.co/nmV4kXEKiI" target="_blank" rel="noopener noreferrer">pic.twitter.com/nmV4kXEKiI</a></p>— Phil Walton (@philwalton) <a href="https://twitter.com/philwalton/status/908082461799616512?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">September 13, 2017</a></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-babeljsiorepl-in-react-thanks-to-brian_d_vaughn-and-pull-request-urls-thanks-to-daniel15">New <a href="https://babeljs.io/repl" target="_blank" rel="noopener noreferrer">babeljs.io/repl</a> in React thanks to <a href="https://twitter.com/brian_d_vaughn" target="_blank" rel="noopener noreferrer">@brian_d_vaughn</a> and pull request urls thanks to <a href="https://twitter.com/Daniel15" target="_blank" rel="noopener noreferrer">@Daniel15</a>.<a href="#new-babeljsiorepl-in-react-thanks-to-brian_d_vaughn-and-pull-request-urls-thanks-to-daniel15" class="hash-link" aria-label="Direct link to new-babeljsiorepl-in-react-thanks-to-brian_d_vaughn-and-pull-request-urls-thanks-to-daniel15" title="Direct link to new-babeljsiorepl-in-react-thanks-to-brian_d_vaughn-and-pull-request-urls-thanks-to-daniel15">​</a></h3><blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">Give the new, experimental Babel REPL a try!<a href="https://t.co/OAbvglsdoG" target="_blank" rel="noopener noreferrer">https://t.co/OAbvglsdoG</a> <a href="https://t.co/rVnNIOazvs" target="_blank" rel="noopener noreferrer">pic.twitter.com/rVnNIOazvs</a></p>— Brian Vaughn (@brian_d_vaughn) <a href="https://twitter.com/brian_d_vaughn/status/898215894639423488?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">August 17, 2017</a></blockquote><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Soon, pull requests to <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a> will link to the REPL to make it easy to test! Here's a sneak peek: <a href="https://t.co/6rzvjlnb1w" target="_blank" rel="noopener noreferrer">https://t.co/6rzvjlnb1w</a> cc <a href="https://twitter.com/left_pad?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@left_pad</a> <a href="https://t.co/NH7PiFYKaG" target="_blank" rel="noopener noreferrer">pic.twitter.com/NH7PiFYKaG</a></p>— Daniel Lo Nigro (@Daniel15) <a href="https://twitter.com/Daniel15/status/896511729185603584?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">August 12, 2017</a></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="test262-tests-against-babylon-and-soon-babel-by-jugglinmike"><a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">test262</a> tests against Babylon (and soon Babel) by <a href="https://twitter.com/JugglinMike" target="_blank" rel="noopener noreferrer">@JugglinMike</a><a href="#test262-tests-against-babylon-and-soon-babel-by-jugglinmike" class="hash-link" aria-label="Direct link to test262-tests-against-babylon-and-soon-babel-by-jugglinmike" title="Direct link to test262-tests-against-babylon-and-soon-babel-by-jugglinmike">​</a></h3><blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr">So looks like that's ~97.76% passing (55k tests!!) <a href="https://t.co/KlGeFM2a1r" target="_blank" rel="noopener noreferrer">pic.twitter.com/KlGeFM2a1r</a></p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/894370297264189440?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">August 7, 2017</a></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="increased-participation-on-tc39">Increased participation on TC39<a href="#increased-participation-on-tc39" class="hash-link" aria-label="Direct link to Increased participation on TC39" title="Direct link to Increased participation on TC39">​</a></h3><blockquote><p>So many committee members having been helping a lot with github issues, tracking/implementing/reviewing proposals, discussions in slack, and more: <a href="https://twitter.com/rwaldron" target="_blank" rel="noopener noreferrer">@rwaldron</a>, <a href="https://twitter.com/ljharb" target="_blank" rel="noopener noreferrer">@ljharb</a>, <a href="https://twitter.com/littledan" target="_blank" rel="noopener noreferrer">@littledan</a>, <a href="https://twitter.com/mathias" target="_blank" rel="noopener noreferrer">@mathias</a>, <a href="https://twitter.com/benjamn" target="_blank" rel="noopener noreferrer">@benjamn</a>, <a href="https://twitter.com/leobalter" target="_blank" rel="noopener noreferrer">@leobalter</a>, <a href="https://twitter.com/_gsathya" target="_blank" rel="noopener noreferrer">@gsathya</a>, <a href="https://twitter.com/the_gisenberg" target="_blank" rel="noopener noreferrer">@gisenberg</a>, <a href="https://twitter.com/kentcdodds" target="_blank" rel="noopener noreferrer">@kentcdodds</a>, <a href="https://twitter.com/bakkoting" target="_blank" rel="noopener noreferrer">@bakkoting</a></p></blockquote><blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">✍️ Updates from the Sept TC39 meeting this week for what we need to update in <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a> (links go to separate issues) <a href="https://t.co/4nvusNIeJX" target="_blank" rel="noopener noreferrer">https://t.co/4nvusNIeJX</a> <a href="https://t.co/RP444BvZnO" target="_blank" rel="noopener noreferrer">pic.twitter.com/RP444BvZnO</a></p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/914118289181298688?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">September 30, 2017</a></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-7-is-soon">Babel 7 is soon!<a href="#babel-7-is-soon" class="hash-link" aria-label="Direct link to Babel 7 is soon!" title="Direct link to Babel 7 is soon!">​</a></h3><blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">Just published a post for the first <a href="https://twitter.com/babeljs?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">@babeljs</a> 7.0 beta release <a href="https://t.co/DnEfR4e8qb" target="_blank" rel="noopener noreferrer">https://t.co/DnEfR4e8qb</a></p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/907607921290301440?ref_src=twsrc%5Etfw" target="_blank" rel="noopener noreferrer">September 12, 2017</a></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="future-ideas">Future Ideas<a href="#future-ideas" class="hash-link" aria-label="Direct link to Future Ideas" title="Direct link to Future Ideas">​</a></h2><ul><li>Providing a <a href="https://github.com/babel/notes/issues/34" target="_blank" rel="noopener noreferrer">"metadata" plugin</a> for users to grep for patterns in their codebases. This will be useful to figure out how people are using certain proposals (similar to what was done in <a href="https://github.com/tc39/proposal-optional-chaining/issues/17" target="_blank" rel="noopener noreferrer">tc39/proposal-optional-chaining#17</a> for CoffeeScript regarding <code>?.</code>)</li><li>Better codemod support for all proposals: ideally each proposal plugin should come with a plugin to remove/compile the proposal away if a proposal gets dropped or the syntax changes. Similarly, we can provide a codemod to automatically convert syntax over to the new proposal as well (ideally using <a href="https://lebab.io" target="_blank" rel="noopener noreferrer">lebab</a>)</li><li>Figuring out tooling for publishing ES2015+ and how that interacts with polyfills, transform-runtime, babel-preset-env, npm, .mjs</li><li>Fixing plugin ordering, traversal edge cases, <code>babel</code> package, <code>babel --init</code>, performance/size stats.</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="thanks">Thanks<a href="#thanks" class="hash-link" aria-label="Direct link to Thanks" title="Direct link to Thanks">​</a></h2><p>Again, thanks to all for using and contributing back to Babel! We're looking forward to what's in store for the project!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Planning for 7.0]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/09/12/planning-for-7.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/09/12/planning-for-7.0</guid>
            <pubDate>Tue, 12 Sep 2017 10:00:00 GMT</pubDate>
            <description><![CDATA[If you didn't know already, we're planning on releasing a 7.0 version soon 🙌 ! Work on it actually started back in February, when I just wanted to make a release to drop Node 0.10/0.12 support and remove babel-runtime and various other code. And since then, we've done releases up to alpha.20.]]></description>
            <content:encoded><![CDATA[<p>If you didn't know already, we're planning on releasing a 7.0 version soon 🙌 ! Work on it actually started back in February, when I just wanted to make a release to drop Node 0.10/0.12 support and remove babel-runtime and various other code. And since then, we've done releases up to <code>alpha.20</code>.</p><blockquote><p>We're going to update this post throughout the beta releases</p></blockquote><p>Since we're still just a volunteer project, it's been difficult for most of the team to stay focused and motivated to make all these changes and continue to maintain a project that so many companies, bootcamps, and tools rely on so much. But in the meantime we've made a lot of progress: <a href="https://github.com/babel/notes" target="_blank" rel="noopener noreferrer">weekly meetings/notes</a>, participating as invited guests at TC39 for the last few meetings, facilitating in both <a href="https://railsgirlssummerofcode.org/" target="_blank" rel="noopener noreferrer">RGSoC</a> and <a href="https://summerofcode.withgoogle.com" target="_blank" rel="noopener noreferrer">GSoC</a>, and creating an <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="upgrading">Upgrading<a href="#upgrading" class="hash-link" aria-label="Direct link to Upgrading" title="Direct link to Upgrading">​</a></h2><blockquote><p>Upgrading for most projects should be as simple as updating your <code>package.json</code> deps to <code>7.0.0-beta.0</code>. For the whole time we've been working on 7.0, we've been using it in Babel itself (so meta) and at my workplace at Behance.</p></blockquote><blockquote><p>We will be pinning all dependencies to exact versions until the official release.</p></blockquote><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">{</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  "devDependencies": {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    "babel-cli": "7.0.0-beta.0"</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Specific packages:</p><details class="details_IpIu alert alert--info details_jERq" data-collapsed="true"><summary>Details</summary><div><div class="collapsibleContent_Fd2D">babel packages in the monorepo should all be &gt;= 7.0.0-beta.0 <br>babel-preset-env should be at least 2.0.0-beta.0 <br>babel-eslint can be &gt;= 8.0.0 <br>babel-loader should be &gt;= 7.0.0 (out of beta since it uses babel-core as a peerDependency) <br>grunt-babel can be &gt;= 7.0.0 <br>gulp-babel can be &gt;= 7.0.0 <br>rollup-plugin-babel can be &gt;= 3.0.2</div></div></details><hr><p>Please check out our <a href="https://babeljs.io/blog/2017/03/01/upgrade-to-babel-7" target="_blank" rel="noopener noreferrer">upgrade guide</a> and other guide specifically for <a href="https://babeljs.io/blog/2017/03/01/upgrade-to-babel-7-for-tool-authors" target="_blank" rel="noopener noreferrer">tool authors</a> which we will also be updating as necessary.</p><p>I'd like to go over some notable changes for our first beta release (it's still a lot <em>smaller</em> in scope in terms of breaking changes than the previous 6.0 release).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="re-iterating-project-goals">Re-iterating Project Goals<a href="#re-iterating-project-goals" class="hash-link" aria-label="Direct link to Re-iterating Project Goals" title="Direct link to Re-iterating Project Goals">​</a></h2><p>Before we go into that, I just want to repeat again what the purpose of Babel is.</p><p>Since Babel has been renamed from 6to5, browsers have been implementing more of the spec and users are more comfortable with using the latest syntax/build tooling. It shouldn't be surprisingly however that Babel's goals haven't changed much.</p><p>Our two goals are hand in hand:</p><ol><li>Help developers transform new syntax into backwards compatible code (abstract browser support away)</li><li>Be a bridge to help TC39 get feedback on new ECMAScript proposals and for the community to have a say in the future of the language.</li></ol><p>Thus, I think it's an understatement to say that Babel is a vital part of the JavaScript community (almost 10 million downloads a month of <code>babel-core</code>) and sorely needs its support. (The only talks I've tried to give are about this point: <a href="https://github.com/hzoo/maintaining-an-oss-project" target="_blank" rel="noopener noreferrer">JSConf EU</a>, <a href="https://github.com/hzoo/so-how-does-babel-even-work" target="_blank" rel="noopener noreferrer">React Rally</a>, <a href="https://github.com/hzoo/role-of-babel-in-js" target="_blank" rel="noopener noreferrer">TC39</a>). I said recently: "What happens if Babel dies"? What happens when the current group of people interested in this project get bored/burned out/move on to other things? (What if it's already happened?). Are we going to do something about it? I don't want to just ask you to help us, you already are <em>us</em> as users of the project.</p><p>Ok then, let's talk about some changes!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="drop-support-for-unmaintained-node-versions-010-012-5-4315">Drop Support for Unmaintained Node Versions: 0.10, 0.12, 5 (<a href="https://github.com/babel/babel/issues/4315" target="_blank" rel="noopener noreferrer">#4315</a>)<a href="#drop-support-for-unmaintained-node-versions-010-012-5-4315" class="hash-link" aria-label="Direct link to drop-support-for-unmaintained-node-versions-010-012-5-4315" title="Direct link to drop-support-for-unmaintained-node-versions-010-012-5-4315">​</a></h2><p>Progress in OSS projects often comes at the cost of upgrading for its users. Because of this, we've always been hesitant in making the choice to introduce a major version bump/breaking changes. By dropping unsupported versions of Node, we can not only make a number of improvements to the codebase, but also upgrade dependencies and tools (ESLint, Yarn, Jest, Lerna, etc).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-proposal-updatesspec-compliancy">👓 Proposal Updates/Spec Compliancy<a href="#-proposal-updatesspec-compliancy" class="hash-link" aria-label="Direct link to 👓 Proposal Updates/Spec Compliancy" title="Direct link to 👓 Proposal Updates/Spec Compliancy">​</a></h2><blockquote><p>AKA the only things most of you care about 😅</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="philosophy-proposals-spec-loose-default-behavior">Philosophy (Proposals: spec, loose, default behavior)<a href="#philosophy-proposals-spec-loose-default-behavior" class="hash-link" aria-label="Direct link to Philosophy (Proposals: spec, loose, default behavior)" title="Direct link to Philosophy (Proposals: spec, loose, default behavior)">​</a></h3><p>We've created a new repo: <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">babel/proposals</a> to track our progress on the various <a href="https://github.com/tc39/proposals" target="_blank" rel="noopener noreferrer">TC39 Proposals</a> and meetings.</p><p>I also added a section about <a href="https://github.com/babel/proposals#when-does-babel-implement-new-features" target="_blank" rel="noopener noreferrer">how we accept new proposals</a>. Our basic thinking is that we will start accepting PRs for anything a TC39 champion is going to present (Stage 0). And we will update them (with your help!) when the spec changes.</p><p>Naturally, we will take the opportunity to be as spec compliant as possible (within reasonable speed, etc) as the default behavior. This means if you need a faster/smaller build, you should use the <code>loose</code> option which will purposely disregard certain spec changes like runtime checks and other edge cases. The reason why it is opt-in is because we expect you should know what you are doing, while others should be able to seamlessly upgrade <code>babel-preset-env</code> to use the native version of each syntax or stop using Babel entirely and have no issues.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-class-properties-from-stage-2">Stage 3: Class Properties (from Stage 2)<a href="#stage-3-class-properties-from-stage-2" class="hash-link" aria-label="Direct link to Stage 3: Class Properties (from Stage 2)" title="Direct link to Stage 3: Class Properties (from Stage 2)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-class-properties" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-class-properties</code></a>: the default behavior is now what was previously the "spec" option, which uses <code>Object.defineProperty</code> instead of simple assignment.</p></blockquote><blockquote><p>This currently has the effect of breaking the <a href="https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy" target="_blank" rel="noopener noreferrer">legacy decorators plugin</a> (which we made the "transform-decorators" plugin in 7.0) if you try to decorate a class property. You'll need to use the <code>loose</code> option to be compatible with the version of decorators in the transform until we release the Stage 2 decorators plugin.</p></blockquote><blockquote><p>Private fields are WIP: <a href="https://github.com/babel/babel/pull/6120" target="_blank" rel="noopener noreferrer">#6120</a></p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bork</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'foo'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'bar'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output (default)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bork</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"x"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'bar'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token maybe-class-name">Bork</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'foo'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output (loose mode)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bork</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'bar'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">Bork</span><span class="token punctuation">.</span><span class="token property-access">a</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'foo'</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-object-rest-spread-from-stage-2">Stage 3: Object Rest Spread (from Stage 2)<a href="#stage-3-object-rest-spread-from-stage-2" class="hash-link" aria-label="Direct link to Stage 3: Object Rest Spread (from Stage 2)" title="Direct link to Stage 3: Object Rest Spread (from Stage 2)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-object-rest-spread" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-object-rest-spread</code></a>: And now the plugin handles non-string keys (ex: Number/Symbol)</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Rest Properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> x</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">z </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">4</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// 1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">y</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// 2</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">z</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// { a: 3, b: 4 }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Spread Properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> n </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> x</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">z </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">n</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// { x: 1, y: 2, a: 3, b: 4 }</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Also disallowed</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token punctuation">{</span><span class="token plain"> x </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> obj</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token punctuation">[</span><span class="token plain"> y </span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> obj</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-optional-catch-binding-new">Stage 3: Optional Catch Binding (new)<a href="#stage-3-optional-catch-binding-new" class="hash-link" aria-label="Direct link to Stage 3: Optional Catch Binding (new)" title="Direct link to Stage 3: Optional Catch Binding (new)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-catch-binding" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-optional-catch-binding</code></a>: allow developers to use try/catch without creating an unused binding.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">doSomethingWhichDoesNotCareAboutTheValueThrown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">_unused</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">doSomethingWhichDoesNotCareAboutTheValueThrown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-unicode-property-regex-new">Stage 3: Unicode Property Regex (new)<a href="#stage-3-unicode-property-regex-new" class="hash-link" aria-label="Direct link to Stage 3: Unicode Property Regex (new)" title="Direct link to Stage 3: Unicode Property Regex (new)">​</a></h3><blockquote><p><a href="https://github.com/mathiasbynens/babel-plugin-transform-unicode-property-regex" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-unicode-property-regex</code></a>: compile Unicode property escapes (<code>\p{…}</code> and <code>\P{…}</code>) in Unicode regular expressions to ES5 or ES6 that works in today’s environments.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> regex </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">\p{ASCII_Hex_Digit}</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-flags" style="color:#3e999f">u</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> regex </span><span class="token operator">=</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">[0-9A-Fa-f]</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-bigint-new-unfinished">Stage 3: BigInt (new, unfinished)<a href="#stage-3-bigint-new-unfinished" class="hash-link" aria-label="Direct link to Stage 3: BigInt (new, unfinished)" title="Direct link to Stage 3: BigInt (new, unfinished)">​</a></h3><blockquote><p><code>babel-plugin-transform-bigint</code>: <a href="https://github.com/babel/babel/pull/6015" target="_blank" rel="noopener noreferrer">#6015</a>.
This won't be included in the Stage presets because it would be slow to wrap all operators.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">50000n</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">60n</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">babelCheckBinaryExpressions</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-check-binary-expressions"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">babelCheckBinaryExpressions</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">BigInt</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"50000"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">BigInt</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"60"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-3-dynamic-import-from-stage-2">Stage 3: Dynamic Import (from Stage 2)<a href="#stage-3-dynamic-import-from-stage-2" class="hash-link" aria-label="Direct link to Stage 3: Dynamic Import (from Stage 2)" title="Direct link to Stage 3: Dynamic Import (from Stage 2)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-syntax-dynamic-import" target="_blank" rel="noopener noreferrer"><code>babel-plugin-syntax-dynamic-import</code></a>: You only need to parse the syntax since tools like Webpack can handle the transformation in place of Babel.
There is also a <a href="https://github.com/airbnb/babel-plugin-dynamic-import-node" target="_blank" rel="noopener noreferrer">plugin for Node</a></p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> testModule </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'test-module'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-2-importmeta-syntax-only">Stage 2: <code>import.meta</code> (syntax only)<a href="#stage-2-importmeta-syntax-only" class="hash-link" aria-label="Direct link to stage-2-importmeta-syntax-only" title="Direct link to stage-2-importmeta-syntax-only">​</a></h3><blockquote><p>A meta property that is only syntactically valid in modules, meant for meta-information about the currently running module provided by the host environment.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> size </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">.</span><span class="token property-access">meta</span><span class="token punctuation">.</span><span class="token property-access">scriptElement</span><span class="token punctuation">.</span><span class="token property-access">dataset</span><span class="token punctuation">.</span><span class="token property-access">size</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">300</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-2-numeric-separators-new">Stage 2: Numeric Separators (new)<a href="#stage-2-numeric-separators-new" class="hash-link" aria-label="Direct link to Stage 2: Numeric Separators (new)" title="Direct link to Stage 2: Numeric Separators (new)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-numeric-separator" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-numeric-separator</code></a>: make numeric literals more readable by creating a visual separation (a <code>_</code>) between groups of digits.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">1_000_000_000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">0b1010_0001_1000_0101</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">0xA0_B0_C0</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">1000000000</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">0b1010000110000101</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">0xA0B0C0</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-2-decorators-from-stage-1-still-wip">Stage 2: Decorators (from Stage 1), still WIP<a href="#stage-2-decorators-from-stage-1-still-wip" class="hash-link" aria-label="Direct link to Stage 2: Decorators (from Stage 1), still WIP" title="Direct link to Stage 2: Decorators (from Stage 1), still WIP">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-decorators" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-decorators</code></a>: <a href="https://github.com/babel/babel/pull/6107" target="_blank" rel="noopener noreferrer">#6107</a></p></blockquote><p>Disallowed</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// no computed decorator keys</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@dec</span><span class="token punctuation">[</span><span class="token plain">foo</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// no parameter decorators (a separate proposal)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">@foo x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// no decorators on object methods</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> o </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @baz</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// decorator cannot be attached to the export</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@foo</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Valid</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// decorators with a call expression</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">@</span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'bar'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// decorators on computed methods</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @autobind</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain">method</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">arg</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// decorators on generator functions</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @deco</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">*</span><span class="token function" style="color:#4271ae">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// decorators with a member expression</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @a</span><span class="token punctuation">.</span><span class="token property-access">b</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">c</span><span class="token punctuation">(</span><span class="token plain">e</span><span class="token punctuation">,</span><span class="token plain"> f</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// exported decorator classes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> @foo </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Unsupported (WIP)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// decorated class properties</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">A</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @dec name </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-2-functionsent-new">Stage 2: <code>function.sent</code> (new)<a href="#stage-2-functionsent-new" class="hash-link" aria-label="Direct link to stage-2-functionsent-new" title="Direct link to stage-2-functionsent-new">​</a></h3><blockquote><p><a href="https://www.npmjs.com/package/babel-plugin-transform-function-sent" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-function-sent</code></a>: compile the <code>function.sent</code> meta property, used inside generator functions</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token operator">*</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Sent"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">.</span><span class="token property-access">sent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Yield"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> iterator </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">iterator</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">next</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Logs "Sent 1"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">iterator</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">next</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Logs "Yield 2"</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> generator </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_skipFirstGeneratorNext</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token operator">*</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> _functionSent </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Sent"</span><span class="token punctuation">,</span><span class="token plain"> _functionSent</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"Yield"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-2-export-ns-from">Stage 2: export-ns-from<a href="#stage-2-export-ns-from" class="hash-link" aria-label="Direct link to Stage 2: export-ns-from" title="Direct link to Stage 2: export-ns-from">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-export-namespace" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-export-namespace</code></a>: a shorthand to import/reexport a namespace. Split out from the old <code>transform-export-extensions</code> which combined this proposal with another</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports operator">*</span><span class="token exports"> </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> ns</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports operator">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#8959a8">as</span><span class="token imports"> ns</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports">ns</span><span class="token exports punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-1-export-default-from">Stage 1: export-default-from<a href="#stage-1-export-default-from" class="hash-link" aria-label="Direct link to Stage 1: export-default-from" title="Direct link to Stage 1: export-default-from">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-export-default" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-export-default</code></a>: a shorthand to import/reexport something. Split out from the old <code>transform-export-extensions</code> which combined this proposal with another</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> v </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">_v</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"module"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports"> _v </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> v </span><span class="token exports punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-1-optional-chaining-new">Stage 1: Optional Chaining (new)<a href="#stage-1-optional-chaining-new" class="hash-link" aria-label="Direct link to Stage 1: Optional Chaining (new)" title="Direct link to Stage 1: Optional Chaining (new)">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-optional-chaining" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-optional-chaining</code></a>: the operator (<code>?.</code>) allows you to handle properties of deeply nested objects without worrying about undefined intermediate objects.</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">a</span><span class="token operator">?.</span><span class="token plain">b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _a</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token plain">_a </span><span class="token operator">=</span><span class="token plain"> a</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">void</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> _a</span><span class="token punctuation">.</span><span class="token property-access">b</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="es2015-newtarget">ES2015: <code>new.target</code><a href="#es2015-newtarget" class="hash-link" aria-label="Direct link to es2015-newtarget" title="Direct link to es2015-newtarget">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/tree/main/packages/babel-plugin-transform-new-target" target="_blank" rel="noopener noreferrer"><code>babel-plugin-transform-new-target</code></a>: we never got around to implementing <code>new.target</code> support earlier, so now there is a plugin for it that will be included in the ES2015/env presets.</p></blockquote><p>Example</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// with a function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// =&gt; undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// =&gt; Foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// with classes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bar</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// =&gt; Foo</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// =&gt; Bar</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">new</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">new</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">constructor</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">void</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-new-feature">🚀 New Feature<a href="#-new-feature" class="hash-link" aria-label="Direct link to 🚀 New Feature" title="Direct link to 🚀 New Feature">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babelrcjs"><code>.babelrc.js</code><a href="#babelrcjs" class="hash-link" aria-label="Direct link to babelrcjs" title="Direct link to babelrcjs">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/issues/4630" target="_blank" rel="noopener noreferrer">babel/babel#4630</a></p></blockquote><p><code>*.js</code> configuration files are fairly common in the JavaScript ecosystem. ESLint and Webpack both allow for <code>.eslintrc.js</code> and <code>webpack.config.js</code> configuration files, respectively.</p><p>Writing configuration files in JavaScript allows for dynamic configuration, making it possible to write a single configuration file that can adapt to different environments programmatically.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> env </span><span class="token operator">=</span><span class="token plain"> process</span><span class="token punctuation">.</span><span class="token property-access">env</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">BABEL_ENV</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> process</span><span class="token punctuation">.</span><span class="token property-access">env</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">NODE_ENV</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> plugins </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">env </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'production'</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  plugins</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">push</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token plain">plugins</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"a-super-cool-babel-plugin"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> plugins </span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> env </span><span class="token operator">=</span><span class="token plain"> process</span><span class="token punctuation">.</span><span class="token property-access">env</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">BABEL_ENV</span><span class="token plain"> </span><span class="token operator">||</span><span class="token plain"> process</span><span class="token punctuation">.</span><span class="token property-access">env</span><span class="token punctuation">.</span><span class="token constant" style="color:#f5871f">NODE_ENV</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    env </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'production'</span><span class="token plain"> </span><span class="token operator">&amp;&amp;</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"another-super-cool-babel-plugin"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">filter</span><span class="token punctuation">(</span><span class="token known-class-name class-name" style="color:#eab700">Boolean</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This was previously done through the <code>env</code> configuration option, which is now deprecated. See <a href="#deprecate-the-env-option-in-babelrc">below</a> for more details.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="typescript">TypeScript<a href="#typescript" class="hash-link" aria-label="Direct link to TypeScript" title="Direct link to TypeScript">​</a></h3><p>You can now use <code>babel-preset-typescript</code> to allow Babel to strip types similar to how <code>babel-preset-flow</code> works!</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"typescript"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We're working on a guide for how to setup TypeScript and Babel with the TypeScript team, which should be finished before the official 7.0 release. TL;DR is that you setup TS with <code>--noEmit</code> or use it in the editor/watch mode so that you can use preset-env and other Babel plugins.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="pure-annotation-in-specific-transforms-for-minifiers">"Pure" Annotation in specific transforms for minifiers<a href="#pure-annotation-in-specific-transforms-for-minifiers" class="hash-link" aria-label="Direct link to &quot;Pure&quot; Annotation in specific transforms for minifiers" title="Direct link to &quot;Pure&quot; Annotation in specific transforms for minifiers">​</a></h3><p>After <a href="https://github.com/babel/babel/pull/6209" target="_blank" rel="noopener noreferrer">#6209</a>, ES6 classes that are transpiled will have a <code>/*#__PURE__*/</code> comment that minifiers like Uglify and babel-minify can use for dead code elimination. These annotations may expand to our helper functions as well.</p><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">m</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'a'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">/*#__PURE__*/</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token class-name" style="color:#eab700">C</span><span class="token punctuation">.</span><span class="token property-access">prototype</span><span class="token punctuation">.</span><span class="token method-variable function-variable method function property-access" style="color:#4271ae">m</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">m</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'a'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">C</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-other-breaking-changes">😎 Other Breaking Changes<a href="#-other-breaking-changes" class="hash-link" aria-label="Direct link to 😎 Other Breaking Changes" title="Direct link to 😎 Other Breaking Changes">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="removed-babel-preset-flow-from-babel-preset-react">Removed <code>babel-preset-flow</code> from <code>babel-preset-react</code><a href="#removed-babel-preset-flow-from-babel-preset-react" class="hash-link" aria-label="Direct link to removed-babel-preset-flow-from-babel-preset-react" title="Direct link to removed-babel-preset-flow-from-babel-preset-react">​</a></h3><p>This was important because we got a lot of complaints from users that weren't using any types/flow that they ended up writing invalid JS but there was no syntax error because they used the react preset.</p><p>Also we have the TypeScript preset now, so it didn't make sense to include <code>flow</code> in the react preset itself anymore.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="integrations">Integrations<a href="#integrations" class="hash-link" aria-label="Direct link to Integrations" title="Direct link to Integrations">​</a></h3><p>Packages like <code>grunt-babel</code>, <code>gulp-babel</code>, <code>rollup-plugin-babel</code>, etc all used to have <code>babel-core</code> as a dependency.</p><p>After v7, we plan to move <code>babel-core</code> to be a peerDependency like <code>babel-loader</code> has. This lets all these packages not have to bump major versions when the <code>babel-core</code> API hasn't changed. Thus they are already published as <code>7.0.0</code> since we don't expect any further changes to those packages.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="meta">Meta<a href="#meta" class="hash-link" aria-label="Direct link to Meta" title="Direct link to Meta">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="remove-babel-runtime-from-our-own-babel-dependencies-5218">Remove <code>babel-runtime</code> from our own Babel dependencies (<a href="https://github.com/babel/babel/pull/5218" target="_blank" rel="noopener noreferrer">#5218</a>)<a href="#remove-babel-runtime-from-our-own-babel-dependencies-5218" class="hash-link" aria-label="Direct link to remove-babel-runtime-from-our-own-babel-dependencies-5218" title="Direct link to remove-babel-runtime-from-our-own-babel-dependencies-5218">​</a></h3><p>Babel itself doesn't have that many external dependencies, but in 6.x <a href="https://github.com/babel/babel/blob/958f72ddc28e2f5d02adf44eadd2b1265dd0fa4d/packages/babel-plugin-transform-es2015-arrow-functions/package.json#L12" target="_blank" rel="noopener noreferrer">each package has a dependency on <code>babel-runtime</code></a> so that built-ins like Symbol, Map, Set, and others are available without needing a polyfill. By changing the minimum supported version of Node to v4 (where those built-ins are supported natively), we can drop the dependency entirely.</p><blockquote><p>This is an issue on npm 2 (we didn't recommended its use with Babel 6) and older yarn, but not npm 3 due to its deduping behavior.</p></blockquote><p>With <a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener noreferrer">Create React App</a> the size of the node_modules folder changed drastically when babel-runtime was hoisted.</p><ul><li><code>node_modules</code> for npm 3: ~120MB</li><li><code>node_modules</code> for Yarn (&lt;<code>0.21.0</code>): ~518MB</li><li><code>node_modules</code> for Yarn (&lt;<code>0.21.0</code>) with hoisted <code>babel-runtime</code>: ~157MB</li><li><code>node_modules</code> for Yarn + <a href="https://github.com/yarnpkg/yarn/pull/2676" target="_blank" rel="noopener noreferrer">PR #2676</a>: ~149MB (<a href="https://twitter.com/bestander_nz/status/833696202436784128" target="_blank" rel="noopener noreferrer">tweet</a>)</li></ul><p>So although this issue has been fixed "upstream" by using npm &gt;= 3/later Yarn, we can do our part by simply dropping our own dependency on <code>babel-runtime</code>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="independent-publishing-of-experimental-packages-5224">Independent Publishing of Experimental Packages (<a href="https://github.com/babel/babel/pull/5224" target="_blank" rel="noopener noreferrer">#5224</a>)<a href="#independent-publishing-of-experimental-packages-5224" class="hash-link" aria-label="Direct link to independent-publishing-of-experimental-packages-5224" title="Direct link to independent-publishing-of-experimental-packages-5224">​</a></h3><blockquote><p>I mention this in <a href="http://babeljs.io/blog/2016/12/07/the-state-of-babel" target="_blank" rel="noopener noreferrer">The State of Babel</a> in the <code>Versioning</code> section. <a href="https://github.com/babel/babylon/issues/275" target="_blank" rel="noopener noreferrer">Github Issue</a></p></blockquote><p>You might remember that after Babel 6, Babel became a set of npm packages with its own ecosystem of custom presets and plugins.</p><p>However since then, we've always used a "fixed/synchronized" versioning system (so that no package is on v7.0 or above). When we do a new release such as <code>v6.23.0</code> only packages that have updated code in the source are published with the new version while the rest of the packages are left as is. This mostly works in practice because we use <code>^</code> in our packages.</p><p>Unfortunately this kind of system requires that a major version be released for all packages once a single package needs it. This either means we make a lot small breaking changes (unnecessary) or we batch lots of breaking changes into a single release. Instead, we want to differentiate between the experimental packages (Stage 0, etc) and everything else (es2015).</p><p>This means that we intend to make major version bumps to any experimental proposal plugins when the spec changes rather than waiting to update all of Babel. So anything that is &lt; Stage 4 would be open to breaking changes in the form of major version bumps and same with the Stage presets themselves if we don't drop them entirely.</p><p>For example:</p><p>Say you are using preset-env (which keeps up to date and currently includes everything in es2015, es2016, es2017) + an experimental plugin. You also decide to use object-rest-spread because it's cool.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"env"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-object-rest-spread"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If the spec to an experimental proposal changes, we should be free to make a breaking change and make a major version bump for that plugin only. Because it only affects that plugin, it doesn't affect anything else and people are free to update when possible. We just want to make sure that users update to the latest version of any experimental proposal when possible and provide the tools to do so automatically if that is reasonable as well.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-possible-deprecations">💀 Possible Deprecations<a href="#-possible-deprecations" class="hash-link" aria-label="Direct link to 💀 Possible Deprecations" title="Direct link to 💀 Possible Deprecations">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deprecate-the-env-option-in-babelrc"><del>Deprecate the "env" option in <code>.babelrc</code></del><a href="#deprecate-the-env-option-in-babelrc" class="hash-link" aria-label="Direct link to deprecate-the-env-option-in-babelrc" title="Direct link to deprecate-the-env-option-in-babelrc">​</a></h3><blockquote><p><a href="https://github.com/babel/babel/issues/5276" target="_blank" rel="noopener noreferrer">babel/babel#5276</a>
EDIT: We changed the behavior to be more intuitive and did not remove it.</p></blockquote><p>The "env" configuration option (not to be confused with babel-preset-env) has been a source of confusion for our users as seen by the numerous issues reported.</p><p>The <a href="http://babeljs.io/docs/usage/babelrc/#env-option" target="_blank" rel="noopener noreferrer">current behavior</a> is to merge the config values into the top level values which isn't always intuitive such that developers end up putting nothing in the top level and just duplicating all the presets/plugins under separate envs.</p><p>To eliminate the confusion (and help our power users), we're considering dropping the env config option all together and recommending users use the proposed JS config format (see below).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deprecate-es20xx-presets-done">Deprecate ES20xx presets (done)<a href="#deprecate-es20xx-presets-done" class="hash-link" aria-label="Direct link to Deprecate ES20xx presets (done)" title="Direct link to Deprecate ES20xx presets (done)">​</a></h3><blockquote><p>We already deprecated preset-latest a while ago, and ES2016/ES2017 <a href="https://twitter.com/left_pad/status/897483806499885057" target="_blank" rel="noopener noreferrer">earlier</a>
It's annoying making a yearly preset (extra package/dependency, issues with npm package squatting unless we do scoped packages)</p></blockquote><p>Developers shouldn't even need to make the decision of what yearly preset to use? If we drop/deprecate these presets then everyone can use <a href="https://github.com/babel/babel-preset-env" target="_blank" rel="noopener noreferrer">babel-preset-env</a> instead which will already update as the spec changes.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-questions">🤔 Questions<a href="#-questions" class="hash-link" aria-label="Direct link to 🤔 Questions" title="Direct link to 🤔 Questions">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="deprecaterenameremove-stage-x-presets-done">Deprecate/Rename/Remove Stage X presets (done)<a href="#deprecaterenameremove-stage-x-presets-done" class="hash-link" aria-label="Direct link to Deprecate/Rename/Remove Stage X presets (done)" title="Direct link to Deprecate/Rename/Remove Stage X presets (done)">​</a></h3><blockquote><p>EDIT: we did this and we wrote a whole <a href="https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets" target="_blank" rel="noopener noreferrer">post</a> to explain it.</p></blockquote><p>Many in the community (and TC39) have expressed concerns over the Stage X presets. I believe I just added them to have an easy migration path from Babel 5 to Babel 6 (used to be a "stage" option).</p><p>While we want to have an easy to use tool, it turns out that many companies/developers use these "not yet JavaScript" presets all the time, and in production. "Stage 0" doesn't really set the same tone as <code>babel-preset-dont-use-this-stage-0</code>.</p><blockquote><p>Ariya just made an <a href="https://twitter.com/AriyaHidayat/status/833797322786025472" target="_blank" rel="noopener noreferrer">awesome poll</a> that explains what I'm talking about</p></blockquote><p>Developers don't actually know what features are in what version of JavaScript (and they shouldn't have to know). However it is a problem when we all start thinking that "features" that are actually still proposals are in the spec already.</p><p>Many open source projects (including Babel still 😝), tutorials, conference talks, etc all use <code>stage-0</code>. React promotes the use of JSX, class properties (now Stage 3), object rest/spread (now Stage 3) and we all believe that it's just JavaScript because Babel compiled it for them. So maybe removing this abstraction would help people understand more about what is going on and the tradeoffs one is making when choosing to use Stage X plugins.</p><p>It also seems much easier to maintain your own preset than to have to update the Stage preset.</p><blockquote><p>I often see people go "I want object rest, and that's stage 2, so I enabled stage 2". They now have a load of other experimental features enabled they might not know about and probably don't need.
Also, as stages change over time then people who aren't using shrinkwrap or yarn will get new features appearing, possibly without their knowledge. If a feature is canned they might even get one vanishing. @glenjamin</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="using-npm-scoped-packages-done-babelx">Using npm Scoped Packages (done, <code>@babel/x</code>)<a href="#using-npm-scoped-packages-done-babelx" class="hash-link" aria-label="Direct link to using-npm-scoped-packages-done-babelx" title="Direct link to using-npm-scoped-packages-done-babelx">​</a></h3><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Thoughts on <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a> using npm scoped packages for 7.0?</p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/821551189166878722" target="_blank" rel="noopener noreferrer">January 18, 2017</a></blockquote><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><p>Seems like most who understood what scoped packages are were in favor?</p><p>Pros</p><ul><li>Don't have to worry about getting a certain package name (the reason why this was brought up in the first place).</li></ul><blockquote><p>Many package names have been taken (preset-es2016, preset-es2017, 2020, 2040, etc). Can always ask to transfer but not always easy to do and can lead to users believing certain packages are official due to the naming.</p></blockquote><p>Cons</p><ul><li>We need to migrate to new syntax</li><li>Still unsupported on certain non-npm tools (lock-in)</li><li>No download counts unless we alias back to old names</li></ul><p>Sounds like we may want to defer, and in the very least it's not a breaking change given it's a name change.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="external-helpers-transform-runtime-babel-polyfill"><code>external-helpers</code>, <code>transform-runtime</code>, <code>babel-polyfill</code><a href="#external-helpers-transform-runtime-babel-polyfill" class="hash-link" aria-label="Direct link to external-helpers-transform-runtime-babel-polyfill" title="Direct link to external-helpers-transform-runtime-babel-polyfill">​</a></h3><p>EDIT: we separated out <code>transform-runtime</code>'s use of <code>@babel/runtime</code> and <code>core-js</code></p><blockquote><p>"regeneratorRuntime is not defined" - reported all the time.</p></blockquote><p>Basically we need a better solution around how to deal with built-ins/polyfills.</p><ul><li>Developers don't know what regenerator-runtime is, they just want to use generators/async functions.</li><li>Many developers are confused as to why a runtime is needed at all or why Babel doesn't compile <code>Promise</code>, <code>Object.assign</code>, or some other built-in.</li><li>Developers are confused with the difference between <code>transform-runtime</code> the Babel plugin and the runtime itself, <code>babel-runtime</code>.</li><li>Complaints about generated code size since <code>babel-polyfill</code> includes all polyfills (although now we have <a href="https://github.com/babel/babel-preset-env#usebuiltins" target="_blank" rel="noopener noreferrer"><code>useBuiltIns</code></a>) and no one knowing about <code>external-helpers</code></li></ul><p>Can we combine/replace these packages and have an easier, default experience?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="whats-next">What's next?<a href="#whats-next" class="hash-link" aria-label="Direct link to What's next?" title="Direct link to What's next?">​</a></h2><p>We want the community to upgrade and provide their feedback/reports. There will probably be a lot of initial activity which can be overwhelming so please be patient with us. We'd appreciate the help in helping triage, write docs/upgrade guides/tips, and codemods to help others upgrade more seamlessly. Because Babel touches a lot of the JavaScript ecosystem, it may not be as simple as simply updating one package because it could depend on other community Babel plugins on npm. We're not going to just wait around for a month and hope people upgrade, there's a lot of work to be done to make this happen without half the community still staying on 6.x next year. I'd not like to leave projects (and people) behind. So let us know what we can do to help, and I'd ask that you'd do the same for us and the rest of the community.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="project-sustainability">Project Sustainability<a href="#project-sustainability" class="hash-link" aria-label="Direct link to Project Sustainability" title="Direct link to Project Sustainability">​</a></h2><p>Shoutout to my team at <a href="https://www.behance.net" target="_blank" rel="noopener noreferrer">Behance</a> for allowing me to work on Babel part-time at work; we're still basically the only company working to sustain Babel in any capacity on work time. I'm really glad to be able to support the project at work instead of only after work/weekends, and hope this can be the case for more maintainers in the future. (I hope we've been a good example of how companies can support the open source projects they use and not necessarily "own").</p><p>We don't have enough in our Open Collective still to pay someone full time: I believe the highest donation we've gotten is $750 from Webflow, and highest monthly donation is $100 from various individuals/companies, so either we some work there or we work on getting more companies involved like AMP/Google have done (@jridgewell who recently joined our team is able to spend work time as well, and it's made a big difference).</p><p>Ask if your company can sponsor with our <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Open Collective</a>, let us know what's missing, how you can get involved. You don't even have to have a specific reason to get involved. If you simply care about sustaining a project for the forseable future, just get your team plugged in and get involved.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="future">Future<a href="#future" class="hash-link" aria-label="Direct link to Future" title="Direct link to Future">​</a></h2><p>After 7.0: there's a lot of potential avenues for us to explore (that we've all brought up years ago): separating traversal from plugins (async visitors?), immutable AST, syntax extensions? On the infra side: integrating with test262 and smoke tests, better github workflow to go from proposal to transform, codemod infrastructure for automatic upgrades, etc.</p><p>Follow our meeting notes/discussions on <a href="https://github.com/babel/notes" target="_blank" rel="noopener noreferrer">babel/notes</a> and get involved!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="thanks">Thanks!<a href="#thanks" class="hash-link" aria-label="Direct link to Thanks!" title="Direct link to Thanks!">​</a></h2><p>I'm hopeful that we can do the official release soon, but I'd like to mention that open source is sustained by consistent, day-to-day maintenance and not just a hyped-up release cycle where we just leave everyone else in the dust and move on so it may take a little longer as we wait to fixup bugs and upgrade the ecosystem.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Zero-config code transformation with babel-plugin-macros]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/09/11/zero-config-with-babel-macros</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/09/11/zero-config-with-babel-macros</guid>
            <pubDate>Mon, 11 Sep 2017 11:00:00 GMT</pubDate>
            <description><![CDATA[Babel started out as a transpiler to let you write the latest version of the ECMAScript specification but ship to environments that don't implement those features yet. But it has become much more than that. "Compilers are the New Frameworks" says Tom Dale and I could not agree more. We're seeing more and more compile-time optimizations for libraries and frameworks. I'm not talking about syntax extensions to the language, but simple code transformations that enable patterns that would be difficult to accomplish otherwise.]]></description>
            <content:encoded><![CDATA[<p>Babel started out as a transpiler to let you write the latest version of the ECMAScript specification but ship to environments that don't implement those features yet. But it has become much more than that. <a href="https://tomdale.net/2017/09/compilers-are-the-new-frameworks/" target="_blank" rel="noopener noreferrer">"Compilers are the New Frameworks"</a> says <a href="https://twitter.com/tomdale" target="_blank" rel="noopener noreferrer">Tom Dale</a> and I could not agree more. We're seeing more and more compile-time optimizations for libraries and frameworks. I'm not talking about syntax extensions to the language, but simple code transformations that enable patterns that would be difficult to accomplish otherwise.</p><p>One of my favorite things about compiler plugins is that you can use them to optimize the user experience and developer experience at the same time. (Read more about <a href="https://kentcdodds.com/blog/how-writing-custom-babel-and-eslint-plugins-can-increase-productivity-and-improve-user-experience" target="_blank" rel="noopener noreferrer">"How writing custom Babel &amp; ESLint plugins can increase productivity &amp; improve user experience"</a>).</p><p>I have a few problems with Babel plugins though:</p><ol><li>They can lead to confusion because when looking at code in a project, you might not know that there's a plugin transforming that code.</li><li>They have to be globally configured or configured out-of-band (in a <code>.babelrc</code> or webpack config).</li><li>They can conflict in very confusing ways due to the fact that all babel plugins run simultaneously (on a single walk of Babel's AST).</li></ol><p>These problems could be solved if we could import Babel plugins and apply them directly to our code. This would mean the transformation is more explicit, we wouldn't need to add them to configuration, and ordering can happen in the order the plugins are imported. Wouldn't that be cool!?!?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="introducing-babel-plugin-macros-">Introducing <a href="https://github.com/kentcdodds/babel-plugin-macros" target="_blank" rel="noopener noreferrer"><code>babel-plugin-macros</code></a> 🎣<a href="#introducing-babel-plugin-macros-" class="hash-link" aria-label="Direct link to introducing-babel-plugin-macros-" title="Direct link to introducing-babel-plugin-macros-">​</a></h2><p>Guess what! A tool like this exists! <code>babel-plugin-macros</code> is a new Babel plugin that allows you to do exactly what we're talking about. It's a "new" approach to code transformation. It enables you to have zero-config, importable code transformations. <a href="https://github.com/threepointone/babel-plugin-macros" target="_blank" rel="noopener noreferrer">The idea</a> came from <a href="https://twitter.com/threepointone" target="_blank" rel="noopener noreferrer">Sunil Pai</a> and caught my attention in <a href="https://github.com/facebookincubator/create-react-app/issues/2730" target="_blank" rel="noopener noreferrer">this create-react-app issue</a>.</p><p>So what does it look like? Whelp! There are already a few <code>babel-plugin-macros</code> packages out there you can try today!</p><p>Here's a real-world example of using <a href="https://github.com/kentcdodds/preval.macro" target="_blank" rel="noopener noreferrer"><code>preval.macro</code></a> to inline an SVG in <a href="https://github.com/kentcdodds/glamorous-website" target="_blank" rel="noopener noreferrer">a universal application</a> built with <a href="https://github.com/zeit/next.js" target="_blank" rel="noopener noreferrer">Next.js</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// search.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// this file runs in the browser</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">preval</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'preval.macro'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">glamorous</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'glamorous'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> base64SearchSVG </span><span class="token operator">=</span><span class="token plain"> preval</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'./search-svg'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// this will be transpiled to something like:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// const base64SearchSVG = 'PD94bWwgdmVyc2lv...etc...')</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token maybe-class-name">SearchBox</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> glamorous</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">input</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'algolia_searchbox'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">props</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">backgroundImage</span><span class="token operator">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string string" style="color:#718c00">url("data:image/svg+xml;base64,</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">base64SearchSVG</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">")</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token comment" style="color:#8e908c">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// search-svg.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// this file runs at build-time only</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// because it's required using preval.require function, which is a macro!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> fs </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'fs'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> path </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'path'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> svgPath </span><span class="token operator">=</span><span class="token plain"> path</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">join</span><span class="token punctuation">(</span><span class="token plain">__dirname</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'svgs/search.svg'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> svgString </span><span class="token operator">=</span><span class="token plain"> fs</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">readFileSync</span><span class="token punctuation">(</span><span class="token plain">svgPath</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'utf8'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> base64String </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Buffer</span><span class="token punctuation">(</span><span class="token plain">svgString</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">toString</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'base64'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> base64String</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>What's cool about this? Well, the alternative would look exactly like the example above except:</p><ol><li>It's less explicit because there would be no <code>import preval from 'preval.macro'</code> in the source code.</li><li>Have to add <code>babel-plugin-preval</code> to your babel configuration.</li><li>Need to update your ESLint config to allow for the <code>preval</code> variable as a global.</li><li>If you misconfigured <code>babel-plugin-preval</code> you'd get a cryptic <strong>runtime</strong> error like: <code>Uncaught ReferenceError: preval is not defined</code>.</li></ol><p>By using <code>preval.macro</code> with <code>babel-plugin-macros</code>, we don't have any of those problems because:</p><ol><li>The import is there and used explicitly.</li><li><code>babel-plugin-macros</code> needs to be added to your config, but only once, then you can use all the macros you'd like (even local macros!)</li><li>No need to update ESLint config because it's explicit.</li><li>If you misconfigure <code>babel-plugin-macros</code> then you'll get <a href="https://github.com/kentcdodds/babel-plugin-macros/blob/f7c9881ee22b19b3c53c93711af6a42895ba1c71/src/__tests__/__snapshots__/index.js.snap#L100" target="_blank" rel="noopener noreferrer">a much more friendly <strong>compile time</strong> error message</a> that indicates what the actual problem is pointing you to documentation.</li></ol><p><strong>So what is it really? The TL;DR is that <code>babel-plugin-macros</code> is a simpler way to write and use Babel transforms.</strong></p><p>There are already several <a href="https://www.npmjs.com/browse/keyword/babel-plugin-macros" target="_blank" rel="noopener noreferrer">published <code>babel-plugin-macros</code></a> you can use, including <a href="https://github.com/kentcdodds/preval.macro" target="_blank" rel="noopener noreferrer"><code>preval.macro</code></a>, <a href="https://github.com/kentcdodds/codegen.macro" target="_blank" rel="noopener noreferrer"><code>codegen.macro</code></a>, <a href="https://github.com/dralletje/idx.macro" target="_blank" rel="noopener noreferrer"><code>idx.macro</code></a>, <a href="https://github.com/emotion-js/emotion/blob/master/docs/babel.md#babel-macros" target="_blank" rel="noopener noreferrer"><code>emotion/macro</code></a>, <a href="https://github.com/vinhlh/tagged-translations#via-babel-macros" target="_blank" rel="noopener noreferrer"><code>tagged-translations/macro</code></a>, <a href="https://github.com/mattphillips/babel-plugin-console#macros" target="_blank" rel="noopener noreferrer"><code>babel-plugin-console/scope.macro</code></a>, and <a href="https://github.com/threepointone/glamor/pull/312" target="_blank" rel="noopener noreferrer"><code>glamor</code> 🔜</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="another-example">Another example<a href="#another-example" class="hash-link" aria-label="Direct link to Another example" title="Direct link to Another example">​</a></h3><p><code>babel-plugin-macros</code> is a way to have no config for non-syntax babel plugins. So many existing babel plugins could be implemented as a macro. Here's another example of <a href="https://github.com/mattphillips/babel-plugin-console" target="_blank" rel="noopener noreferrer"><code>babel-plugin-console</code></a> which exposes <a href="https://github.com/mattphillips/babel-plugin-console/blob/master/README.md#macros" target="_blank" rel="noopener noreferrer">a macro version of itself</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">scope</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'babel-plugin-console/scope.macro'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add100</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">a</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> oneHundred </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">scope</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'Add 100 to another number'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> oneHundred</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">add</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">a</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> b</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> b</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, when that code is run, the <code>scope</code> function does some pretty nifty things:</p><p><strong>Browser:</strong></p><p><img loading="lazy" src="https://github.com/mattphillips/babel-plugin-console/raw/53536cba919d5be49d4f66d957769c07ca7a4207/assets/add100-chrome.gif" alt="Browser console scoping add100" class="img_SS3x"></p><p><strong>Node:</strong></p><img loading="lazy" alt="Node console scoping add100" src="https://github.com/mattphillips/babel-plugin-console/raw/53536cba919d5be49d4f66d957769c07ca7a4207/assets/add100-node.png" width="372" class="img_SS3x"><p>Cool right? And using it is just like using any other dependency, except it has all the benefits mentioned above.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>I think we've only begun to scratch the surface of what <code>babel-plugin-macros</code> can do. I'm hoping that we can land it in <a href="https://github.com/facebookincubator/create-react-app/issues/2730" target="_blank" rel="noopener noreferrer">create-react-app</a> so folks using <code>create-react-app</code> can have even more power with zero configuration. I'm really excited to see more Babel plugins expose a <code>macro</code> in addition to the existing plugin functionality they already have. I can't wait to see folks create macros that are specific to their project needs.</p><p><strong>Creating a macros is even easier than a regular Babel plugin</strong>, but it does require a bit of knowledge around ASTs and Babel. If this is new to you, there are <a href="https://kentcdodds.com/talks/#writing-custom-babel-and-eslint-plugins-with-asts" target="_blank" rel="noopener noreferrer">a</a>, <a href="https://github.com/thejameskyle/babel-handbook" target="_blank" rel="noopener noreferrer">few</a>, <a href="https://kentcdodds.com/workshops/#code-transformation-and-linting" target="_blank" rel="noopener noreferrer">resources</a> for you 😀</p><p>Good luck to you all! 👋</p><p>P.S. I should mention that language macros are not a new concept at all. Being able to teach a language new tricks has been around for a very long time. In fact, there's already <a href="http://sweetjs.org/" target="_blank" rel="noopener noreferrer">such a tool for JavaScript</a> and even <a href="https://github.com/codemix/babel-plugin-macros" target="_blank" rel="noopener noreferrer">one implemented as a Babel plugin already</a>. <code>babel-plugin-macros</code> takes a slightly different approach however. While macros have often been associated with defining new syntax for a language, that's not the goal of <code>babel-plugin-macros</code> at all. In the case of <code>babel-plugin-macros</code> it's more about code transformations.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Contributing to Babel: Three Lessons to Remember]]></title>
            <link>https://paion-data.github.io/babel-website/blog/contributing-to-babel-three-lessons-to-remember</link>
            <guid>https://paion-data.github.io/babel-website/blog/contributing-to-babel-three-lessons-to-remember</guid>
            <pubDate>Wed, 16 Aug 2017 14:00:00 GMT</pubDate>
            <description><![CDATA[Getting to work your way around a new code base always poses its challenges, and Babel was no exception.]]></description>
            <content:encoded><![CDATA[<p>Getting to work your way around a new code base always poses its challenges, and Babel was no exception.</p><p>I’ve been working with Babel as part of the Google Summer of Code 2017 program, working to update Babel transforms and the Babylon parser to accommodate changes to specifications and implementing new features.</p><p>Here’s a few things I’ve learnt from my adventures so far.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="1-yes-communication-is-important">1. Yes, communication is important<a href="#1-yes-communication-is-important" class="hash-link" aria-label="Direct link to 1. Yes, communication is important" title="Direct link to 1. Yes, communication is important">​</a></h2><p>To start off with getting to know the codebase better, I combed through the open issues list on Babel and found a relatively easy one (<a href="https://github.com/babel/babel/issues/5728" target="_blank" rel="noopener noreferrer">issue #5728</a>) to deal with.</p><p>Just to make sure I knew what I was doing, I fired a quick question on the thread:</p><img loading="lazy" class="img-responsive" alt="My question asking for clarification" src="/assets/2017-08-16-gsoc-karl-1/question.png"><p>After getting clarification, I set off to change the plugin to not throw "runtime" errors during transpilation, but only when the code is actually being run. One incriminating piece of code stuck out:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> violation </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">binding</span><span class="token punctuation">.</span><span class="token property-access">constantViolations</span><span class="token operator">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">throw</span><span class="token plain"> violation</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">buildCodeFrameError</span><span class="token punctuation">(</span><span class="token plain">messages</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">get</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"readOnly"</span><span class="token punctuation">,</span><span class="token plain"> name</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now what needed to be done here was to actually insert a <code>throw</code> statement into the generated code, which didn’t prove to be too difficult. However, there were still a few cases where runtime errors were being thrown elsewhere from code that wasn’t directly related to this file.</p><p>Wanting to go and explore other parts of the Babel code base, I put that down for me to get on with later.</p><p>Not too long after, I received a, well, interesting update on the issue… Wait what?</p><img loading="lazy" class="img-responsive" alt="Someone else had claimed the issue." src="/assets/2017-08-16-gsoc-karl-1/update.png"><p>I never actually said I was working on fixing the issue, but assumed that posting would have implied I was going to work on it.</p><p>Oops.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="2-where-snapshot-testing-falls-short">2. Where snapshot testing falls short<a href="#2-where-snapshot-testing-falls-short" class="hash-link" aria-label="Direct link to 2. Where snapshot testing falls short" title="Direct link to 2. Where snapshot testing falls short">​</a></h2><p>After setting off for another hunt, I stumbled across <a href="https://github.com/babel/babel/issues/5656" target="_blank" rel="noopener noreferrer">issue #5656</a>:</p><blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="arguments-deoptimized-when-shadowed-in-nested-function">Arguments deoptimized when shadowed in nested function<a href="#arguments-deoptimized-when-shadowed-in-nested-function" class="hash-link" aria-label="Direct link to Arguments deoptimized when shadowed in nested function" title="Direct link to Arguments deoptimized when shadowed in nested function">​</a></h3><p>This is a feature request (I think). Arguments are not optimized if an inner function shadows the name with a parameter (or rest parameters in my case).</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="input-code">Input code<a href="#input-code" class="hash-link" aria-label="Direct link to Input code" title="Direct link to Input code">​</a></h4><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">log</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token spread operator">...</span><span class="token plain">args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">test_opt</span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token spread operator">...</span><span class="token plain">args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">test_deopt</span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">fn</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token spread operator">...</span><span class="token plain">args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">fn</span><span class="token punctuation">(</span><span class="token spread operator">...</span><span class="token plain">args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>...</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="expected-vs-current-behavior">Expected vs. Current Behavior<a href="#expected-vs-current-behavior" class="hash-link" aria-label="Direct link to Expected vs. Current Behavior" title="Direct link to Expected vs. Current Behavior">​</a></h4><p>I’d expect the code to be optimizable to use .apply( thisArg, arguments ) throughout.
However, in test_deopt the outer ...args gets copied just to be passed into the inner fn.
I can verify that the problem disappears if I rename either the ...args of test_deopt or of the fn arrow function.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="whats-going-on-here">What’s going on here?<a href="#whats-going-on-here" class="hash-link" aria-label="Direct link to What’s going on here?" title="Direct link to What’s going on here?">​</a></h3><p>Now what was happening was that this code would generate the following:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">log</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _console</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">_console </span><span class="token operator">=</span><span class="token plain"> console</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token plain">_console</span><span class="token punctuation">,</span><span class="token plain"> arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">test_opt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  log</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token punctuation">,</span><span class="token plain"> arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">test_deopt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _len </span><span class="token operator">=</span><span class="token plain"> arguments</span><span class="token punctuation">.</span><span class="token property-access">length</span><span class="token punctuation">,</span><span class="token plain"> args </span><span class="token operator">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Array</span><span class="token punctuation">(</span><span class="token plain">_len</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> _key </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"> _key </span><span class="token operator">&lt;</span><span class="token plain"> _len</span><span class="token punctuation">;</span><span class="token plain"> _key</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// unnecessary loop</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    args</span><span class="token punctuation">[</span><span class="token plain">_key</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> arguments</span><span class="token punctuation">[</span><span class="token plain">_key</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">fn</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> log</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token punctuation">,</span><span class="token plain"> arguments</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  fn</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">apply</span><span class="token punctuation">(</span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token punctuation">,</span><span class="token plain"> args</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>See that <code>for</code> section there? Usually this is needed as the arguments object isn’t a real array — for example, if you tried to run <code>arguments.slice()</code>, it would fail miserably.
However, in this case it’s only being passed to <code>Function.prototype.apply</code>. Surprisingly enough, Babel already bothers to optimize this specific case, like in the <code>test_opt</code> example above.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="trying-to-fix-it">Trying to fix it<a href="#trying-to-fix-it" class="hash-link" aria-label="Direct link to Trying to fix it" title="Direct link to Trying to fix it">​</a></h3><p>So what did I do? Adding the problem file as a new test case, I tried to see if I could get the output to reflect what I wanted.</p><img loading="lazy" class="img-responsive" alt="Test failure of modified code" src="/assets/2017-08-16-gsoc-karl-1/babel-test.png"><p>“Why’s the test failing? Surely if I change it a little it will solve itself.”</p><p>Despite spamming <code>make test-only</code> and modifying the transforms of referenced identifiers within the code, any change just resulted in a different bunch of tests failing instead.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="the-chromium-debugger-is-fun">The Chromium debugger is “fun”<a href="#the-chromium-debugger-is-fun" class="hash-link" aria-label="Direct link to The Chromium debugger is “fun”" title="Direct link to The Chromium debugger is “fun”">​</a></h3><p>Miserable, annoyed and confused, I bothered to fire up the Node.js inspector to step through what was going on.</p><img loading="lazy" class="img-responsive" alt="Using the Chromium debugger" src="/assets/2017-08-16-gsoc-karl-1/debugger-cropped.png"><p>After returning to my computer from a drink break, I’m gladly greeted to my hard disk light thrashing around and a practically hung computer.</p><img loading="lazy" class="img-responsive" alt="Chromium process using more than 3GB of memory" src="/assets/2017-08-16-gsoc-karl-1/chromium-task-manager.png"><p>Holding my computer together with judicious applications of <kbd>Alt</kbd> + <kbd>SysRq</kbd> + <kbd>F</kbd>, I managed to work through the flow of things¹ and figure out how exactly the code worked.</p><p>Even through all that, I still couldn’t see any reason why it was deciding to remove this “necessary” (so I thought) code that was being removed with my original fix.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="the-actual-problem">The actual problem?<a href="#the-actual-problem" class="hash-link" aria-label="Direct link to The actual problem?" title="Direct link to The actual problem?">​</a></h3><p>See the error shown above? That entire code in green wasn’t meant to be there, even though it was “expected”.</p><p>Basically: the test was broken. <em>Great.</em> :/</p><p><a href="https://github.com/babel/babel/pull/5721" target="_blank" rel="noopener noreferrer">The actual fix</a> involved creating a <code>referencesRest</code> function to make sure that the spread operator was actually being applied to the original parameter, rather than a variable in another scope masking the variable.</p><blockquote><p>¹: Turns out that adding a large folder to the DevTools workspace would leak memory until causing an OOM (<a href="https://github.com/babel/babel/issues/5656#issuecomment-300139737" target="_blank" rel="noopener noreferrer">bug I filed for this</a>).</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="so-why-do-we-use-snapshot-testing-then">So why do we use snapshot testing then?!<a href="#so-why-do-we-use-snapshot-testing-then" class="hash-link" aria-label="Direct link to So why do we use snapshot testing then?!" title="Direct link to So why do we use snapshot testing then?!">​</a></h3><p>Well first off, it's far easier to create tests when all you need to do is ask Babel to run your test case to generate your expected file. This presents to us a low time cost option while protecting against a significant proportion of potential errors.</p><p>Also, especially with the type of program Babel is, it would be far harder to test for in other ways. For example, we could check for specific nodes of the AST, but this takes far longer to write and is also prone to non-obvious breakage when your code attempts to change the way the transform is done.</p><p>So, all in all, a few lessons here:</p><ol><li>Make sure your tests are right in the first place—don't be complacent!</li><li>Yes, the debugger is actually useful in seeing what goes on.</li><li>Sometimes things take time to work out—if you’re getting nowhere, take a break or work on something else.</li></ol><h2 class="anchor anchorWithStickyNavbar_JmGV" id="3-team-meetings">3. Team meetings!<a href="#3-team-meetings" class="hash-link" aria-label="Direct link to 3. Team meetings!" title="Direct link to 3. Team meetings!">​</a></h2><p>I know this kinda stretches the notion of an “issue”, but anyway :)</p><p>When you’re working on a project with a bunch of other people, it’s always useful to catch up with one another and discuss areas which we need to work on.</p><p>So how exactly do we go about doing that?!</p><p><em>Ugh, meetings.</em></p><p>When you have a bunch of people spread across the world, finding ways to communicate is never easy, but regardless we would have to make do with our attempts at this feat.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="time-zones">Time zones<a href="#time-zones" class="hash-link" aria-label="Direct link to Time zones" title="Direct link to Time zones">​</a></h3><p>When you’re dealing with a open source project spanning all across the globe, picking an appropriate hour quickly turns a rather involved exercise in bikeshedding.</p><img loading="lazy" class="img-responsive" alt="World map of people who’ve attended our meetings" src="/assets/2017-08-16-gsoc-karl-1/world-map.png"><p>Even with the vast spread between each of us, it seemed like we could just about manage to finally get something together.</p><img loading="lazy" class="img-responsive" alt="Time zones discussed in 31 May 2017 meeting" src="/assets/2017-08-16-gsoc-karl-1/time-zone-list.png"><p>Alas, this was not to last. Eventually, we ended up having to switch between two times every other week to accommodate other users (13:00 and 16:00 UTC), which meant that I was only able to attend once a fortnight.</p><p>Despite this, we’ve managed to make significant progress with coordinating fixes to various parts that make up key changes to Babel, including support for TypeScript, changes to the order in which transform plugins run, as well as keeping up to date with changes from TC39.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="where-to-next">Where to next?<a href="#where-to-next" class="hash-link" aria-label="Direct link to Where to next?" title="Direct link to Where to next?">​</a></h2><p>We’re continuing to polish up Babel 7 for general consumption, with <a href="https://babeljs.io/blog/2017/03/01/upgrade-to-babel-7" target="_blank" rel="noopener noreferrer">a number of new features</a> coming along with that.</p><p>I’m working with a bunch of others to get support for updated <a href="https://github.com/tc39/proposal-class-fields" target="_blank" rel="noopener noreferrer">Class Fields</a> specification proposal included into Babel so that people can test it out and provide feedback.</p><p>Also, while I’m at it, I’d like to thank all of the Babel mentors and contributors for helping me out with peer reviews and providing guidance with proposals, all the way from first contact to today.</p><hr><p>Looking to find out more about Babel? Hit up our <a href="https://github.com/babel/babel/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">contributing page</a> and join the <a href="https://slack.babeljs.io" target="_blank" rel="noopener noreferrer">Slack community</a>!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="more-about-karl">More about Karl<a href="#more-about-karl" class="hash-link" aria-label="Direct link to More about Karl" title="Direct link to More about Karl">​</a></h2><p>Karl Cheng is a <a href="https://summerofcode.withgoogle.com/organizations/5842528113786880/#6600055503978496" target="_blank" rel="noopener noreferrer">GSoC 2017</a> student hailing from Sydney, Australia. Find out more about him on GitHub (<a href="https://github.com/Qantas94Heavy" target="_blank" rel="noopener noreferrer">Qantas94Heavy</a>) and Twitter (<a href="https://twitter.com/Qantas94Heavy" target="_blank" rel="noopener noreferrer">@Qantas94Heavy</a>)!</p><p>Please check out our first post on <a href="https://babeljs.io/blog/2017/08/09/babel-and-summer-of-code" target="_blank" rel="noopener noreferrer">Summer of Code</a> for more info!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Personal Experiences at Babel #1 — A PR with Unusually High Number of Reviews]]></title>
            <link>https://paion-data.github.io/babel-website/blog/personal-experiences-at-babel-1-a-pr-with-unusually-high-number-of-reviews</link>
            <guid>https://paion-data.github.io/babel-website/blog/personal-experiences-at-babel-1-a-pr-with-unusually-high-number-of-reviews</guid>
            <pubDate>Fri, 11 Aug 2017 12:00:00 GMT</pubDate>
            <description><![CDATA[We landed the parser support for]]></description>
            <content:encoded><![CDATA[<p>We landed the <a href="https://github.com/babel/babylon/pull/587" target="_blank" rel="noopener noreferrer">parser support</a> for
<a href="https://tc39.github.io/proposal-decorators/" target="_blank" rel="noopener noreferrer">the stage-2 decorators spec</a> last
week at Babylon — the parser for Babel. If you don’t know what a decorator is,
the gist of it is that a decorator gives some concise syntax to affect the
definition of a class or a class method which you decorate.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">@frozen </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">configurable</span><span class="token punctuation">(</span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">enumerable</span><span class="token punctuation">(</span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">throttle</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">500</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">expensiveMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>One of the more remarkable things about this PR was the number of reviews it
received</p><p><a href="https://twitter.com/left_pad/status/877894712476258305" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://pbs.twimg.com/media/DC7oDlmXUAAa3nD.jpg" alt="Screenshot of PR reviews on github" class="img_SS3x"></a></p><p>Perhaps this could be because decorators really are one of the much hyped about
features in JavaScript. Angular even considered making their own JS flavor
called AtScript before they decided to go with TypeScript since they love
decorators (or as they liked to call it “annotations”) so much.</p><p>Well, there is more to the story. As I was recently discussing with a mentor,
reviewing PRs is a tough job. Reviewing PRs is comparably as hard as solving the
bug in the first place was. Apart from the technical aspect of reviewing — which
is ensuring that the bug is being fixed optimally (by perhaps even getting an
idea of how they would solve the issue and seeing how the submitted patch
compares to their idea) — there’s another big hindrance. A reviewer has to be
aware of the whole issue, the discussion surrounding it, and have familiarity
with the part of the codebase that the PR makes changes to.<sup><a href="#footnotes">1</a></sup></p><p>When I initially joined Babel, and was not-so-familiar with the codebase, every
issue I encountered was almost instantly answered after I posted it in Babel’s
chatroom, which left me with the (wrong) impression that perhaps the maintainers
are some god-like figures who know it all and that everyone’s expected to adhere
to the same fictitious standards.</p><p>Even after becoming familiar with the codebase, I was submitting PRs without
proper documentation under the assumption that it took me a while to solve the
issue and see all things, but if the reviewers see the code they’d instantly be
able to evaluate it just like they were answering my questions.</p><p>Eh! Very wrong. Let me just bust this myth (assuming I’m not the only one who
has felt it). Even they (maintainers) won’t have all the answers at times, and
sometimes you’ll have to search for yourself — and that’s how it should be.<sup><a href="#footnotes">2</a></sup></p><p>In open source, there are a lot of people who want to contribute, but are unable
to because they don’t know how to code / they don’t know how to present PRs /
they don’t know what the project wants / they don’t know what the maintainers
want / a ton of other things. A lot of times you’ll find help along the way,
but a lot of that is controlled by factors beyond your control.<sup><a href="#footnotes">3</a></sup></p><p>One of the joys of getting your PR merged is not just the programming but
somehow making the project move forward in the way it is expected to be moved
forward. And doing that by somehow identifying what the project needs and being
able to deliver that.</p><p>In order to merge this PR I had to find people and talk to them — people who use
decorators, people who are interested in seeing an implementation of decorators,
people who want to contribute to babel for decorators. After getting consensus
on how to move forward<sup><a href="#footnotes">4</a></sup>, I had to go through the spec and all the existing
discussions surrounding it so that my understanding of the spec could be up to
speed with other people.</p><p>And finally — the most important part which I think got this PR the number of
reviews that we saw — making it easy for people who’ll be reviewing my PR by
explaining everything they would need to get up to speed with the whole
situation. By chance, at the time the PR I made was able to satisfy some of the
criteria I mentioned earlier:</p><ol><li>Making sure reviewers are aware of the whole issue (by mentioning in detail the
decisions I’ve taken so they don’t necessarily have to look at the code to
figure it out)</li><li>The discussion surrounding it (by mentioning alternate viewpoints on some of the
decisions so as to make it easier to compare them with the decisions made)</li><li>Explaining clearly my strategy to solve the problem (to assist the technical
aspect of reviewing — so that the reviewers can know what I’ve done and then see
the code rather than the other way around)</li></ol><p>And that’s what did it! (or so I think). So there’s the mystery unraveled — A PR
with unusually high number of reviews¹.</p><p><strong>PS</strong>: I wanted to share my personal experience with this blog post,
not write a guide to be followed or a technical blog post. Therefore, some
statements which I make may not hold true in general or may be debatable, so
they should just be read in the context of the experience I narrate.</p><p>Also note that if you’re looking for decorators support in Babel, we still have
a long way to go. This is just the parser and work on the transform (which
converts your code to functionally equivalent ES5) is yet to be done. But now
that we’ve made the decisions that needed to be made, things will move more
smoothly from here onwards.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="footnotes">Footnotes<a href="#footnotes" class="hash-link" aria-label="Direct link to Footnotes" title="Direct link to Footnotes">​</a></h2><ol><li>We have a shortage of manpower when it comes to reviewing PRs. It was also
recently discussed in one of our weekly meetings (<a href="https://github.com/babel/notes/blob/master/2017-06/june-21.md#priority-topics" target="_blank" rel="noopener noreferrer">link to the meeting
notes</a>).
Perhaps you could help us with this. Drop by <a href="https://slack.babeljs.io/" target="_blank" rel="noopener noreferrer">our slack
chatroom</a> and offer your help!</li><li>I feel that the myth stems from the fact that when you’re new to the project the
mentors definitely do know more about the project than you</li><li>(to illustrate) Some random factors which might affect the chances of you
getting help:</li></ol><ul><li>If someone was online who worked on the same thing when you post a question on
the chatroom</li><li>Someone who knows your doubt will take a lot of time to deal with and they
want to give you personal attention and not just throw information at you</li><li>Someone who’s able to gauge where you’re coming from, and so on.</li></ul><ol start="4"><li>We’d been stuck for <a href="https://github.com/babel/babel/issues/2645" target="_blank" rel="noopener noreferrer">a while</a> since
<em>a lot</em> of people use a nonstandard implementation for decorators which came at
around the time the spec was in stage-0. The changes in the spec are not
backwards-compatible so we were unsure on how we should introduce support for
the new spec without causing much disruption for people who use Babel. We
finally decided that we’ll be introducing this PR as an opt-in to allow people to
migrate at their own pace.</li></ol><h2 class="anchor anchorWithStickyNavbar_JmGV" id="outro">Outro<a href="#outro" class="hash-link" aria-label="Direct link to Outro" title="Direct link to Outro">​</a></h2><p>Peeyush Kushwaha is a <a href="https://summerofcode.withgoogle.com/organizations/5842528113786880/#6632162202746880" target="_blank" rel="noopener noreferrer">GSoC 2017</a> student. Give him a follow on Twitter: <a href="https://twitter.com/PeeyFTW" target="_blank" rel="noopener noreferrer">@PeeyFTW</a>!</p><p>This was originally posted <a href="https://medium.com/@peey/personal-experiences-at-babel-1-a-pr-with-unusually-high-number-of-reviews-5cb49ee71897" target="_blank" rel="noopener noreferrer">here on medium</a>. Please check out our first post on <a href="https://babeljs.io/blog/2017/08/09/babel-and-summer-of-code" target="_blank" rel="noopener noreferrer">Summer of Code</a> for more info!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel and Summer of Code 2017]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/08/09/babel-and-summer-of-code</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/08/09/babel-and-summer-of-code</guid>
            <pubDate>Wed, 09 Aug 2017 12:00:00 GMT</pubDate>
            <description><![CDATA[For the first time, Babel is participating in Summer of Code!]]></description>
            <content:encoded><![CDATA[<p>For the first time, Babel is participating in <em>Summer of Code</em>!
Although we forgot to make an announcement post earlier, here's our progress update 😊</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="what-is-it">What is it?<a href="#what-is-it" class="hash-link" aria-label="Direct link to What is it?" title="Direct link to What is it?">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="google-summer-of-code"><a href="https://summerofcode.withgoogle.com/" target="_blank" rel="noopener noreferrer">Google Summer of Code</a><a href="#google-summer-of-code" class="hash-link" aria-label="Direct link to google-summer-of-code" title="Direct link to google-summer-of-code">​</a></h3><blockquote><p><a href="https://summerofcode.withgoogle.com/organizations/5842528113786880/" target="_blank" rel="noopener noreferrer">Babel's Profile for GSoC</a></p></blockquote><p>GSoC is an international annual program which pairs open source projects and university students! We work with the students on a project and Google pays them a stipend.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="peeyush-kushwaha-india">Peeyush Kushwaha (India)<a href="#peeyush-kushwaha-india" class="hash-link" aria-label="Direct link to Peeyush Kushwaha (India)" title="Direct link to Peeyush Kushwaha (India)">​</a></h4><ul><li>Github: <a href="https://github.com/peey" target="_blank" rel="noopener noreferrer">@peey</a>, Twitter: <a href="https://twitter.com/peeyFTW" target="_blank" rel="noopener noreferrer">@peeyFTW</a></li></ul><h4 class="anchor anchorWithStickyNavbar_JmGV" id="karl-cheng-australia">Karl Cheng (Australia)<a href="#karl-cheng-australia" class="hash-link" aria-label="Direct link to Karl Cheng (Australia)" title="Direct link to Karl Cheng (Australia)">​</a></h4><ul><li>Github: <a href="https://github.com/Qantas94Heavy" target="_blank" rel="noopener noreferrer">@Qantas94Heavy</a>, Twitter: <a href="https://twitter.com/qantas94heavy" target="_blank" rel="noopener noreferrer">@qantas94heavy</a></li></ul><p>We're happy to be working with both Peeyush and Karl!</p><p>Peeyush has already made a <a href="https://github.com/pulls?utf8=%E2%9C%93&amp;q=is%3Apr+author%3Apeey+user%3Ababel+is%3Aboth" target="_blank" rel="noopener noreferrer">bunch of PRs</a> with improving documentation and bug fixes. In addition, he's been focusing on the much desired <a href="https://github.com/tc39/proposal-decorators" target="_blank" rel="noopener noreferrer">decorators transform</a>. We'll be updating <a href="https://github.com/babel/proposals/issues/11" target="_blank" rel="noopener noreferrer">this issue</a> with more progress.</p><p>Karl has similarly made many <a href="https://github.com/pulls?utf8=%E2%9C%93&amp;q=is%3Apr+author%3AQantas94Heavy+user%3Ababel+" target="_blank" rel="noopener noreferrer">contributions already</a>, and is now focusing on the private properties transform (now part of the <a href="https://github.com/tc39/proposal-class-fields" target="_blank" rel="noopener noreferrer">combined class properties proposal</a>). We'll be updating <a href="https://github.com/babel/proposals/issues/12" target="_blank" rel="noopener noreferrer">this issue</a> with more progress.</p><p>To track their work on these transforms and the progress of other specs/proposals, be sure to check out the <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">Babel TC39 Proposal Status Tracker</a>.</p><p>It's been really amazing working with them the past 2 months! We've really enjoyed teaching, working, and learning with them on the project. Partnering with TC39 in making these Babel plugins a reality has also been helpful for everyone.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="rails-girls-summer-of-code">Rails Girls Summer of Code<a href="#rails-girls-summer-of-code" class="hash-link" aria-label="Direct link to Rails Girls Summer of Code" title="Direct link to Rails Girls Summer of Code">​</a></h3><blockquote><p><a href="https://teams.railsgirlssummerofcode.org/teams/307" target="_blank" rel="noopener noreferrer">Babel's RGSoC Page</a></p></blockquote><p>RGSoC is a similar program to GSOC: annual, global, pays a stipend, brings projects and newcomers together, with a focus on bringing diversity into Open Source.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="kara-de-la-marck-london">Kara de la Marck (London)<a href="#kara-de-la-marck-london" class="hash-link" aria-label="Direct link to Kara de la Marck (London)" title="Direct link to Kara de la Marck (London)">​</a></h4><ul><li>Github: <a href="https://github.com/MarckK" target="_blank" rel="noopener noreferrer">@MarckK</a>, Twitter: <a href="https://twitter.com/KaraMarck" target="_blank" rel="noopener noreferrer">@KaraMarck</a></li></ul><h4 class="anchor anchorWithStickyNavbar_JmGV" id="emma-deacon-london">Emma Deacon (London)<a href="#emma-deacon-london" class="hash-link" aria-label="Direct link to Emma Deacon (London)" title="Direct link to Emma Deacon (London)">​</a></h4><ul><li>Github: <a href="https://github.com/EmmaDeacon" target="_blank" rel="noopener noreferrer">@EmmaDeacon</a>, Twitter: <a href="https://twitter.com/EmmaMDeacon" target="_blank" rel="noopener noreferrer">@EmmaMDeacon</a></li></ul><p>Where RGSoC differs from GSoC is that it matches developers with team coaches in addition to the open source project's  mentors. Pivotal London is working with Kara and Emma as their daily coworkers/supporters. We are lucky to have <em>seven</em> awesome coaches from their organization to help them, while on our side we can leave feedback on issues/PRs in GitHub and in our Slack.</p><p>We're incredibly lucky to work with both Kara and Emma!</p><p>They're currently working on some codemods! Ideally we would have codemods to convert ES2015 to ES2016+ (<a href="https://lebab.io/" target="_blank" rel="noopener noreferrer">Lebab</a>) and if necessary, codemods to remove dropped TC39 proposals. We'd also want to have codemods for our upcoming Babel 7 release for a easy/automated upgrade!</p><p>In the meantime, they've already done all the necessary work to implement the new <a href="https://github.com/tc39/proposal-optional-catch-binding" target="_blank" rel="noopener noreferrer">optional catch binding</a> proposal as a plugin! It was really cool to see that we had already released the Babel plugin before the TC39 meeting a few weeks ago! You can follow this <a href="https://github.com/babel/proposals/issues/7" target="_blank" rel="noopener noreferrer">issue</a> for more information.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="why">Why?<a href="#why" class="hash-link" aria-label="Direct link to Why?" title="Direct link to Why?">​</a></h2><ul><li>Participating in these programs means more developer exposure to participating in open source!</li><li>Helps us as a project onboard and mentor new contributors in a more formal, structured way. It helps us identify any issues with our code setup, and more importantly with our process (multiple timezones, different backgrounds) and culture.</li><li>Helps bring in different people into the project that otherwise may not have contributed to Babel or open source. The hope is that they continue to stick around or be involved in the open source community! We want to do our part to make open source a welcoming and diverse community, focusing on individuals first.</li><li>We get <em>four</em> full time people working on our project for a whole summer! This is a great opportunity for each of them to work on high impact problems, and for us to be in a support role to help them succeed.</li><li>Hopefully it inspires some to get involved as a result of the program, and for others to step up as mentors/maintainers (ideally from the hundreds of top companies that use this project everyday) to bring people in.</li><li>Ultimately, this is just about building a community and making a great experience for our students/interns.</li></ul><p>It takes a lot of work to get involved in any community, and it's up to the people already involved to make this as easy as possible to join in. It requires one to spend the time to meet people where they are at (in many ways), not just write code but to invest in others. A community is about the people, and open source is about the community.</p><p>Participating in Summer of Code gives us a great opportunity to make this happen, and we're continuously working on improving.</p><p>Look at all the amazing work they've already done! We're really excited for what's to come and will do another post on our results and what we've learned.</p><blockquote><p>Look out for next year's <a href="https://twitter.com/RailsGirlsSoC" target="_blank" rel="noopener noreferrer">RGSoC</a> and <a href="https://twitter.com/gsoc" target="_blank" rel="noopener noreferrer">GSoC</a> if you want to participate (for your own project, as a participant, or to help us out) <em>cough Sean</em>.</p></blockquote><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="thanks">Thanks<a href="#thanks" class="hash-link" aria-label="Direct link to Thanks" title="Direct link to Thanks">​</a></h2><p>To my team at Behance/Adobe for allowing me to spend time at work maintaining Babel and participating in Summer of Code!</p><p>Thanks to all the other helpers/maintainers (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">Brian</a>, <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan</a>, <a href="https://github.com/Jessidhia" target="_blank" rel="noopener noreferrer">Jessica</a>, <a href="https://github.com/xtuc" target="_blank" rel="noopener noreferrer">Sven</a>, <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">Justin</a>, <a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">Boopathi</a>), on Slack and GitHub issues! It can be a lot of work managing all the parts of an open source project, so we are glad to have the extra help!</p><p>Huge shoutout to many <a href="https://github.com/tc39" target="_blank" rel="noopener noreferrer">TC39</a> members like <a href="https://twitter.com/littledan" target="_blank" rel="noopener noreferrer">@littledan</a>, <a href="https://twitter.com/bakkoting" target="_blank" rel="noopener noreferrer">@bakkoting</a>, <a href="https://twitter.com/ljharb" target="_blank" rel="noopener noreferrer">@ljharb</a> for helping review PRs, better inform/work on <a href="https://github.com/babel/proposals" target="_blank" rel="noopener noreferrer">babel/proposals</a>, and discuss implementation/spec details in our Slack rooms! I know it's a lot of work 🙂</p><p>And thanks to <a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">Brian</a> again for help with editing!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Upgrade to Babel 7 for Tool Authors (WIP)]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/03/01/upgrade-to-babel-7-for-tool-authors</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/03/01/upgrade-to-babel-7-for-tool-authors</guid>
            <pubDate>Wed, 01 Mar 2017 11:00:00 GMT</pubDate>
            <description><![CDATA[We are moving the migration guide to a docs page instead of a blog post!]]></description>
            <content:encoded><![CDATA[<p>We are moving the migration guide to a docs page instead of a blog post!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="check-out-v7-migration-api">Check out <a href="https://babeljs.io/docs/en/next/v7-migration-api" target="_blank" rel="noopener noreferrer">v7-migration-api</a>!<a href="#check-out-v7-migration-api" class="hash-link" aria-label="Direct link to check-out-v7-migration-api" title="Direct link to check-out-v7-migration-api">​</a></h2><p>Refer users to this document for those that create tools that depend on Babel (such as Babel plugins).</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Upgrade to Babel 7 (moved)]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/03/01/upgrade-to-babel-7</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/03/01/upgrade-to-babel-7</guid>
            <pubDate>Wed, 01 Mar 2017 11:00:00 GMT</pubDate>
            <description><![CDATA[We are moving the migration guide to a docs page instead of a blog post!]]></description>
            <content:encoded><![CDATA[<p>We are moving the migration guide to a docs page instead of a blog post!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="check-out-v7-migration">Check out <a href="https://babeljs.io/docs/en/next/v7-migration" target="_blank" rel="noopener noreferrer">v7-migration</a>!<a href="#check-out-v7-migration" class="hash-link" aria-label="Direct link to check-out-v7-migration" title="Direct link to check-out-v7-migration">​</a></h2>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.23.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2017/02/13/6.23.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2017/02/13/6.23.0</guid>
            <pubDate>Mon, 13 Feb 2017 20:00:00 GMT</pubDate>
            <description><![CDATA[In this release: multiple improvements to the react-constant-elements plugin by @STRML, some codegen optimizations, and lots of bug fixes! Thanks to @loganfsmyth for the release + reviews!]]></description>
            <content:encoded><![CDATA[<p>In this release: multiple improvements to the <code>react-constant-elements</code> plugin by <a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>, some codegen optimizations, and lots of bug fixes! Thanks to <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">@loganfsmyth</a> for the release + reviews!</p><blockquote><p>Shoutouts to <a href="https://github.com/xtina-starr" target="_blank" rel="noopener noreferrer">@xtina-starr</a>, <a href="https://github.com/finkef" target="_blank" rel="noopener noreferrer">@finkef</a>, <a href="https://github.com/chitchu" target="_blank" rel="noopener noreferrer">@chitchu</a>, <a href="https://github.com/yongxu" target="_blank" rel="noopener noreferrer">@yongxu</a>, <a href="https://github.com/jwbay" target="_blank" rel="noopener noreferrer">@jwbay</a>, <a href="https://github.com/hex13" target="_blank" rel="noopener noreferrer">@hex13</a> for their first PRs! 🎉</p></blockquote><p>Check out <a href="https://github.com/babel/babel/releases/tag/v6.23.0" target="_blank" rel="noopener noreferrer">GitHub</a> for the whole changelog.</p><hr><p>I'll be writing up the 7.0 post (our current progress) soon so look out for that! We want to do whatever we can to make it easy for both end-users and plugin/tool authors to upgrade seamlessly: whether it be a beta period for the release, a <a href="https://github.com/babel/babel.github.io/pull/1146" target="_blank" rel="noopener noreferrer">7.0 upgrade guide</a>, codemods if necessary, a bot to automatically upgrade your OSS project from 6 to 7, or any other suggestions you can give us!</p><p>Since not everyone realises, I wanted to re-iterate again that our <a href="https://github.com/babel/babel#team" target="_blank" rel="noopener noreferrer">team</a> is still a small group of volunteers. There's no company sponsor or even anyone working on it full time.</p><p>We'd love for you to contribute (especially not code!), so please reach out to us! More designers, technical writers/editors, and teachers for our website would be amazing.</p><p>And in other news, Babel has been accepted as a <a href="https://teams.railsgirlssummerofcode.org/projects/177-babel" target="_blank" rel="noopener noreferrer">Rails Girls Summer of Code</a> project as well as waiting to hear back as a mentor organization for <a href="https://summerofcode.withgoogle.com/" target="_blank" rel="noopener noreferrer">Google Summer of Code</a>!</p><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-new-feature">🚀 New Feature<a href="#-new-feature" class="hash-link" aria-label="Direct link to 🚀 New Feature" title="Direct link to 🚀 New Feature">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5236-transform-es2015-block-scoping-add-option-throwifclosurerequired-to-throw-on-slow-code-spicyj"><a href="https://github.com/babel/babel/pull/5236" target="_blank" rel="noopener noreferrer">#5236</a> <code>transform-es2015-block-scoping</code>: Add option <code>throwIfClosureRequired</code> to throw on slow code. (<a href="https://github.com/spicyj" target="_blank" rel="noopener noreferrer">@spicyj</a>)<a href="#5236-transform-es2015-block-scoping-add-option-throwifclosurerequired-to-throw-on-slow-code-spicyj" class="hash-link" aria-label="Direct link to 5236-transform-es2015-block-scoping-add-option-throwifclosurerequired-to-throw-on-slow-code-spicyj" title="Direct link to 5236-transform-es2015-block-scoping-add-option-throwifclosurerequired-to-throw-on-slow-code-spicyj">​</a></h3><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-es2015-block-scoping"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token property">"throwIfClosureRequired"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In cases such as the following, it is impossible to rewrite let/const without adding an additional function and closure while transforming:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> i </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"> i </span><span class="token operator">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">5</span><span class="token punctuation">;</span><span class="token plain"> i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In extremely performance-sensitive code, this can be undesirable. If <code>"throwIfClosureRequired": true</code> is set, Babel throws when transforming these patterns instead of automatically adding an additional function.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="4812-transform-react-constant-elements-support-pure-expressions-strml"><a href="https://github.com/babel/babel/pull/4812" target="_blank" rel="noopener noreferrer">#4812</a> <code>transform-react-constant-elements</code>: Support pure expressions (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>)<a href="#4812-transform-react-constant-elements-support-pure-expressions-strml" class="hash-link" aria-label="Direct link to 4812-transform-react-constant-elements-support-pure-expressions-strml" title="Direct link to 4812-transform-react-constant-elements-support-pure-expressions-strml">​</a></h3><p>Adds a <code>path.isPure()</code> check to the plugin.</p><blockquote><p>The expression will remain in the hoisted code, even though it could be statically evaluated. UglifyJS/Babili will take care of that in many cases.</p></blockquote><p>In</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">OFFSET</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">Foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">render</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token plain">div tabIndex</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token constant" style="color:#f5871f">OFFSET</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Out</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">OFFSET</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">div tabIndex</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token constant" style="color:#f5871f">OFFSET</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">Foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">render</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> _ref</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Deopt</p></blockquote><p>As noted in <a href="https://github.com/facebook/react/issues/3226" target="_blank" rel="noopener noreferrer">facebook/react#3226</a>, it's not safe to reuse elements with mutable props.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">&lt;</span><span class="token plain">div style</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5288-babel-preset-flow-add-new-preset-thejameskyle"><a href="https://github.com/babel/babel/pull/5288" target="_blank" rel="noopener noreferrer">#5288</a> <code>babel-preset-flow</code>: Add new preset (<a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">@thejameskyle</a>)<a href="#5288-babel-preset-flow-add-new-preset-thejameskyle" class="hash-link" aria-label="Direct link to 5288-babel-preset-flow-add-new-preset-thejameskyle" title="Direct link to 5288-babel-preset-flow-add-new-preset-thejameskyle">​</a></h3><p><code>babel-preset-flow</code> just includes <code>transform-flow-strip-types</code>.</p><p>Before (still valid)</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-flow-strip-types"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.json</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"flow"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>FYI: the React preset still includes the flow plugin by default (we might change it when TS support is added)</p></blockquote><p>Thanks to <a href="https://github.com/simnalamburt" target="_blank" rel="noopener noreferrer">@simnalamburt</a> for giving us the package name!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5230-babel-traverse-add-extra-sibling-methods-chitchu"><a href="https://github.com/babel/babel/pull/5230" target="_blank" rel="noopener noreferrer">#5230</a> <code>babel-traverse</code>: Add extra sibling methods (<a href="https://github.com/chitchu" target="_blank" rel="noopener noreferrer">@chitchu</a>)<a href="#5230-babel-traverse-add-extra-sibling-methods-chitchu" class="hash-link" aria-label="Direct link to 5230-babel-traverse-add-extra-sibling-methods-chitchu" title="Direct link to 5230-babel-traverse-add-extra-sibling-methods-chitchu">​</a></h3><p>For plugin authors: there's already a <code>path.getSibling(number)</code>, so we're adding a few helper methods.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">path</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getPrevSibling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// path.getSibling(path.parentPath.key - 1)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">path</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getNextSibling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// path.getSibling(path.parentPath.key + 1)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">path</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getAllPrevSiblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// returns Array&lt;NodePath&gt; of previous siblings</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">path</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getAllNextSiblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" style="color:#8e908c">// returns Array&lt;NodePath&gt; of next siblings</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-bug-fixes">🐛 Bug Fixes<a href="#-bug-fixes" class="hash-link" aria-label="Direct link to 🐛 Bug Fixes" title="Direct link to 🐛 Bug Fixes">​</a></h2><blockquote><p>Because almost every bug fix can be an opportunity to learn more about JavaScript and how the tool that you use works, I would check out some of the PRs!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5298-fix-loose-transform-es2015-for-of-with-label-jridgewell"><a href="https://github.com/babel/babel/pull/5298" target="_blank" rel="noopener noreferrer">#5298</a> Fix loose <code>transform-es2015-for-of</code> with label. (<a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">@jridgewell</a>)<a href="#5298-fix-loose-transform-es2015-for-of-with-label-jridgewell" class="hash-link" aria-label="Direct link to 5298-fix-loose-transform-es2015-for-of-with-label-jridgewell" title="Direct link to 5298-fix-loose-transform-es2015-for-of-with-label-jridgewell">​</a></h3><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> c </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// previously, the label was completely dropped</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> e </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">continue</span><span class="token plain"> b</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5153-transform-react-constant-elements-hoisting-fixes-strml"><a href="https://github.com/babel/babel/pull/5153" target="_blank" rel="noopener noreferrer">#5153</a> <code>transform-react-constant-elements</code>: Hoisting fixes (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>)<a href="#5153-transform-react-constant-elements-hoisting-fixes-strml" class="hash-link" aria-label="Direct link to 5153-transform-react-constant-elements-hoisting-fixes-strml" title="Direct link to 5153-transform-react-constant-elements-hoisting-fixes-strml">​</a></h3><blockquote><p>Better hoisting inside variable declarations</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> bar </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">renderFoo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">foo bar</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">bar</span><span class="token punctuation">}</span><span class="token plain"> baz</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">baz</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token plain"> baz </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"baz"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">renderFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> bar </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token function-variable function" style="color:#4271ae">renderFoo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> _ref2</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        baz </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"baz"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        _ref2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">foo bar</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">bar</span><span class="token punctuation">}</span><span class="token plain"> baz</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">baz</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">renderFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Hoisting with Higher Order Components</p></blockquote><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">HOC</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">component</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> component</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Parent</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"parent"</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Child</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token maybe-class-name">Parent</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Child</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"child"</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token maybe-class-name">ChildTextContent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">Child</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">HOC</span><span class="token punctuation">(</span><span class="token maybe-class-name">Child</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">HOC</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">component</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> component</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Parent</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> _ref</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token maybe-class-name">Parent</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"child"</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token maybe-class-name">ChildTextContent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Child</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> _ref2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token maybe-class-name">Child</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">HOC</span><span class="token punctuation">(</span><span class="token maybe-class-name">Child</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"parent"</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Child</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5143-transform-react-constant-elements-fix-pathhoister-hoisting-jsx-member-expressions-on-this-strml"><a href="https://github.com/babel/babel/pull/5143" target="_blank" rel="noopener noreferrer">#5143</a> <code>transform-react-constant-elements</code>: Fix <code>PathHoister</code> hoisting JSX member expressions on <code>this</code> (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>)<a href="#5143-transform-react-constant-elements-fix-pathhoister-hoisting-jsx-member-expressions-on-this-strml" class="hash-link" aria-label="Direct link to 5143-transform-react-constant-elements-fix-pathhoister-hoisting-jsx-member-expressions-on-this-strml" title="Direct link to 5143-transform-react-constant-elements-fix-pathhoister-hoisting-jsx-member-expressions-on-this-strml">​</a></h3><p><code>&lt;this.component /&gt;</code> was previously hoisted outside its own function (doesn't make sense because otherwise <code>this</code> would be <code>undefined</code>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">component</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"div"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">component</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">component</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"div"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">component</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> _ref</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5030-transform-do-expressions-prevent-multiple-return-statements-in-a-loop-when-replacing-expressions-existentialism"><a href="https://github.com/babel/babel/pull/5030" target="_blank" rel="noopener noreferrer">#5030</a> <code>transform-do-expressions</code>: Prevent multiple return statements in a loop when replacing expressions. (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>)<a href="#5030-transform-do-expressions-prevent-multiple-return-statements-in-a-loop-when-replacing-expressions-existentialism" class="hash-link" aria-label="Direct link to 5030-transform-do-expressions-prevent-multiple-return-statements-in-a-loop-when-replacing-expressions-existentialism" title="Direct link to 5030-transform-do-expressions-prevent-multiple-return-statements-in-a-loop-when-replacing-expressions-existentialism">​</a></h3><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> p</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">do</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">while</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">p </span><span class="token operator">=</span><span class="token plain"> p</span><span class="token punctuation">.</span><span class="token property-access">parentPath</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string" style="color:#718c00">'a'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">else</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string" style="color:#718c00">'b'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> p</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">a</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ret</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">while</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">p </span><span class="token operator">=</span><span class="token plain"> p</span><span class="token punctuation">.</span><span class="token property-access">parentPath</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      _ret </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'a'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">else</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      _ret </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'b'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> _ret</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// previously had an extra return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5260-babel-register-fix-a-typeerror-with-the-cache-xtuc"><a href="https://github.com/babel/babel/pull/5260" target="_blank" rel="noopener noreferrer">#5260</a> <code>babel-register</code>: Fix a TypeError with the cache. (<a href="https://github.com/xtuc" target="_blank" rel="noopener noreferrer">@xtuc</a>)<a href="#5260-babel-register-fix-a-typeerror-with-the-cache-xtuc" class="hash-link" aria-label="Direct link to 5260-babel-register-fix-a-typeerror-with-the-cache-xtuc" title="Direct link to 5260-babel-register-fix-a-typeerror-with-the-cache-xtuc">​</a></h3><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5206-babel-traverse-deopt-evaluation-of-undefined-with-a-local-binding-boopathi"><a href="https://github.com/babel/babel/pull/5206" target="_blank" rel="noopener noreferrer">#5206</a> <code>babel-traverse</code>: Deopt evaluation of undefined with a local binding (<a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">@boopathi</a>)<a href="#5206-babel-traverse-deopt-evaluation-of-undefined-with-a-local-binding-boopathi" class="hash-link" aria-label="Direct link to 5206-babel-traverse-deopt-evaluation-of-undefined-with-a-local-binding-boopathi" title="Direct link to 5206-babel-traverse-deopt-evaluation-of-undefined-with-a-local-binding-boopathi">​</a></h3><p>If <code>undefined</code>, <code>NaN</code>, <code>Infinity</code> are redefined, deopt.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5195-babel-plugin-transform-runtime-dont-compile-certain-symbol-properties-taion"><a href="https://github.com/babel/babel/pull/5195" target="_blank" rel="noopener noreferrer">#5195</a> <code>babel-plugin-transform-runtime</code>: Don't compile certain symbol properties. (<a href="https://github.com/taion" target="_blank" rel="noopener noreferrer">@taion</a>)<a href="#5195-babel-plugin-transform-runtime-dont-compile-certain-symbol-properties-taion" class="hash-link" aria-label="Direct link to 5195-babel-plugin-transform-runtime-dont-compile-certain-symbol-properties-taion" title="Direct link to 5195-babel-plugin-transform-runtime-dont-compile-certain-symbol-properties-taion">​</a></h3><p>Don't pull in the individual <code>Symbol.asyncIterator</code>/<code>Symbol.observable</code> polyfills and pull in the full <code>Symbol</code> polyfill instead.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5258-babel-check-if-it-is-installed-globally-and-displays-correct-cli-message-xtina-starr"><a href="https://github.com/babel/babel/pull/5258" target="_blank" rel="noopener noreferrer">#5258</a> <code>babel</code>: Check if it is installed globally and displays correct cli message. (<a href="https://github.com/xtina-starr" target="_blank" rel="noopener noreferrer">@xtina-starr</a>)<a href="#5258-babel-check-if-it-is-installed-globally-and-displays-correct-cli-message-xtina-starr" class="hash-link" aria-label="Direct link to 5258-babel-check-if-it-is-installed-globally-and-displays-correct-cli-message-xtina-starr" title="Direct link to 5258-babel-check-if-it-is-installed-globally-and-displays-correct-cli-message-xtina-starr">​</a></h3><p>Now if you install <code>babel</code> the error message will display either <code>-g</code> or not.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5270-babel-generator-emit-parens-for-await-of-ternary-expressions-erikdesjardins"><a href="https://github.com/babel/babel/pull/5270" target="_blank" rel="noopener noreferrer">#5270</a> <code>babel-generator</code>: Emit parens for await of ternary expressions. (<a href="https://github.com/erikdesjardins" target="_blank" rel="noopener noreferrer">@erikdesjardins</a>)<a href="#5270-babel-generator-emit-parens-for-await-of-ternary-expressions-erikdesjardins" class="hash-link" aria-label="Direct link to 5270-babel-generator-emit-parens-for-await-of-ternary-expressions-erikdesjardins" title="Direct link to 5270-babel-generator-emit-parens-for-await-of-ternary-expressions-erikdesjardins">​</a></h3><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">async</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">asdf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5193-babel-generator-fix-missing-parens-when-functionexpression-is-a-tag-in-a-template-string-existentialism"><a href="https://github.com/babel/babel/pull/5193" target="_blank" rel="noopener noreferrer">#5193</a> <code>babel-generator</code>: Fix missing parens when <code>FunctionExpression</code> is a tag in a template string. (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>)<a href="#5193-babel-generator-fix-missing-parens-when-functionexpression-is-a-tag-in-a-template-string-existentialism" class="hash-link" aria-label="Direct link to 5193-babel-generator-fix-missing-parens-when-functionexpression-is-a-tag-in-a-template-string-existentialism" title="Direct link to 5193-babel-generator-fix-missing-parens-when-functionexpression-is-a-tag-in-a-template-string-existentialism">​</a></h3><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5235-transform-es2015-modules-commonjs-limit-export-node-default-assignment-stack-size-4323-mattste"><a href="https://github.com/babel/babel/pull/5235" target="_blank" rel="noopener noreferrer">#5235</a> <code>transform-es2015-modules-commonjs</code>: Limit export node default assignment stack size #4323. (<a href="https://github.com/mattste" target="_blank" rel="noopener noreferrer">@mattste</a>)<a href="#5235-transform-es2015-modules-commonjs-limit-export-node-default-assignment-stack-size-4323-mattste" class="hash-link" aria-label="Direct link to 5235-transform-es2015-modules-commonjs-limit-export-node-default-assignment-stack-size-4323-mattste" title="Direct link to 5235-transform-es2015-modules-commonjs-limit-export-node-default-assignment-stack-size-4323-mattste">​</a></h3><p>An interesting issue when importing/exporting a lot!</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> foo</span><span class="token imports punctuation">,</span><span class="token imports"> foo1</span><span class="token imports punctuation">,</span><span class="token imports"> foo2 </span><span class="token imports spread operator">...</span><span class="token imports"> </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"foo"</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// assume ... is 100 imports/exports</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports"> foo</span><span class="token exports punctuation">,</span><span class="token exports"> foo1</span><span class="token exports punctuation">,</span><span class="token exports"> foo2 </span><span class="token exports spread operator">...</span><span class="token exports"> </span><span class="token exports punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Part of the generated code looks like:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">exports</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Foo6</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> exports</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">Foo5</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token spread operator">...</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Thus with a file that <a href="https://github.com/callemall/material-ui/blob/c9af9606bcea6551ceaadc2f6430d629eb679e84/src/svg-icons/index.js" target="_blank" rel="noopener noreferrer">exports a lot of modules</a> it creates so many nested assignment nodes in the AST the code generator errors with <code>Maximum call stack size exceeded</code>.</p><p>The solution is to break up the expression into sets of 100.</p><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">exports</span><span class="token punctuation">.</span><span class="token property-access">foo100</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// split by 100</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">exports</span><span class="token punctuation">.</span><span class="token property-access">foo99</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> exports</span><span class="token punctuation">.</span><span class="token property-access">foo98</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"> exports</span><span class="token punctuation">.</span><span class="token property-access">foo1</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> exports</span><span class="token punctuation">.</span><span class="token property-access">foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword nil" style="color:#8959a8">undefined</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5255-babel-generator-use-trim-instead-of-lodashtrimend-for-codegen-performance-jwbay"><a href="https://github.com/babel/babel/pull/5255" target="_blank" rel="noopener noreferrer">#5255</a> <code>babel-generator</code>: Use <code>trim</code> instead of <code>lodash/trimEnd</code> for codegen performance (<a href="https://github.com/jwbay" target="_blank" rel="noopener noreferrer">@jwbay</a>)<a href="#5255-babel-generator-use-trim-instead-of-lodashtrimend-for-codegen-performance-jwbay" class="hash-link" aria-label="Direct link to 5255-babel-generator-use-trim-instead-of-lodashtrimend-for-codegen-performance-jwbay" title="Direct link to 5255-babel-generator-use-trim-instead-of-lodashtrimend-for-codegen-performance-jwbay">​</a></h3><blockquote><p><code>lodash/trimEnd</code> executes a regex against potentially massive strings which can freeze node. (106ms vs. 5ms)</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="5050-babel-traverse-rewrite-hub-as-an-interface-yongxu"><a href="https://github.com/babel/babel/pull/5050" target="_blank" rel="noopener noreferrer">#5050</a> <code>babel-traverse</code>: Rewrite <code>Hub</code> as an interface (<a href="https://github.com/yongxu" target="_blank" rel="noopener noreferrer">@yongxu</a>)<a href="#5050-babel-traverse-rewrite-hub-as-an-interface-yongxu" class="hash-link" aria-label="Direct link to 5050-babel-traverse-rewrite-hub-as-an-interface-yongxu" title="Direct link to 5050-babel-traverse-rewrite-hub-as-an-interface-yongxu">​</a></h3><blockquote><p>This was reverted due to an incompatible change to babel-core</p></blockquote><p>There are a few cases where <code>babel-traverse</code> can't be used standalone so this removes some code that tied <code>babel-traverse</code> to <code>babel-core</code>'s implementation.</p><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-committers-20">🌏 Committers: 20<a href="#-committers-20" class="hash-link" aria-label="Direct link to 🌏 Committers: 20" title="Direct link to 🌏 Committers: 20">​</a></h2><ul><li>Andres Suarez (<a href="https://github.com/zertosh" target="_blank" rel="noopener noreferrer">zertosh</a>)</li><li>Ben Alpert (<a href="https://github.com/spicyj" target="_blank" rel="noopener noreferrer">spicyj</a>)</li><li>Boopathi Rajaa (<a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">boopathi</a>)</li><li>Brian Ng (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">existentialism</a>)</li><li>Christina (<a href="https://github.com/xtina-starr" target="_blank" rel="noopener noreferrer">xtina-starr</a>) First PR!</li><li>Erik Desjardins (<a href="https://github.com/erikdesjardins" target="_blank" rel="noopener noreferrer">erikdesjardins</a>)</li><li>Fabian Finke (<a href="https://github.com/finkef" target="_blank" rel="noopener noreferrer">finkef</a>) First PR!</li><li>Henry Zhu (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">hzoo</a>)</li><li>Jimmy Jia (<a href="https://github.com/taion" target="_blank" rel="noopener noreferrer">taion</a>)</li><li>Justin Ridgewell (<a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">jridgewell</a>)</li><li>Logan Smyth (<a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">loganfsmyth</a>)</li><li>Matt Stewart (<a href="https://github.com/mattste" target="_blank" rel="noopener noreferrer">mattste</a>)</li><li>Samuel Reed (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">STRML</a>)</li><li>Sergey Rubanov (<a href="https://github.com/chicoxyzzy" target="_blank" rel="noopener noreferrer">chicoxyzzy</a>)</li><li>Sven SAULEAU (<a href="https://github.com/xtuc" target="_blank" rel="noopener noreferrer">xtuc</a>)</li><li>Vicente Jr Yuchitcho (<a href="https://github.com/chitchu" target="_blank" rel="noopener noreferrer">chitchu</a>) First PR!</li><li>Yongxu Ren (<a href="https://github.com/yongxu" target="_blank" rel="noopener noreferrer">yongxu</a>) First PR!</li><li><a href="https://github.com/jwbay" target="_blank" rel="noopener noreferrer">jwbay</a> First PR!</li><li>james kyle (<a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">thejameskyle</a>)</li><li>Łukasz Lityński (<a href="https://github.com/hex13" target="_blank" rel="noopener noreferrer">hex13</a>) First PR!</li></ul><p>Check out <a href="https://github.com/babel/babel/releases/tag/v6.23.0" target="_blank" rel="noopener noreferrer">Github</a> for the whole changelog!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The State of Babel]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/12/07/the-state-of-babel</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/12/07/the-state-of-babel</guid>
            <pubDate>Wed, 07 Dec 2016 14:30:00 GMT</pubDate>
            <description><![CDATA[- Some History]]></description>
            <content:encoded><![CDATA[<ul><li><a href="https://babeljs.io/blog/2016/12/07/the-state-of-babel#some-history" target="_blank" rel="noopener noreferrer">Some History</a></li><li><a href="https://babeljs.io/blog/2016/12/07/the-state-of-babel#current-status" target="_blank" rel="noopener noreferrer">Current Status</a></li><li><a href="https://babeljs.io/blog/2016/12/07/the-state-of-babel#the-future" target="_blank" rel="noopener noreferrer">The Future</a></li><li><a href="https://babeljs.io/blog/2016/12/07/the-state-of-babel#community" target="_blank" rel="noopener noreferrer">Community</a></li></ul><blockquote><p>Previous issues: <a href="https://github.com/babel/babel/issues/4130" target="_blank" rel="noopener noreferrer">Babel Roadmap #4130</a>, <a href="https://github.com/babel/babel/issues/2168" target="_blank" rel="noopener noreferrer">6.0 #2168</a></p></blockquote><p>Please check out the <a href="https://babeljs.io/blog/2016/12/07/the-state-of-babel#community" target="_blank" rel="noopener noreferrer">Community</a> section if nothing else.</p><blockquote><p>Also published as part of <a href="https://twitter.com/kosamari" target="_blank" rel="noopener noreferrer">Mariko Kosaka's</a> 2016 <a href="http://web.advent.today/" target="_blank" rel="noopener noreferrer">Web Advent Calendar</a>!</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="some-history">Some History<a href="#some-history" class="hash-link" aria-label="Direct link to Some History" title="Direct link to Some History">​</a></h2><p><a href="https://github.com/kittens" target="_blank" rel="noopener noreferrer">Sebastian</a> created "6to5" in September of 2014. Interestingly enough, he made it to scratch an itch he had with understanding programming languages and how they work. You might have assumed whoever created the project already knew how compilers worked and understood JavaScript perfectly... but you would be wrong! Check out his post for a great read of his story: <a href="https://medium.com/@sebmck/2015-in-review-51ac7035e272#.jdoo279bl" target="_blank" rel="noopener noreferrer">~2015 in Review</a>.</p><p>6to5 did exactly that: easily turn ES6 code into ES5 code. When 6to5 became Babel as mentioned in <a href="https://babeljs.io/blog/2015/02/15/not-born-to-die" target="_blank" rel="noopener noreferrer">Not Born to Die</a>, it became a platform: a suite of tools designed to create the next generation of JavaScript tooling. No longer did it just compile ES6 to ES5, it allowed developers to build tools on top of it.</p><p>Here are some of our milestones:</p><ul><li>In <a href="https://babeljs.io/blog/2015/03/31/5.0.0" target="_blank" rel="noopener noreferrer">5.0.0</a>, Babel aligned more with the <a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">TC39 process</a> by introducing <code>stages</code>, added a <code>.babelrc</code> config option, and created a plugin system for custom transforms.</li><li>In <a href="https://babeljs.io/blog/2015/10/29/6.0.0" target="_blank" rel="noopener noreferrer">6.0.0</a>, Babel became modular (a pretty controversial idea at the time). This was a huge change that led to opt-in functionality (no defaults) and the concept of <code>Presets</code> and Plugin Options.<ul><li>As mentioned in his article, Sebastian joined Facebook in July 2015 and worked on the entire development of Babel 6 on company time.</li></ul></li><li><a href="https://github.com/babel/babel/blob/main/.github/CHANGELOG-v6.md#638-6313" target="_blank" rel="noopener noreferrer">6.3.13</a> Sebastian extracted our <a href="https://github.com/babel/babel/blob/main/doc/design/monorepo.md" target="_blank" rel="noopener noreferrer">monorepo</a> build/publish tools into what is now <a href="https://github.com/lerna/lerna" target="_blank" rel="noopener noreferrer">Lerna</a>. (What's funny is <a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">James</a> rewrote it 3 times and I had to review everything)<ul><li>After this was around when both Sebastian and James got burned out on Babel, and a few contributors stepped up.</li><li>We struggled to find direction and deal with the bugs/requests coming in but we got a lot of stuff done!</li></ul></li><li><a href="https://github.com/babel/babel/releases/tag/v6.13.0" target="_blank" rel="noopener noreferrer">6.13.0</a> finally added <a href="http://babeljs.io/docs/plugins/#plugin-preset-options" target="_blank" rel="noopener noreferrer">Preset Options</a>.</li><li><a href="http://babeljs.io/blog/2016/08/24/6.14.0" target="_blank" rel="noopener noreferrer">6.14.0</a> added a <a href="http://babeljs.io/docs/plugins/preset-latest/" target="_blank" rel="noopener noreferrer">latest-preset</a> that keeps up to date with the yearly JavaScript specification.</li><li><a href="http://babeljs.io/blog/2016/09/28/6.16.0" target="_blank" rel="noopener noreferrer">6.16.0</a> allowed changing out the parser or code-generator.</li><li>In August, we released <a href="https://babeljs.io/blog/2016/08/30/babili" target="_blank" rel="noopener noreferrer">Babili, a minifier based on Babel</a>.</li><li>In September, we released the first version of <a href="https://github.com/babel/babel-preset-env" target="_blank" rel="noopener noreferrer">babel-preset-env</a> (read on for details).</li><li>After a year on <a href="https://twitter.com/sebmck/status/667097915605708804" target="_blank" rel="noopener noreferrer">Phabricator</a>, we moved back to to <a href="https://twitter.com/left_pad/status/773619871074648064" target="_blank" rel="noopener noreferrer">GitHub issues</a> thanks solely to <a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a> and his amazing (and underappreciated) work.</li></ul><blockquote><p>If you're using Babel, let us know with a <a href="https://github.com/babel/babel.github.io/pulls?utf8=%E2%9C%93&amp;q=is%3Apr+is%3Aclosed+%22New+User%3A%22" target="_blank" rel="noopener noreferrer">PR</a> to our <a href="http://babeljs.io/users/" target="_blank" rel="noopener noreferrer">users page</a>!</p></blockquote><p>Now <code>babel-core</code> is downloaded over 5 million times per month and almost 60 million times total and used at huge companies like Facebook/Netflix/Airbnb and other OSS projects like React/Yarn.</p><p>Thanks everyone for your continued support! We want to continue acting as the foundation of the JavaScript toolchain: compilation, linting, minification, codemods, code coverage, etc.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="current-status">Current Status<a href="#current-status" class="hash-link" aria-label="Direct link to Current Status" title="Direct link to Current Status">​</a></h2><p>If you're interested in helping out please check out the issues linked below!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="maintaining-babel-plugins-for-each-proposal-in-tc39-starting-from-stage-0">Maintaining Babel plugins <a href="https://github.com/tc39/proposals" target="_blank" rel="noopener noreferrer">for each proposal in TC39</a> starting from Stage 0<a href="#maintaining-babel-plugins-for-each-proposal-in-tc39-starting-from-stage-0" class="hash-link" aria-label="Direct link to maintaining-babel-plugins-for-each-proposal-in-tc39-starting-from-stage-0" title="Direct link to maintaining-babel-plugins-for-each-proposal-in-tc39-starting-from-stage-0">​</a></h3><p><a href="https://github.com/tc39" target="_blank" rel="noopener noreferrer">TC39</a> stands for Ecma International, Technical Committee 39: it's the committee that makes JavaScript.</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr"><a href="https://twitter.com/b0rk" target="_blank" rel="noopener noreferrer">@b0rk</a> Short answers:<br><br>Who's there? Engine implementers, developers, a handful of academics and theorists, and <a href="https://twitter.com/BrendanEich" target="_blank" rel="noopener noreferrer">@BrendanEich</a>.</p>— Yehuda Katz (@wycats) <a href="https://twitter.com/wycats/status/803821500394598401" target="_blank" rel="noopener noreferrer">November 30, 2016</a></blockquote><p>Babel uses <a href="http://babeljs.io/docs/plugins/#stage-x-experimental-presets-" target="_blank" rel="noopener noreferrer">TC39's concept of stages</a> to categorize its experimental plugins. Users should be able to easily use features before they are all implemented in browsers in <a href="https://tc39.github.io/process-document/" target="_blank" rel="noopener noreferrer">stage 4 of the TC39 process</a>.</p><p>Babel is fundamental in the process given its place in the ecosystem: it is significantly easier for a developer to update a <code>.babelrc</code> file than a browser flag and much faster to write a Babel plugin than to implement the feature natively in the browser. This is the core of Babel.</p><p>But the proposals process involves significant iteration: proposals can change in syntax or even get dropped. Because TC39 meets every 2 months, plugins should be updated as least as often as each change in stage so that users can be in sync.</p><blockquote><p>Early feedback to the proposal champion and committee is extremely valuable although it is recommended to use Stage 0/1/2 features with caution.
Although companies like Facebook take advantage of these kinds of features, they have created codemods to allow easy change.</p></blockquote><hr><p>There isn't enough time or resources to maintain each plugin, especially when there are spec updates.</p><ul><li>Some transforms are simply out of date such as decorators. Logan had to port the previous spec <a href="https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy" target="_blank" rel="noopener noreferrer">babel-plugin-transform-decorators-legacy</a> for Babel 6 and we haven't had anyone able to rewrite it for the updated spec.</li><li><a href="https://github.com/babel/babel/pull/3473" target="_blank" rel="noopener noreferrer">babel/babel#3473 - Async iteration proposal</a> wasn't merged for so long because we just didn't have time to review it. By the time it was merged it had already moved
from stage 2 to stage 3.</li></ul><hr><p>Next we're going to be working with:</p><ul><li><a href="https://github.com/littledan" target="_blank" rel="noopener noreferrer">Daniel Ehrenberg</a> on <a href="https://github.com/tc39/proposal-private-fields" target="_blank" rel="noopener noreferrer">Private Fields (Stage 2)</a></li><li><a href="https://github.com/wycats" target="_blank" rel="noopener noreferrer">Yehuda Katz</a> on <a href="http://tc39.github.io/proposal-decorators/" target="_blank" rel="noopener noreferrer">Class and Property Decorators (Stage 2)</a></li><li><a href="https://mathiasbynens.be/" target="_blank" rel="noopener noreferrer">Mathias Bynens</a> on <a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noopener noreferrer">Unicode Property Escapes in Regular Expressions (Stage 2)</a> via <a href="https://github.com/babel/babel/pull/3683" target="_blank" rel="noopener noreferrer">babel/babel#3683</a></li></ul><p>Relevant Issues:</p><ul><li>Should we create a codemod for Stage X proposals at the same time as creating the actual transform?</li><li><a href="https://github.com/babel/babel/issues/4408" target="_blank" rel="noopener noreferrer">Private Fields</a></li><li><a href="https://github.com/babel/babel/issues/2645" target="_blank" rel="noopener noreferrer">Decorators Proposal</a></li></ul><blockquote><p>Check out <a href="https://thefeedbackloop.xyz/tc39-november-2016-day-1/" target="_blank" rel="noopener noreferrer">thefeedbackloop.xyz</a> for more info on TC39!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="maintaining-other-ecosystem-plugins-jsxflow">Maintaining other ecosystem plugins: JSX/Flow<a href="#maintaining-other-ecosystem-plugins-jsxflow" class="hash-link" aria-label="Direct link to Maintaining other ecosystem plugins: JSX/Flow" title="Direct link to Maintaining other ecosystem plugins: JSX/Flow">​</a></h3><p>Babel is vital to the <a href="https://reactjs.org" target="_blank" rel="noopener noreferrer">React</a> and <a href="https://flowtype.org/" target="_blank" rel="noopener noreferrer">Flow</a> ecosystems, and we work closely with the relevant teams at Facebook.</p><ul><li><a href="https://babeljs.io/docs/plugins/#react" target="_blank" rel="noopener noreferrer">React plugins</a>, <a href="https://babeljs.io/docs/plugins/preset-react/" target="_blank" rel="noopener noreferrer">React preset</a><ul><li>These cover the main <code>JSX</code> transform, development plugins, and optimizations.</li></ul></li><li><a href="https://babeljs.io/docs/plugins/transform-flow-strip-types" target="_blank" rel="noopener noreferrer">Flow plugin</a></li></ul><p>Relevant Issue Labels:</p><ul><li><a href="https://github.com/babel/babel/issues?utf8=%E2%9C%93&amp;q=is%3Aissue%20is%3Aopen%20label%3A%22react%22%20" target="_blank" rel="noopener noreferrer">babel/babel: React issues</a></li><li><a href="https://github.com/facebook/react/labels/Component%3A%20Optimizing%20Compiler" target="_blank" rel="noopener noreferrer">facebook/react: Optimizing Compiler</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-preset-env-autoprefixer-for-babel"><a href="https://github.com/babel/babel-preset-env" target="_blank" rel="noopener noreferrer">babel-preset-env</a> ("autoprefixer" for Babel)<a href="#babel-preset-env-autoprefixer-for-babel" class="hash-link" aria-label="Direct link to babel-preset-env-autoprefixer-for-babel" title="Direct link to babel-preset-env-autoprefixer-for-babel">​</a></h3><p>JavaScript compilation is a moving target: There are yearly updates to the spec, browser vendors are constantly updating to that spec, and users may drop support for earlier browsers. At first glance, there doesn't seem to be a fixed target for what we should compile our JavaScript down to.</p><p><img loading="lazy" src="https://cloud.githubusercontent.com/assets/588473/19214029/58deebce-8d48-11e6-9004-ee3fbcb75d8b.png" class="img_SS3x"></p><blockquote><p>The <a href="https://github.com/kangax/" target="_blank" rel="noopener noreferrer">compat-table</a> is updated constantly and is used for this preset.</p></blockquote><p>This is where <code>babel-preset-env</code> comes in: it's a Babel preset that automatically determines the correct Babel plugins to use based on the provided environments.</p><p>Its goal is both simplicity in use and efficiency in output: you only need to worry about your target environments to be able to take advantage of native code. The preset decides for you the required plugins.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="some-example-configs">Some example configs<a href="#some-example-configs" class="hash-link" aria-label="Direct link to Some example configs" title="Direct link to Some example configs">​</a></h4><p>Targeting Chrome 55 + last 2 versions of other browsers via <a href="https://github.com/ai/browserslist" target="_blank" rel="noopener noreferrer">browserslist</a></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token string-property property">"chrome"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">55</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token string-property property">"browsers"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"last 2 versions"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Targeting the current Node.js version (uses <code>process.versions.node</code>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token string-property property">"node"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"current"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Chrome 55 <code>useBuiltIns</code> + webpack 2</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"env"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"targets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token string-property property">"chrome"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">55</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"modules"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"useBuiltIns"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"babel-polyfill"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Out (different based on environment)</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.string.pad-start"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"core-js/modules/es7.string.pad-end"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Relevant Issues:</p><ul><li>Next big feature: apply the same idea of preset-env to polyfills as well <a href="https://github.com/babel/babel-preset-env/issues/20" target="_blank" rel="noopener noreferrer">babel/babel-preset-env#20</a> with corresponding PR in <a href="https://github.com/babel/babel-preset-env/pull/56" target="_blank" rel="noopener noreferrer">babel/babel-preset-env#56</a>.</li><li><a href="https://github.com/babel/babel-preset-env/issues/26" target="_blank" rel="noopener noreferrer">Using browserslist</a> and <a href="https://github.com/babel/babel-preset-env/pull/51" target="_blank" rel="noopener noreferrer">PR</a></li><li><a href="https://github.com/ai/browserslist/issues/75" target="_blank" rel="noopener noreferrer">"Node.js versions support" in Browserslist</a></li><li><a href="https://github.com/kangax/compat-table/issues/711" target="_blank" rel="noopener noreferrer">Publish runnable tests &amp; browser data to npm</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="linting-via-babel-eslint">Linting via <a href="https://github.com/babel/babel-eslint" target="_blank" rel="noopener noreferrer">babel-eslint</a><a href="#linting-via-babel-eslint" class="hash-link" aria-label="Direct link to linting-via-babel-eslint" title="Direct link to linting-via-babel-eslint">​</a></h3><img loading="lazy" class="img-responsive" alt="example of eslint" src="/assets/2016-12-07-the-state-of-babel/eslint.png"><p>ESLint doesn't support new language features until they reach Stage 4 of the proposals process. For this reason we maintain <a href="https://github.com/babel/babel-eslint" target="_blank" rel="noopener noreferrer">babel-eslint</a> (a custom ESLint parser) so you can continue to lint JavaScript with experimental syntax.</p><p>This project was one of the hardest projects to work on: because it is just a compatibility layer between Babel and ESLint there is inherently a constant need for updates when either projects update and a high risk of unexpected changes due to monkey-patching. It was unfortunate to get issues like <a href="https://github.com/babel/babel-eslint/issues/243" target="_blank" rel="noopener noreferrer">babel/babel-eslint#243</a> or <a href="https://github.com/babel/babel-eslint/issues/267" target="_blank" rel="noopener noreferrer">babel/babel-eslint#267</a>.</p><p>To that end, we'd like to lessen the maintenance burden of this project by improving our scope and traversal interop with ESLint. It might even be interesting to be able to write ESLint rules using babel APIs or vice versa?</p><p>Relevant Issues:</p><ul><li><a href="https://github.com/babel/babel/issues/1829" target="_blank" rel="noopener noreferrer">Previous Linting APIs Discussion</a></li><li><a href="https://github.com/babel/babel-eslint/issues/62" target="_blank" rel="noopener noreferrer">Running smoke tests on ESLint</a></li><li><a href="https://github.com/babel/babel-eslint/issues/88" target="_blank" rel="noopener noreferrer">babel/babel-eslint#88</a> is still relevant now</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="minification">Minification<a href="#minification" class="hash-link" aria-label="Direct link to Minification" title="Direct link to Minification">​</a></h3><p><a href="https://github.com/babel/babili" target="_blank" rel="noopener noreferrer">Babili</a> is our new Babel-powered minifier, enabling you to produce minified code while targeting the latest browsers.</p><p><strong>In</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Mangler</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">program</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">program</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> program</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Mangler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Out</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// ES2015 code -&gt; Babili -&gt; Minified ES2015 Code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">a</span><span class="token punctuation">{</span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">b</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">program</span><span class="token operator">=</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">a</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Check out our <a href="http://babeljs.io/blog/2016/08/30/babili" target="_blank" rel="noopener noreferrer">blog post</a> for more info.</p><p>Since it was recently released, we're looking for some new contributors! There's a lot of small bugs and things that could be improved for those looking for a new project to help out with!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="codemods--refactoring--eslint---fix">Codemods / Refactoring / <code>eslint --fix</code><a href="#codemods--refactoring--eslint---fix" class="hash-link" aria-label="Direct link to codemods--refactoring--eslint---fix" title="Direct link to codemods--refactoring--eslint---fix">​</a></h3><p>A <code>codemod</code> is a tool-assisted code modification; a fancy find-and-replace.</p><p>If you wanted to change <code>merge({})</code> to <code>Object.assign({})</code> (and maybe later <a href="https://github.com/sebmarkbage/ecmascript-rest-spread" target="_blank" rel="noopener noreferrer">object rest</a>) you might do a regex replace. But you don't want to replace the other parts of the code that also might be called <code>merge</code> such as imports/exports, strings, comments, and local variables. To do it safely you'll want something more powerful that only changes the specific code you need.</p><p>Although Babel already handles transforming code into other code, it doesn't really care about the styling of the input code as a compiler. After using Babel with its default options to do a codemod, <code>git diff</code> looks really messy.</p><p>Enter <a href="https://github.com/benjamn/recast" target="_blank" rel="noopener noreferrer">Recast</a>: a tool that preserves the formatting of unmodified code while also pretty-printing any new AST nodes.</p><p><img loading="lazy" src="https://cloud.githubusercontent.com/assets/588473/16584612/04a82078-428b-11e6-9f79-a665eef848ea.gif" alt="recast" class="img_SS3x"></p><blockquote><p>In the screenshot above, the top-left pane is the input code and the bottom-right pane is the output code after the babel plugin is run. In this case it's preserving the whitespace of the input code when possible.</p></blockquote><p>By passing in <a href="https://github.com/benjamn/recast" target="_blank" rel="noopener noreferrer">Recast</a> in the options, Babel can power the future of codemods.</p><p><code>.babelrc</code></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"parserOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"parser"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"recast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"generatorOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"generator"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"recast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Run the relevant Babel transform(s) on the source code and overwrite it:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">babel src -d src</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This feature was just made possible so we're looking forward to making it easier to use and seeing the transformations it can enable. Check out the <a href="https://babeljs.io/blog/2016/09/28/6.16.0#-new-feature" target="_blank" rel="noopener noreferrer">6.16.0 blog post</a> for more info!</p><p>Other relevant projects: <a href="https://github.com/facebook/jscodeshift" target="_blank" rel="noopener noreferrer">JSCodeshift</a>, <a href="https://github.com/cpojer/js-codemod" target="_blank" rel="noopener noreferrer">js-codemod</a>, <a href="https://github.com/lebab/lebab" target="_blank" rel="noopener noreferrer">Lebab</a>.</p><p>Relevant Issues:</p><ul><li><a href="https://github.com/lebab/lebab/issues/138" target="_blank" rel="noopener noreferrer">Rewriting Lebab as a Babel transformer</a></li><li><a href="https://github.com/facebook/jscodeshift/issues/168" target="_blank" rel="noopener noreferrer">Babel integration with jscodeshift</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="code-coverage--instrumentation">Code Coverage / Instrumentation<a href="#code-coverage--instrumentation" class="hash-link" aria-label="Direct link to Code Coverage / Instrumentation" title="Direct link to Code Coverage / Instrumentation">​</a></h3><p><img loading="lazy" src="https://istanbul.js.org/assets/browser.png" class="img_SS3x"></p><p>We want to support tools like <a href="https://github.com/istanbuljs/nyc" target="_blank" rel="noopener noreferrer">nyc</a> and <a href="https://github.com/istanbuljs/babel-plugin-istanbul" target="_blank" rel="noopener noreferrer">babel-plugin-istanbul</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-ecosystem">Plugin Ecosystem<a href="#plugin-ecosystem" class="hash-link" aria-label="Direct link to Plugin Ecosystem" title="Direct link to Plugin Ecosystem">​</a></h3><p>Thanks to our vibrant community, new plugins are constantly being created: whether it be a new way to write your <a href="https://github.com/zeit/styled-jsx" target="_blank" rel="noopener noreferrer">css in jsx</a> or <a href="https://github.com/speedskater/babel-plugin-rewire" target="_blank" rel="noopener noreferrer">rewire your tests</a>.</p><blockquote><p>Currently there are &gt; 1200 <a href="https://www.npmjs.com/search?q=babel-plugin-" target="_blank" rel="noopener noreferrer">babel-plugins on npm</a>.</p></blockquote><p>We've had some interesting discussions on how we can grow and support the plugin ecosystem. We could try to watch all the repos but that is obviously overwhelming.</p><p>It might be interesting to create some bots to automate a few tasks: create specific Babel plugins/ESLint rules for babel-plugins, write codemods to update API changes, and integrate plugins into our smoke test.</p><blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr"><a href="https://twitter.com/jaredforsyth" target="_blank" rel="noopener noreferrer">@jaredforsyth</a> <a href="https://twitter.com/reactjs" target="_blank" rel="noopener noreferrer">@reactjs</a> My five minute POC ☺️ <a href="https://t.co/v74UFHsSJG" target="_blank" rel="noopener noreferrer">https://t.co/v74UFHsSJG</a> <a href="https://t.co/B3YwVWkH5g" target="_blank" rel="noopener noreferrer">pic.twitter.com/B3YwVWkH5g</a></p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/805971589430968320" target="_blank" rel="noopener noreferrer">December 6, 2016</a></blockquote><ul><li>Should we create a newsletter for new/useful plugins?</li><li>How can we teach people about plugins and how to write them?</li><li>How can we make <a href="http://astexplorer.net/" target="_blank" rel="noopener noreferrer">ASTExplorer</a> better?</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="documentation-this-website">Documentation (this website!)<a href="#documentation-this-website" class="hash-link" aria-label="Direct link to Documentation (this website!)" title="Direct link to Documentation (this website!)">​</a></h3><p>Docs contributions have definitely been lacking in the <a href="https://github.com/babel/babel.github.io/graphs/contributors" target="_blank" rel="noopener noreferrer">last year</a>.</p><p>However just recently we've done a lot of awesome stuff:</p><ul><li><a href="https://github.com/Daniel15" target="_blank" rel="noopener noreferrer">@Daniel15</a> has been maintaining <a href="https://github.com/babel/babel-standalone" target="_blank" rel="noopener noreferrer">babel-standalone</a> which we use in the REPL and has some automation when new releases get out.</li><li><a href="https://github.com/maxiloc" target="_blank" rel="noopener noreferrer">@maxiloc</a> added search functionality via Algolia via <a href="https://github.com/babel/babel.github.io/pull/977" target="_blank" rel="noopener noreferrer">#977</a></li></ul><p>We've also added new collaborators:</p><ul><li><a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>: Added Discourse to all github pages via <a href="https://github.com/babel/babel.github.io/pull/875" target="_blank" rel="noopener noreferrer">#875</a></li><li><a href="https://github.com/xtuc" target="_blank" rel="noopener noreferrer">@xtuc</a>: Added support for reading the README from the babel repo so we don't have to sync 2 copies of docs via <a href="https://github.com/babel/babel.github.io/pull/990" target="_blank" rel="noopener noreferrer">#990</a></li><li><a href="https://github.com/fredericmarx" target="_blank" rel="noopener noreferrer">@fredericmarx</a>: Added support for a copy to clipboard button for code snippets via <a href="https://github.com/babel/babel.github.io/pull/998" target="_blank" rel="noopener noreferrer">#998</a></li><li><a href="https://github.com/seedofjoy" target="_blank" rel="noopener noreferrer">@seedofjoy</a>: Added a resize ability for the REPL via <a href="https://github.com/babel/babel.github.io/pull/1003" target="_blank" rel="noopener noreferrer">#1003</a></li></ul><p>Some Ideas</p><ul><li>All plugins should have examples. Can also embed <a href="https://runkit.com/home" target="_blank" rel="noopener noreferrer">RunKit</a> or the REPL.</li><li>Update FAQ with common errors</li><li>API docs / make <a href="https://github.com/thejameskyle/babel-handbook" target="_blank" rel="noopener noreferrer">babel-handbook</a> better</li></ul><p>Relevant Issues:</p><ul><li><a href="https://github.com/babel/babel.github.io/issues/930" target="_blank" rel="noopener noreferrer">Reorganizing the docs layout</a></li><li><a href="https://github.com/babel/babel.github.io/issues/831" target="_blank" rel="noopener noreferrer">Showcase community plugins</a></li><li><a href="https://github.com/babel/babel.github.io/issues/27" target="_blank" rel="noopener noreferrer">Adding a resources page</a></li><li><a href="https://github.com/babel/babel.github.io/issues/994" target="_blank" rel="noopener noreferrer">Learn ES2015: teach others about ES2015+</a></li><li><a href="https://github.com/babel/babel.github.io/issues/59" target="_blank" rel="noopener noreferrer">REPL: adding example dropdowns</a></li><li><a href="https://github.com/babel/babel.github.io/issues/92" target="_blank" rel="noopener noreferrer">REPL: supporting all options</a></li><li><a href="https://github.com/babel/babel.github.io/issues/858" target="_blank" rel="noopener noreferrer">REPL: allow the REPL to import any community plugin from npm</a></li><li><a href="https://github.com/fkling/astexplorer/issues/70" target="_blank" rel="noopener noreferrer">REPL: Use ASTexplorer</a></li><li><a href="https://github.com/fkling/astexplorer/issues/166" target="_blank" rel="noopener noreferrer">ASTexplorer: Real Time collaboration</a></li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-future">The Future<a href="#the-future" class="hash-link" aria-label="Direct link to The Future" title="Direct link to The Future">​</a></h2><blockquote><p>NOTE: Everything below can be changed or dropped. Some might be already in the works and others are just suggestions that need a proper discussion/champion.</p></blockquote><blockquote><p>Priority should be determined on what the community needs: not because it would be nice to have.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-api-changes"><a href="https://github.com/babel/notes/blob/master/2016/2016-08/august-01.md#potential-api-changes-for-traversal" target="_blank" rel="noopener noreferrer">Plugin API Changes</a><a href="#plugin-api-changes" class="hash-link" aria-label="Direct link to plugin-api-changes" title="Direct link to plugin-api-changes">​</a></h3><p>There is a lot of confusion around how plugins/presets interact regarding ordering. This results in bugs and issues with the config which require users to place plugins before/after others in a non-intuitive way.</p><p>We’re currently discussing API changes that could reduce the confusion. However, since this is a fundamental change to the core of Babel, it might take a while to figure out the best approach.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="versioning">Versioning<a href="#versioning" class="hash-link" aria-label="Direct link to Versioning" title="Direct link to Versioning">​</a></h3><p>Since Babel 6 we've used a <a href="https://github.com/lerna/lerna#how-it-works" target="_blank" rel="noopener noreferrer">"fixed" mode of versioning</a> via Lerna. This is what allows us to release multiple packages at the same time all under the same version (if that package changes). This is nice because you don't have to manually set a version for each package but everything moves together. The only time this could cause an error is when one on the packages makes a breaking change: then every package also will bump major versions.</p><p>This is explained more in <a href="https://github.com/babel/notes/blob/master/2016/2016-07/july-31.md#future-of-babels-release-process-and-its-ecosystem" target="_blank" rel="noopener noreferrer">babel/notes</a> but we still need to figure out the best plan of action for the project.</p><p>What happens when we need to update a Stage 0 spec to Stage 1 and it's a breaking change to the parser? Are we just going to bump the major version, wait to batch some changes up, or figure out how to do it via multiple versions of plugins?</p><p><a href="https://github.com/babel/babel/issues/4950" target="_blank" rel="noopener noreferrer">Discussion Issue</a></p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="changing-the-mindset-around-stage-x-presets">Changing the Mindset Around Stage X Presets<a href="#changing-the-mindset-around-stage-x-presets" class="hash-link" aria-label="Direct link to Changing the Mindset Around Stage X Presets" title="Direct link to Changing the Mindset Around Stage X Presets">​</a></h4><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">My rule of thumb on how I decide what future features to transpile:<br>"Could I reasonably codemod this if it changes?"<br>Don't do it otherwise.</p>— Kent C. Dodds (@kentcdodds) <a href="https://twitter.com/kentcdodds/status/803815749416456196" target="_blank" rel="noopener noreferrer">November 30, 2016</a></blockquote><p>Relevant Issues:</p><ul><li><a href="https://github.com/babel/babel/issues/4914" target="_blank" rel="noopener noreferrer">Should we rename the stage x presets to explain more that they are "experimental"</a></li></ul><h4 class="anchor anchorWithStickyNavbar_JmGV" id="speed">Speed<a href="#speed" class="hash-link" aria-label="Direct link to Speed" title="Direct link to Speed">​</a></h4><p>Performance is a feature! Other things can be more of a priority at times (bug fixes, spec compliancy, etc) but it's still important in a few different aspects.</p><ul><li>How can we reduce the size/time of install, especially for a project with multiple packages? (this is helped by <a href="https://yarnpkg.com" target="_blank" rel="noopener noreferrer">yarn</a>)</li><li>How can we parse faster?</li><li>How can we make faster plugins (and measure them individually)?</li><li>How can we generate the transformed code faster?</li><li>How can we generate code that runs fast in the browser (<a href="https://fhinkel.github.io/six-speed/" target="_blank" rel="noopener noreferrer">https://fhinkel.github.io/six-speed/</a>)?</li></ul><p>If you to read the compiled output and see issues, then report it and ask for help in making a PR!</p><p>Previous Issues:</p><ul><li><a href="https://github.com/babel/babel/issues/1486" target="_blank" rel="noopener noreferrer">Speeeeed</a></li><li><a href="https://github.com/babel/babel/pull/3283" target="_blank" rel="noopener noreferrer">Amazing PR to improve babel-generator by @gzzhanghao</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="possible-typescript-support">Possible TypeScript Support?<a href="#possible-typescript-support" class="hash-link" aria-label="Direct link to Possible TypeScript Support?" title="Direct link to Possible TypeScript Support?">​</a></h3><p>Maybe Babel could learn to understand TypeScript syntax (like we do with Flow)? We could add a plugin to strip TypeScript types for better interop.</p><p>This would mean parsing TypeScript specific syntax and stripping it out. However TypeScript does have non-type syntax, so for things like <code>enum</code> we will would have to discuss more.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="use-type-information">Use Type Information?<a href="#use-type-information" class="hash-link" aria-label="Direct link to Use Type Information?" title="Direct link to Use Type Information?">​</a></h3><p>Integrate with a type system such as Flow/TypeScript to make optimizations. This just means that Babel should be able to gain the knowledge through those tools that an identifier <code>arr</code> is actually an <code>Array</code> or not.</p><blockquote><p>There are a few plugins that actually do type checking: <a href="https://github.com/codemix/babel-plugin-typecheck" target="_blank" rel="noopener noreferrer">babel-plugin-typecheck</a> and <a href="https://github.com/gcanti/babel-plugin-tcomb" target="_blank" rel="noopener noreferrer">babel-plugin-tcomb</a></p></blockquote><ul><li><a href="https://github.com/babel/babel/issues/653" target="_blank" rel="noopener noreferrer">Previous Issue</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="taking-in-a-dependency-graph--operate-multi-file">Taking in a Dependency Graph / Operate Multi-file?<a href="#taking-in-a-dependency-graph--operate-multi-file" class="hash-link" aria-label="Direct link to Taking in a Dependency Graph / Operate Multi-file?" title="Direct link to Taking in a Dependency Graph / Operate Multi-file?">​</a></h3><p>Then we could integrate with other tools like Webpack better. This would allow cross file transformations or whole codebase optimizations. The main reason for this would be for the minifier (being able to remove properties based on checking the usage across the whole application) or for example providing errors for missing/invalid import/exports.</p><ul><li><a href="https://github.com/babel/babel/issues/4949" target="_blank" rel="noopener noreferrer">Discussion Issue</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="parser-errors">Parser Errors<a href="#parser-errors" class="hash-link" aria-label="Direct link to Parser Errors" title="Direct link to Parser Errors">​</a></h3><p>Better error messages from the parser like in <a href="http://elm-lang.org/blog/compiler-errors-for-humans" target="_blank" rel="noopener noreferrer">Compiler Errors for Humans</a>.</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">babel-eslint@7.1.1: now adds the code frame when there's a parser error! <a href="https://t.co/yoxRpGXq5E" target="_blank" rel="noopener noreferrer">pic.twitter.com/yoxRpGXq5E</a></p>— Henry Zhu (@left_pad) <a href="https://twitter.com/left_pad/status/799388723896946692" target="_blank" rel="noopener noreferrer">November 17, 2016</a></blockquote><blockquote><p>It is obvious that we all want to see helpful errors!</p></blockquote><p>We can do better inference/guessing on user intention to prevent vague errors. Let us know in what cases that happens!</p><p>Relevant Issues:</p><ul><li><a href="https://github.com/babel/babylon/pull/125" target="_blank" rel="noopener noreferrer">#125 Better message when using <code>await</code> in a non-async function</a></li><li><a href="https://github.com/babel/babylon/issues/169" target="_blank" rel="noopener noreferrer">#169 Better message for a syntax error when a plugin isn't enabled</a></li><li><a href="https://github.com/babel/babylon/issues/212" target="_blank" rel="noopener noreferrer">#212 Better message for using super when not using a non-object method</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-init"><code>babel-init</code><a href="#babel-init" class="hash-link" aria-label="Direct link to babel-init" title="Direct link to babel-init">​</a></h3><p>Basically a way to set up Babel more easily like <a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a> does.</p><ul><li>Set up a <code>.babelrc</code> from scratch, prompt with questions</li></ul><p>Possible Idea:</p><ul><li>Ask about target environments (browsers, node) and pass to <code>babel-preset-env</code></li><li>Ask about experimental features (add specific plugins)</li><li>Update the <code>babel</code> npm package to do something again: Make it the default/opt-in/opinionated <code>babel</code> that Babel 5 was. It can default to using <code>env</code> and say the <code>latest 2 browsers</code> (without any config).</li></ul><p>Relevant Issues:</p><ul><li><a href="https://github.com/babel/babel/issues/3977" target="_blank" rel="noopener noreferrer">CLI (babel init) command</a></li><li><a href="https://github.com/babel/babel/issues/4951" target="_blank" rel="noopener noreferrer">Repurpose <code>babel</code> npm package</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="run-tc39test262">Run <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">tc39/test262</a><a href="#run-tc39test262" class="hash-link" aria-label="Direct link to run-tc39test262" title="Direct link to run-tc39test262">​</a></h3><blockquote><p>test262 tests conformance to the continually maintained draft future ECMAScript standard found at <a href="http://tc39.github.io/ecma262/" target="_blank" rel="noopener noreferrer">tc39.github.io/ecma262</a>, together with any Stage 3 or later TC39 proposals. It is maintained by Tom Care (<a href="https://github.com/tcare" target="_blank" rel="noopener noreferrer">@tcare</a>) with significant contributions from many in the ECMAScript community.</p></blockquote><p>Running the official spec tests against Babel can make sure we comply to the spec or at least know when we don't. We'll want to figure out how to do filtering on things we can't compile (proxy, TCO, etc) and set up an easy way to check failing tests and file issues and PRs for them.</p><p>Relevant Issues:</p><ul><li><a href="https://github.com/kangax/compat-table/issues/830" target="_blank" rel="noopener noreferrer">Adding test262 to compat-table</a></li><li><a href="https://github.com/bakkot/test262-web-runner/" target="_blank" rel="noopener noreferrer">Running test262 on the web</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="smokeintegration-tests">Smoke/Integration Tests<a href="#smokeintegration-tests" class="hash-link" aria-label="Direct link to Smoke/Integration Tests" title="Direct link to Smoke/Integration Tests">​</a></h3><p>It would be useful to either have a reverse <a href="https://greenkeeper.io" target="_blank" rel="noopener noreferrer">Greenkeeper</a> or to run tests with master branch of Babel so that we can catch any major regressions before any release (node has the <a href="https://github.com/nodejs/citgm" target="_blank" rel="noopener noreferrer">citgm project</a> for this). In theory we would want to take the biggest open source projects that use Babel and run their tests.</p><p><a href="https://github.com/motiz88/babel-smoke-tests" target="_blank" rel="noopener noreferrer">motiz88/babel-smoke-tests</a> is a good start! It would also be great if there's already something like this out there!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="program-analysis">Program Analysis<a href="#program-analysis" class="hash-link" aria-label="Direct link to Program Analysis" title="Direct link to Program Analysis">​</a></h3><ul><li><a href="https://en.wikipedia.org/wiki/Program_slicing" target="_blank" rel="noopener noreferrer">Program Slicing</a></li></ul><p>There was a great talk by <a href="https://twitter.com/inconshreveable" target="_blank" rel="noopener noreferrer">Alan Shreve</a> called <a href="https://www.youtube.com/watch?v=dSqLt8BgbRQ" target="_blank" rel="noopener noreferrer">"Idealized Commit Logs: Code Simplification via Program Slicing"</a> which inspired @kentcdodds to try it out in JavaScript via <a href="http://slides.com/kentcdodds/faster-javascript#/" target="_blank" rel="noopener noreferrer">slice-js</a>.</p><p>The general idea is that we have a lot of tools to help us write code but not a lot for helping us understand/read code. You can think of code-slicing as a form of targeted dead-code elimination.</p><p><img loading="lazy" src="https://s3.amazonaws.com/media-p.slid.es/uploads/55780/images/3189688/Screen_Shot_2016-11-02_at_11.46.25_PM.png" alt="slice-js" class="img_SS3x"></p><p>A program slice basically cuts away from the source code the code that isn't used for a test case that you run. If there are lots of if statements and loops that aren't run during your usecase then it won't show up in the program slice.</p><ul><li>Semantic (AST aware) Grepping tool?</li></ul><p>Similar to <a href="http://www.graspjs.com/" target="_blank" rel="noopener noreferrer">graspjs</a>, I think it would be interesting to be able to do a find-replace with the input being an AST. It would allow us to create other analysis tools: the ability to find all IIFE's in our code, the number of times a method is called, or even how many Classes we have in our codebase.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel---settings"><code>babel --settings</code><a href="#babel---settings" class="hash-link" aria-label="Direct link to babel---settings" title="Direct link to babel---settings">​</a></h3><p>This command would print out all info (also when erroring). It would also include performance metrics on how long each plugin takes.</p><ul><li><a href="https://github.com/babel/babel/issues/2960" target="_blank" rel="noopener noreferrer">Discussion Issue</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="parser-unity">Parser Unity<a href="#parser-unity" class="hash-link" aria-label="Direct link to Parser Unity" title="Direct link to Parser Unity">​</a></h3><p>There have also been some discussions around parser/AST unity, in <a href="https://github.com/TheLarkInn/js-parser-discussions" target="_blank" rel="noopener noreferrer">TheLarkInn/js-parser-discussions</a> and previously with <a href="https://github.com/estree/estree" target="_blank" rel="noopener noreferrer">ESTree</a>.</p><p>Unfortunately with Babel 6, we have "forked" and have a few differences in <a href="https://github.com/babel/babylon#output" target="_blank" rel="noopener noreferrer">our AST</a> than ESTree. Babel aims to support stage x features while other parsers may only want to support stage 4 features. We all might prioritize certain things more than others regarding spec compliancy, performance, stage x features, error messages, extensibility, releases, etc. However it's important for us to be open to breaking changes that may lead to better interop and a better community.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="sweetjs-interop">Sweet.js Interop?<a href="#sweetjs-interop" class="hash-link" aria-label="Direct link to Sweet.js Interop?" title="Direct link to Sweet.js Interop?">​</a></h3><p>Previous <a href="https://github.com/babel/babel/issues/568#issuecomment-71716260" target="_blank" rel="noopener noreferrer">issue</a>. Maybe we can just figure out how to have better interop instead?</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="nodejs-support">Node.js Support<a href="#nodejs-support" class="hash-link" aria-label="Direct link to Node.js Support" title="Direct link to Node.js Support">​</a></h3><p>Should we drop support according to the EOL of Node.js versions? How long should we wait to do this in general?</p><ul><li><p>Do we want to continue to support our users who haven't updated yet?</p></li><li><p>There are certain transforms/PRs that are blocked by this, due to tools that have also dropped older versions.</p></li><li><p>Many other build-time projects like ESLint have done so already.</p></li><li><p>Are we going to make a major version just for this or plan out other changes in addition?</p></li><li><p><a href="https://github.com/babel/babel/issues/4315" target="_blank" rel="noopener noreferrer">Discussion Issue</a></p></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-5-to-6-transition--upgrade-paths">Babel 5 to 6 transition / Upgrade Paths<a href="#babel-5-to-6-transition--upgrade-paths" class="hash-link" aria-label="Direct link to Babel 5 to 6 transition / Upgrade Paths" title="Direct link to Babel 5 to 6 transition / Upgrade Paths">​</a></h3><p>Babel 6 was really difficult for the community to upgrade to. The initial release was a bit rushed. Although we did have a <a href="http://babeljs.io/blog/2015/10/29/6.0.0" target="_blank" rel="noopener noreferrer">6.0 release post</a>, a <a href="http://babeljs.io/blog/2015/10/31/setting-up-babel-6" target="_blank" rel="noopener noreferrer">setup guide</a> soon after, a even a <a href="http://babeljs.io/blog/2015/11/03/babel-doctor" target="_blank" rel="noopener noreferrer">tool (now deprecated)</a> to help with the transition it was still difficult for users to understand the changes.</p><p>There are still <a href="https://libraries.io/npm/babel-core/usage" target="_blank" rel="noopener noreferrer">a good amount of users on Babel 5</a> that we don't want to leave behind. What can we do to help them upgrade? What steps do we need to take in the future to make sure the same thing doesn't happen with a Babel 7? Are there other projects/communities we should be reaching out to and helping?</p><p>Relevant Issues:</p><ul><li><a href="https://github.com/ember-cli/ember-cli/issues/5015" target="_blank" rel="noopener noreferrer">ember-cli Babel 6.0 Issue</a> needs help!</li><li>Any others?</li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="what-else">What else?<a href="#what-else" class="hash-link" aria-label="Direct link to What else?" title="Direct link to What else?">​</a></h3><p>Anything else not already brought up here? Please send us a tweet <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a>, a message on our slack (join at <a href="https://slack.babeljs.io" target="_blank" rel="noopener noreferrer">https://slack.babeljs.io/</a>, comment on this post, or create an discussion issue in our repo!)</p><p>Are there projects or communities we should partner with more? How can we make the contributing experience more welcome? What can we do to make the development process more transparent?</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="community">Community<a href="#community" class="hash-link" aria-label="Direct link to Community" title="Direct link to Community">​</a></h2><p>Old Issues:</p><ul><li><a href="https://github.com/babel/babel/issues/1347" target="_blank" rel="noopener noreferrer">Call for Contributors!</a></li><li><a href="https://github.com/babel/babel/issues/1888" target="_blank" rel="noopener noreferrer">Being Prepared for Getting Hit by a Bus</a></li></ul><p>You might think that as <a href="https://npm-stat.com/charts.html?package=babel-core&amp;from=2015-02-07&amp;to=2016-12-07" target="_blank" rel="noopener noreferrer">a project gets more widely used</a> that more people show up to help out. But like most OSS projects that aren't backed by a company, there is a constant issue with maintenance and sustainability; people get burned out, move on to other cool projects, or get busy with work/family/etc.</p><p>Like James describes in <a href="https://medium.com/@thejameskyle/dear-javascript-7e14ffcae36c" target="_blank" rel="noopener noreferrer">Dear JavaScript</a>, the current Babel team is pretty small.</p><blockquote><p>Babel isn't a company, a special team at Facebook, or corporate-funded OSS project. It's a community-driven effort currently held up by a few people and we want that to grow.</p></blockquote><p>So if you're interested in contributing to a tool you use, we're hoping this could be the one!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="what-issues-should-i-look-at-or-contribute-to">What issues should I look at or contribute to?<a href="#what-issues-should-i-look-at-or-contribute-to" class="hash-link" aria-label="Direct link to What issues should I look at or contribute to?" title="Direct link to What issues should I look at or contribute to?">​</a></h3><p>Many of our projects have both <a href="https://github.com/babel/babel/labels/beginner-friendly" target="_blank" rel="noopener noreferrer"><code>beginner-friendly</code></a> and <a href="https://github.com/babel/babel/labels/help-wanted" target="_blank" rel="noopener noreferrer"><code>help-wanted</code></a> labels. You can also check out <a href="https://github.com/babel/babel/labels/discussion" target="_blank" rel="noopener noreferrer"><code>discussion</code></a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="team">Team<a href="#team" class="hash-link" aria-label="Direct link to Team" title="Direct link to Team">​</a></h3><p>Our core team is:</p><ul><li><a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">Henry Zhu, @hzoo</a></li><li><a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">Logan Smyth, @loganfsmyth</a></li><li><a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">Daniel Tschinder, @danez</a></li></ul><p>And just in the last 3 months a lot more collaborators:</p><ul><li><a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">Moti Zilberman, @motiz88</a></li><li><a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">Dan Harper, @danharper</a></li><li><a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">Kai Cataldo, @kaicataldo</a></li><li><a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">Andrew Levine, @drewml</a></li><li><a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">Brian Ng, @existentialism</a></li><li><a href="https://github.com/Jessidhia" target="_blank" rel="noopener noreferrer">Jessica Franco, @Jessidhia</a></li></ul><p>Babili core team:</p><ul><li><a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">Juriy Zaytsev, @kangax</a></li><li><a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">Boopathi Rajaa, @boopathi</a></li></ul><p>As mentioned above we have a lot of website collaborators:</p><ul><li><a href="https://github.com/daniel15" target="_blank" rel="noopener noreferrer">Daniel Lo Nigro, @daniel15</a></li><li><a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">Samuel Reed, @STRML</a></li><li><a href="https://github.com/xtuc" target="_blank" rel="noopener noreferrer">Sven SAULEAU, @xtuc</a></li><li><a href="https://github.com/fredericmarx" target="_blank" rel="noopener noreferrer">Frederic Marx, @fredericmarx</a></li><li><a href="https://github.com/seedofjoy" target="_blank" rel="noopener noreferrer">Igor Mozharovsky, @seedofjoy</a></li></ul><p>Inactive but still a resource:</p><ul><li><a href="https://github.com/kittens" target="_blank" rel="noopener noreferrer">Sebastian McKenzie, @kittens</a> - Yarn</li><li><a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">James Kyle, @thejameskyle</a> - Flow/Yarn</li><li><a href="https://github.com/amasad" target="_blank" rel="noopener noreferrer">Amjad Masad, @amasad</a> - <a href="https://repl.it/" target="_blank" rel="noopener noreferrer">repl.it</a></li><li><a href="https://github.com/jmm" target="_blank" rel="noopener noreferrer">Jesse McCarthy, @jmm</a></li></ul><h3 class="anchor anchorWithStickyNavbar_JmGV" id="how-can-i-contact-the-team">How can I contact the team?<a href="#how-can-i-contact-the-team" class="hash-link" aria-label="Direct link to How can I contact the team?" title="Direct link to How can I contact the team?">​</a></h3><h4 class="anchor anchorWithStickyNavbar_JmGV" id="github">GitHub<a href="#github" class="hash-link" aria-label="Direct link to GitHub" title="Direct link to GitHub">​</a></h4><p>For bug reports/PRs you can check our <a href="https://github.com/babel/" target="_blank" rel="noopener noreferrer">repositories</a>.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="twitter">Twitter<a href="#twitter" class="hash-link" aria-label="Direct link to Twitter" title="Direct link to Twitter">​</a></h4><p>You can ping us on Twitter with <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a> - or mention us individually.</p><p>I myself joined Twitter to be able to talk with users and help out. Being able to post new features and changelogs is really useful and can help give us feedback!</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="slack">Slack<a href="#slack" class="hash-link" aria-label="Direct link to Slack" title="Direct link to Slack">​</a></h4><p>We have a relatively active community on there!</p><p>You'll find a lot of awesome community members willing to help such as <a href="https://github.com/ljharb" target="_blank" rel="noopener noreferrer">Jordan Harband, @ljharb</a>, <a href="https://github.com/Jessidhia" target="_blank" rel="noopener noreferrer">Jessica Franco, @Jessidhia</a>, <a href="https://github.com/taion" target="_blank" rel="noopener noreferrer">Jimmy Jia, @taion</a>, <a href="https://github.com/zloirock" target="_blank" rel="noopener noreferrer">Denis Pushkarev, @zloirock</a> and more!</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">If you haven't joined our slack yet: please join at <a href="https://t.co/h3m7l9jkrg" target="_blank" rel="noopener noreferrer">https://t.co/h3m7l9jkrg</a>. Check out development/plugins to see what's up! <a href="https://t.co/f1CKaV8G6G" target="_blank" rel="noopener noreferrer">pic.twitter.com/f1CKaV8G6G</a></p>— Babel (@babeljs) <a href="https://twitter.com/babeljs/status/793223871080136705" target="_blank" rel="noopener noreferrer">October 31, 2016</a></blockquote><p>If you just have questions join <a href="https://babeljs.slack.com/messages/discussion/" target="_blank" rel="noopener noreferrer">#discussion</a> and if you want to help or listen in check out <a href="https://babeljs.slack.com/messages/development/" target="_blank" rel="noopener noreferrer">#development</a>.</p><p>We try not to discuss in private if there's no need to: I myself usually post the issues/PRs I'm working on for people to review and talk about.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="other">Other<a href="#other" class="hash-link" aria-label="Direct link to Other" title="Direct link to Other">​</a></h4><p>How else can we interact with the community? Should we go and start meetups, go to conferences, or manage hackathons?</p><p>How can we make Babel sustainable? Should we setup a <a href="https://opencollective.com/opensource" target="_blank" rel="noopener noreferrer">Open Collective</a> or seek a foundation? Should we pay for a <a href="https://medium.com/open-collective/wanted-a-product-manager-for-open-source-projects-bf19bcd680f5#.awwsg684n" target="_blank" rel="noopener noreferrer">project manager</a>?</p><p>Let us know your thoughts! What do you want out of Babel?</p><hr><blockquote><p>See typos/issues? Please send a PR or comment on <a href="https://github.com/babel/babel.github.io/pull/1014" target="_blank" rel="noopener noreferrer">babel/babel.github.io#1014</a></p></blockquote><p>If anything we want to let you know that many of us got our start with Babel in order to learn JavaScript rather than helping because we already knew it. Personally, I knew nothing about compilers and had just learned what ES6 was when I found the project. I got here because of a tiny bit of curiosity and <a href="https://medium.com/@hzoo/ossthanks-some-thoughts-d0267706c2c6#.lcga2ggrw" target="_blank" rel="noopener noreferrer">some encouragement from a lot of people</a>. I want to carry that forward and hope that we can all succeed together.</p><p>Thanks so much for reading!</p><p>Henry Zhu (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>) (<a href="https://twitter.com/left_pad" target="_blank" rel="noopener noreferrer">@left_pad</a>)</p><blockquote><p>Thanks to way too many folks for their review and thoughts: @DrewML, @mrjoelkemp, @kentcdodds, @existentialism, @jdalton, @gaearon, @nolanlawson, @jayphelps, @montogeek, @TheLarkInn, @jasonLaster, @benjamn, @addyosmani, @Daniel15, @loganfsmyth, @gr2m, @mathiasbynens, @chicoxyzzy, @bvaughn, @bcoe.</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.19.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/11/16/6.19.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/11/16/6.19.0</guid>
            <pubDate>Wed, 16 Nov 2016 11:00:00 GMT</pubDate>
            <description><![CDATA[object-rest-spread works standalone and a few new plugin options APIs were added!]]></description>
            <content:encoded><![CDATA[<p><code>object-rest-spread</code> works standalone and a few new plugin options APIs were added!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="v6190-summary-2016-11-16">v6.19.0 Summary (2016-11-16)<a href="#v6190-summary-2016-11-16" class="hash-link" aria-label="Direct link to v6.19.0 Summary (2016-11-16)" title="Direct link to v6.19.0 Summary (2016-11-16)">​</a></h2><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-new-feature">🚀 New Feature<a href="#-new-feature" class="hash-link" aria-label="Direct link to 🚀 New Feature" title="Direct link to 🚀 New Feature">​</a></h2><p><a href="https://github.com/babel/babel/pull/4755" target="_blank" rel="noopener noreferrer">#4755</a> Make <code>object-rest-spread</code> work as an independent plugin. (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>)</p><p>This rewrite fixes a long standing issue where the <code>object-rest-spread</code> plugin was depending on 2 other plugins to compile <code>RestProperty</code> properly.</p><p>This fix important given the assumption that plugins should be independent and is vital for the use of <a href="https://github.com/babel/babel-preset-env/" target="_blank" rel="noopener noreferrer">babel-preset-env</a> since new environments support destructuring natively.</p><p>In</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> c</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Out</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> a </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// remove the `...b`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">_objectWithoutProperties</span><span class="token punctuation">(</span><span class="token plain">c</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"a"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// use the helper</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It's interesting to see all the places where you can destructure!</p><p><em>RestProperty</em></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> b</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">c </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// Parameters</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// VariableDeclaration</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> c</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ExportNamedDeclaration</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">try</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">catch</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// CatchClause</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// AssignmentExpression</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ForXStatement</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><em>SpreadProperty</em></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">b</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">c </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ObjectExpression</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4544" target="_blank" rel="noopener noreferrer">#4544</a> Add the <code>spec</code> option to <code>"transform-class-properties"</code>. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><p>Class properties will use <code>Object.defineProperty</code> instead of a simple <code>this.x = y</code>.
Static fields are will use <code>value: undefined</code> even if they are not initialized.</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-class-properties"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"spec"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> bar</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  baz </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'guy'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Out</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token maybe-class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">baz</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'guy'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Out w/ <code>"spec": true</code></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#4271ae">Foo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  babelHelpers</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token maybe-class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  _initialiseProps</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token maybe-class-name">Foo</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword nil" style="color:#8959a8">undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">_initialiseProps</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">enumerable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4836" target="_blank" rel="noopener noreferrer">#4836</a> Add path utilities <code>path.isAncestor</code> and <code>path.isDescendant</code>. (<a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">@boopathi</a>)</p><p>We've added 2 similar "ancestry" path methods to <code>path.findParent</code>:</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> programPath</span><span class="token punctuation">,</span><span class="token plain"> numberPath</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">traverse</span><span class="token punctuation">(</span><span class="token plain">ast</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function maybe-class-name" style="color:#4271ae">Program</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">path</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> programPath </span><span class="token operator">=</span><span class="token plain"> path</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function maybe-class-name" style="color:#4271ae">NumberPath</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">path</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> numberPath </span><span class="token operator">=</span><span class="token plain"> path</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">programPath</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">isAncestor</span><span class="token punctuation">(</span><span class="token plain">numberPath</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">numberPath</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">isDescendant</span><span class="token punctuation">(</span><span class="token plain">programPath</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// true</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4835" target="_blank" rel="noopener noreferrer">#4835</a> Add <code>clearCache</code> and <code>clearPath</code> as separate APIs under traverse. (<a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">@boopathi</a>)</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">traverse</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">clearCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// clears both path's and scope cache</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">traverse</span><span class="token punctuation">.</span><span class="token property-access">clearCache</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">clearPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">traverse</span><span class="token punctuation">.</span><span class="token property-access">clearCache</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">clearScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4827" target="_blank" rel="noopener noreferrer">#4827</a> Add <code>jsonCompatibleStrings</code> option to <code>babel-generator</code>. (<a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">@kangax</a>)</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"generatorOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"jsonCompatibleStrings"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// defaults to false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Set to true for the generator to use <code>jsesc</code> with <code>"json": true</code>. This will make it print <code>"\u00A9"</code> vs. <code>"©"</code>;</p><hr><p><a href="https://github.com/babel/babel/pull/3547" target="_blank" rel="noopener noreferrer">#3547</a> Added <code>flowCommaSeparator</code> to <code>babel-generator</code>. (<a href="https://github.com/sampepose" target="_blank" rel="noopener noreferrer">@sampepose</a>)</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"generatorOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"flowCommaSeparator"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// defaults to false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Currently there are 2 supported syntaxes (<code>,</code> and <code>;</code>) in Flow Object Types. The use of commas is in line with the more popular style and matches how objects are defined in JavaScript, making it a bit more natural to write.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">param1</span><span class="token operator">:</span><span class="token plain"> number</span><span class="token punctuation">;</span><span class="token plain"> param2</span><span class="token operator">:</span><span class="token plain"> string </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">param1</span><span class="token operator">:</span><span class="token plain"> number</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">param2</span><span class="token operator">:</span><span class="token plain"> string </span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/3553" target="_blank" rel="noopener noreferrer">#3553</a> Add <code>t.isNodesEquivalent</code>. (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>)</p><p>Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token plain">t</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">isNodesEquivalent</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"1 + 1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">parse</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"1+1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4789" target="_blank" rel="noopener noreferrer">#4789</a> Support stage-2 <code>import()</code> as contextual import in <code>transform-es2015-modules-systemjs</code>. (<a href="https://github.com/guybedford" target="_blank" rel="noopener noreferrer">@guybedford</a>)</p><p>You'll want to add the <code>stage-2</code> preset or explicitly include <code>babel-plugin-syntax-dynamic-import</code> (not enabled by default).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">lazyLoadOperation</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">import</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'./x'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    x</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">y</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-bug-fixes">🐛 Bug Fixes<a href="#-bug-fixes" class="hash-link" aria-label="Direct link to 🐛 Bug Fixes" title="Direct link to 🐛 Bug Fixes">​</a></h2><p><a href="https://github.com/babel/babel/pull/4830" target="_blank" rel="noopener noreferrer">#4830</a> Will print the shorter of the <code>NumericLiteral</code>s if using the <code>minified</code> option. (<a href="https://github.com/shinew" target="_blank" rel="noopener noreferrer">@shinew</a>)</p><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">5e1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">5e4</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">50</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token number" style="color:#f5871f">5e4</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4832" target="_blank" rel="noopener noreferrer">#4832</a> Fix <code>transform-es2015-modules-systemjs</code> to ensure consistent modules iteration. (<a href="https://github.com/guybedford" target="_blank" rel="noopener noreferrer">@guybedford</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"2"</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// should be imported first</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"1"</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// second</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p><a href="https://github.com/babel/babel/pull/4813" target="_blank" rel="noopener noreferrer">#4813</a> Fix <code>binding</code> kind of destructured variables relating to <code>transform-react-constant-elements</code> (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">@STRML</a>)</p><p>Fixes an issue with destructuring parameters being hoisted incorrectly.</p><p>Input</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> text </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token maybe-class-name">Component</span><span class="token plain"> text</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">text</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Output</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">_ref</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> text </span><span class="token operator">=</span><span class="token plain"> _ref</span><span class="token punctuation">.</span><span class="token property-access">text</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref2 </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Component</span><span class="token plain"> text</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">text</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> _ref2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-committers-10">🌏 Committers: 10<a href="#-committers-10" class="hash-link" aria-label="Direct link to 🌏 Committers: 10" title="Direct link to 🌏 Committers: 10">​</a></h2><ul><li>Boopathi Rajaa (<a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">boopathi</a>)</li><li>Guy Bedford (<a href="https://github.com/guybedford" target="_blank" rel="noopener noreferrer">guybedford</a>)</li><li>Henry Zhu (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">hzoo</a>)</li><li>Juriy Zaytsev (<a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">kangax</a>)</li><li>Moti Zilberman (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">motiz88</a>)</li><li>Sam Pepose (<a href="https://github.com/sampepose" target="_blank" rel="noopener noreferrer">sampepose</a>)</li><li>Samuel Reed (<a href="https://github.com/STRML" target="_blank" rel="noopener noreferrer">STRML</a>)</li><li>Scott Stern (<a href="https://github.com/sstern6" target="_blank" rel="noopener noreferrer">sstern6</a>)</li><li>Shine Wang (<a href="https://github.com/shinew" target="_blank" rel="noopener noreferrer">shinew</a>)</li><li>lion (<a href="https://github.com/lion-man44" target="_blank" rel="noopener noreferrer">lion-man44</a>)</li></ul><hr><p>Check out <a href="https://github.com/babel/babel/releases/tag/v6.19.0" target="_blank" rel="noopener noreferrer">Github</a> for the whole changelog!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.18.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/10/24/6.18.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/10/24/6.18.0</guid>
            <pubDate>Mon, 24 Oct 2016 03:45:00 GMT</pubDate>
            <description><![CDATA[More flow updates, and lots of fixes!]]></description>
            <content:encoded><![CDATA[<p>More flow updates, and lots of fixes!</p><p>We've added 4 new collaborators to Babel since the last release!</p><p>All of the hard work goes to them and our new contributors!</p><ul><li>Moti Zilberman: 🐙 <a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>, 🐦 <a href="https://twitter.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a></li><li>Dan Harper: 🐙 <a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>, 🐦 <a href="https://twitter.com/DanHarper7" target="_blank" rel="noopener noreferrer">@DanHarper7</a></li><li>Kai Cataldo: 🐙 <a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">@kaicataldo</a>, 🐦 <a href="https://twitter.com/kai_cataldo" target="_blank" rel="noopener noreferrer">@kai_cataldo</a></li><li>Andrew Levine: 🐙 <a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>, 🐦 <a href="https://twitter.com/drewml" target="_blank" rel="noopener noreferrer">@drewml</a></li></ul><p>They've been helping keep this project afloat with <a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">@loganfsmyth</a>, <a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>, and me!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="v6180-summary-2016-10-24">v6.18.0 Summary (2016-10-24)<a href="#v6180-summary-2016-10-24" class="hash-link" aria-label="Direct link to v6.18.0 Summary (2016-10-24)" title="Direct link to v6.18.0 Summary (2016-10-24)">​</a></h2><blockquote><p>Again if you haven't checked recently, we've moved back to <a href="https://github.com/babel/babel/issues" target="_blank" rel="noopener noreferrer">Github Issues</a>! This is all thanks to <a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a></p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-new-feature">🚀 New Feature<a href="#-new-feature" class="hash-link" aria-label="Direct link to 🚀 New Feature" title="Direct link to 🚀 New Feature">​</a></h2><p><a href="https://github.com/babel/babel/pull/4697" target="_blank" rel="noopener noreferrer">#4697</a> Add variance node type and generate property variance annotations. (<a href="https://github.com/samwgoldman" target="_blank" rel="noopener noreferrer">@samwgoldman</a>)</p><p>Check out the <a href="https://flowtype.org/blog/2016/10/04/Property-Variance.html" target="_blank" rel="noopener noreferrer">blog post</a> and <a href="https://flowtype.org/docs/variance.html" target="_blank" rel="noopener noreferrer">flow docs</a> for more info:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">type </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain">p</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">interface</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">T</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token operator">-</span><span class="token plain">p</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">declare </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">T</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token plain">k</span><span class="token operator">:</span><span class="token constant" style="color:#f5871f">K</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">V</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">T</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token operator">-</span><span class="token punctuation">[</span><span class="token plain">k</span><span class="token operator">:</span><span class="token constant" style="color:#f5871f">K</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">V</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C2</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain">p</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> e </span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4746" target="_blank" rel="noopener noreferrer">#4746</a> Support <code>ObjectExpression</code> in static path evaluation. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><p>Useful for <a href="https://github.com/babel/babili" target="_blank" rel="noopener noreferrer">babel/babili</a> and other plugins.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'a'</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'b'</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">10</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">20</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string-property property">'z'</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token literal-property property">ab</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">200</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">z</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">]</span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4699" target="_blank" rel="noopener noreferrer">#4699</a> <code>import()</code>: Initial support for <code>dynamic-import</code>. (<a href="https://github.com/kesne" target="_blank" rel="noopener noreferrer">@kesne</a>)</p><p>Parser support was added in <a href="https://github.com/babel/babylon/releases/tag/v6.12.0" target="_blank" rel="noopener noreferrer">babel/babylon#v6.12.0</a>.</p><p>Just the plugin to enable it in babel.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// install</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install babel</span><span class="token operator">-</span><span class="token plain">plugin</span><span class="token operator">-</span><span class="token plain">syntax</span><span class="token operator">-</span><span class="token plain">dynamic</span><span class="token operator">-</span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token operator">--</span><span class="token plain">save</span><span class="token operator">-</span><span class="token plain">dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>or use the new <code>parserOpts</code></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"parserOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'dynamicImport'</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4655" target="_blank" rel="noopener noreferrer">#4655</a> Add <code>useBuiltIns</code> option to helper-builder-react-jsx. (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>)</p><p>Previously we added a <code>useBuiltIns</code> for object-rest-spread so that it use the native/built in version if you use a polyfill or have it supported natively.</p><p>This change just uses the same option from the plugin to be applied with spread inside of jsx.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> div </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token plain">props</span><span class="token punctuation">}</span><span class="token plain"> foo</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"bar"</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> div </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createElement</span><span class="token punctuation">(</span><span class="token maybe-class-name">Component</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> props</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">foo</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4724" target="_blank" rel="noopener noreferrer">#4724</a> Add <code>EmptyTypeAnnotation</code>. (<a href="https://github.com/samwgoldman" target="_blank" rel="noopener noreferrer">@samwgoldman</a>)</p><p>Added in flow <a href="https://github.com/facebook/flow/commit/c603505583993aa953904005f91c350f4b65d6bd" target="_blank" rel="noopener noreferrer">here</a> and in babylon <a href="https://github.com/babel/babylon/pull/171" target="_blank" rel="noopener noreferrer">here</a>.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> f</span><span class="token operator">&lt;</span><span class="token constant" style="color:#f5871f">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> empty</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">T</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> x</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// nothing to pass...</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4758" target="_blank" rel="noopener noreferrer">#4758</a> Make getBinding ignore labels; add Scope#getLabel, Scope#hasLabel, Scope#registerLabel. (<a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">@kangax</a>)</p><p>Track <code>LabeledStatement</code> separately (not part of bindings).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-polish">💅 Polish<a href="#-polish" class="hash-link" aria-label="Direct link to 💅 Polish" title="Direct link to 💅 Polish">​</a></h2><p><a href="https://github.com/babel/babel/pull/4690" target="_blank" rel="noopener noreferrer">#4690</a> Consolidate contiguous var declarations in destructuring transform. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">a</span><span class="token punctuation">,</span><span class="token plain"> b</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    b </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4685" target="_blank" rel="noopener noreferrer">#4685</a> Better error messaging when preset options are given without a corresponding preset. (<a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">@kaicataldo</a>)</p><blockquote><p>We've had a few reports of users not wrapping a preset in <code>[]</code> when passing in options so we added an extra error message for this.</p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// incorrect, and current gives a unexpected error message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"preset"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"presetOptions"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'hi'</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// gets parsed as another preset instead of being part of the "preset"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// correct</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"preset"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token string-property property">"presetOptions"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'hi'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">ReferenceError: [BABEL] /test.js: Unknown option: base.loose2. Check out http://babeljs.io/docs/usage/options/ for more information about options.</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">A common cause of this error is the presence of a configuration options object without the corresponding preset name. Example:</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">Invalid:</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  `{ presets: [{option: value}] }`</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">Valid:</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  `{ presets: [["presetName", {option: value}]] }`</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">For more detailed information on preset configuration, please see http://babeljs.io/docs/plugins/#pluginpresets-options.</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4646" target="_blank" rel="noopener noreferrer">#4646</a> Change babel-generator to output <code>boolean</code> instead of <code>bool</code> for the <code>BooleanTypeAnnotation</code> AST node. (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token operator">&lt;</span><span class="token plain">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// instead of</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token operator">&lt;</span><span class="token plain">bool</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-documentation">📝 Documentation<a href="#-documentation" class="hash-link" aria-label="Direct link to 📝 Documentation" title="Direct link to 📝 Documentation">​</a></h2><p><a href="https://github.com/babel/babel/pull/4653" target="_blank" rel="noopener noreferrer">#4653</a> Tweak license for GitHub display. (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">@existentialism</a>)</p><p>So that our MIT License <a href="https://github.com/blog/2252-license-now-displayed-on-repository-overview" target="_blank" rel="noopener noreferrer">shows up</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-bug-fixes">🐛 Bug Fixes<a href="#-bug-fixes" class="hash-link" aria-label="Direct link to 🐛 Bug Fixes" title="Direct link to 🐛 Bug Fixes">​</a></h2><p><a href="https://github.com/babel/babel/pull/4765" target="_blank" rel="noopener noreferrer">#4765</a> Don't treat <code>JSXIdentifier</code> in <code>JSXMemberExpression</code> as HTML tag. Closes <a href="https://github.com/babel/babel/issues/4027" target="_blank" rel="noopener noreferrer">#4027</a>. (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// transform-react-inline-elements</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// issue with imported components that were JSXMemberExpression</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> form </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"./export"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">ParentComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">form</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">TestComponent</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4763" target="_blank" rel="noopener noreferrer">#4763</a> Handle remapping of JSXIdentifier to MemberExpression in CommonJS transform. Closes <a href="https://github.com/babel/babel/issues/3728" target="_blank" rel="noopener noreferrer">#3728</a>. (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>)</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">// transform-react-inline-elements</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">import { Modal } from "react-bootstrap";</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">export default CustomModal = () =&gt; &lt;Modal.Header&gt;foobar&lt;/Modal.Header&gt;;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4736" target="_blank" rel="noopener noreferrer">#4736</a> Fix replacing for-of if inside label. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">loop</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> ch </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4502" target="_blank" rel="noopener noreferrer">#4502</a> Make special case for class property initializers in <code>shadow-functions</code>. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">class A {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  prop1 = () =&gt; this;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  static prop2 = () =&gt; this;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  prop3 = () =&gt; arguments;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4719" target="_blank" rel="noopener noreferrer">#4719</a> Fixed incorrect compilation of async iterator methods. (<a href="https://github.com/Jamesernator" target="_blank" rel="noopener noreferrer">@Jamesernator</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  async </span><span class="token operator">*</span><span class="token function" style="color:#4271ae">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// was incorrectly outputting the method with a generator still `*g(){`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> _asyncGenerator</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">wrap</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token operator">*</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token plain"> _asyncGenerator</span><span class="token punctuation">.</span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4690" target="_blank" rel="noopener noreferrer">#4690</a> Consolidate contiguous var declarations in destructuring transform. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// was wrapping variables in an IIFE incorrectly</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> i </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> length </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> list</span><span class="token punctuation">;</span><span class="token plain"> i </span><span class="token operator">&lt;</span><span class="token plain"> length</span><span class="token punctuation">;</span><span class="token plain"> i</span><span class="token operator">++</span><span class="token plain"> </span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain"> i </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">': '</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> list</span><span class="token punctuation">[</span><span class="token plain">i</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4666" target="_blank" rel="noopener noreferrer">#4666</a> Fix error when constructor default arg refers to self or own static property. (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// was producing invalid code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Ref</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> nextId </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">id </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter operator" style="color:#f5871f">++</span><span class="token parameter maybe-class-name" style="color:#f5871f">Ref</span><span class="token parameter punctuation" style="color:#f5871f">.</span><span class="token parameter property-access" style="color:#f5871f">nextId</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> n </span><span class="token parameter operator" style="color:#f5871f">=</span><span class="token parameter" style="color:#f5871f"> id</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">id</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> n</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">assert</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">equal</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">assert</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">equal</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">id</span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4674" target="_blank" rel="noopener noreferrer">#4674</a> Handle side effects correctly in rest params index expressions (#4348). (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">first</span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">values</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> index </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> values</span><span class="token punctuation">[</span><span class="token plain">index</span><span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// ++ was happening twice</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">first</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4669" target="_blank" rel="noopener noreferrer">#4669</a> Fix block scoping transform for declarations in labeled statements. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">10</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">ca</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">20</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4672" target="_blank" rel="noopener noreferrer">#4672</a> Avoid repeating impure (template) literals when desugaring **= (#4403). (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">a</span><span class="token punctuation">[</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">b</span><span class="token template-string interpolation operator">++</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">**=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4642" target="_blank" rel="noopener noreferrer">#4642</a> Exclude super from being assign to ref variable. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">foo </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">.</span><span class="token property-access">baz</span><span class="token plain"> </span><span class="token operator">**=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">12</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4670" target="_blank" rel="noopener noreferrer">#4670</a> Retain return types on ObjectMethods in transform-es2015-shorthand-properties. (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// @flow</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> obj </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">method</span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token operator">:</span><span class="token plain"> string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> number </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">5</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">5</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4668" target="_blank" rel="noopener noreferrer">#4668</a> Retain method return types on transform-es2015-classes (Closes <a href="https://github.com/babel/babel/issues/4665" target="_blank" rel="noopener noreferrer">#4665</a>). (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// @flow</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">C</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">m</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token operator">:</span><span class="token plain"> number</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> string </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'a'</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-internal">🏠 Internal<a href="#-internal" class="hash-link" aria-label="Direct link to 🏠 Internal" title="Direct link to 🏠 Internal">​</a></h2><p><a href="https://github.com/babel/babel/pull/4725" target="_blank" rel="noopener noreferrer">#4725</a> Remove babel-doctor from babel-cli. (<a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">@kaicataldo</a>)</p><p>It's a one-time use tool (helpful after the initial release when upgrading from v5 to v6) that doesn't need to be a part of <code>babel-cli</code>. We'll publish it as a standalone package it someone asks for it.</p><p><a href="https://github.com/babel/babel/pull/4764" target="_blank" rel="noopener noreferrer">#4764</a> Add TEST_DEBUG env var option for test.sh, to enable node 6 debugger. (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>)</p><p>Will be useful for contributors: <code>TEST_DEBUG=true make test</code> to run <code>node --inspect</code> on node v6+.</p><p><a href="https://github.com/babel/babel/pull/4735" target="_blank" rel="noopener noreferrer">#4735</a> Automatically generate missing expected.js fixtures. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><p>Also amazing for contributors: if you create an <code>actual.js</code> test file without the <code>expected.js</code> it will generate it for you (like snapshot tests but with babel output).</p><p><a href="https://github.com/babel/babel/pull/4734" target="_blank" rel="noopener noreferrer">#4734</a> Change usage of "suite"/"test" in unit-tests to "describe"/"it". (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>)</p><p><a href="https://github.com/babel/babel/pull/4564" target="_blank" rel="noopener noreferrer">#4564</a> Enable babel for tests. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><p>The non-fixture tests finally are also transpiled as well!</p><p><a href="https://github.com/babel/babel/pull/4732" target="_blank" rel="noopener noreferrer">#4732</a> Run ESLint on test files, and fix lint errors in test files.. (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">@DrewML</a>)</p><p><a href="https://github.com/babel/babel/pull/4680" target="_blank" rel="noopener noreferrer">#4680</a> Update: Eslint to 3.0 and update CI builds (Closes <a href="https://github.com/babel/babel/issues/4638" target="_blank" rel="noopener noreferrer">#4638</a>). (<a href="https://github.com/gyandeeps" target="_blank" rel="noopener noreferrer">@gyandeeps</a>)</p><p>Allows us to use the latest version of eslint which drops support of node &lt; 4 by only running lint on the lastest node which should save CI time.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-first-merged-pull-request">🎉 First Merged Pull Request!<a href="#-first-merged-pull-request" class="hash-link" aria-label="Direct link to 🎉 First Merged Pull Request!" title="Direct link to 🎉 First Merged Pull Request!">​</a></h2><ul><li>Andrew Levine (<a href="https://github.com/DrewML" target="_blank" rel="noopener noreferrer">DrewML</a>)</li><li>Eric Rozell (<a href="https://github.com/rozele" target="_blank" rel="noopener noreferrer">rozele</a>)</li><li>Gyandeep Singh (<a href="https://github.com/gyandeeps" target="_blank" rel="noopener noreferrer">gyandeeps</a>)</li><li><a href="https://github.com/Jamesernator" target="_blank" rel="noopener noreferrer">Jamesernator</a></li><li>Jordan Gensler (<a href="https://github.com/kesne" target="_blank" rel="noopener noreferrer">kesne</a>)</li><li>Nazim Hajidin (<a href="https://github.com/nhajidin" target="_blank" rel="noopener noreferrer">nhajidin</a>)</li><li>Simen Bekkhus (<a href="https://github.com/SimenB" target="_blank" rel="noopener noreferrer">SimenB</a>)</li><li><a href="https://github.com/sugargreenbean" target="_blank" rel="noopener noreferrer">sugargreenbean</a></li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-committers-17">🌏 Committers: 17<a href="#-committers-17" class="hash-link" aria-label="Direct link to 🌏 Committers: 17" title="Direct link to 🌏 Committers: 17">​</a></h2><ul><li>Brian Ng (<a href="https://github.com/existentialism" target="_blank" rel="noopener noreferrer">existentialism</a>)</li><li>Dan Harper (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">danharper</a>)</li><li>Daniel Tschinder (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">danez</a>)</li><li>Greenkeeper (<a href="https://github.com/greenkeeperio-bot" target="_blank" rel="noopener noreferrer">greenkeeperio-bot</a>)</li><li>Henry Zhu (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">hzoo</a>)</li><li>Juriy Zaytsev (<a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">kangax</a>)</li><li>Kai Cataldo (<a href="https://github.com/kaicataldo" target="_blank" rel="noopener noreferrer">kaicataldo</a>)</li><li>Moti Zilberman (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">motiz88</a>)</li><li>Sam Goldman (<a href="https://github.com/samwgoldman" target="_blank" rel="noopener noreferrer">samwgoldman</a>)</li></ul><hr><p>Check out <a href="https://github.com/babel/babel/releases/tag/v6.18.0" target="_blank" rel="noopener noreferrer">Github</a> for the whole changelog!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.16.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/09/28/6.16.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/09/28/6.16.0</guid>
            <pubDate>Wed, 28 Sep 2016 03:45:00 GMT</pubDate>
            <description><![CDATA[Happy Birthday Babel 🎂 !]]></description>
            <content:encoded><![CDATA[<p style="text-align:center">Happy Birthday Babel 🎂 !</p><blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Happy 2nd birthday <a href="https://twitter.com/babeljs" target="_blank" rel="noopener noreferrer">@babeljs</a></p>— Sebastian McKenzie (@sebmck) <a href="https://twitter.com/sebmck/status/781079584460697601" target="_blank" rel="noopener noreferrer">September 28, 2016</a></blockquote><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">```.```           ``````            `````` ````;````         ```:````          ```:```` ````:;`````       ````;,````        ````;,```` `````::,`````     ````:,:`````      ````:,:````` ````:,,:`````     ````:.,,````      ````:.,,```` ````:..,.````    ````,,..:`````    ````,,..:````` ```.,.`,:````    ````:.`.,`````    ````:.`.,````` ```.,.`.:````    ````:.`.,.````    ````:.`.,.```` ```.,...:````     ``.:...,.```      ``.:...,.``` ::,,,.,,,:`      `:,,,.,,,:,       `:,,,.,,,:: :,,.......,:      :,.......,,,      :,.......,,: :,.........,  ;++`............;++`  ,.........,: :.````````.. '+'+'```````````,+'++` ..````````.: ;,````````.,.+'''',`````````.,''++' ,.````````,: ;,.`    ``.,++'''',.``    ``.,''''+,,.``    `.,: :,.``  ```..+''''+,.```  ```.,'''++;,.```  ``.,: `:,.``  ```..+''''',.```  ```.,''''+',.```  ``.,: +,..``  ```..+++''+,.```  ```.,+''++;,.```  ``..:, ,:+,.```  ```..++++++,.```  ```.,+++++.,.```  ```.,+,` ,,.'',.```  ```.,`;+++',.```  ```.,+++'.`,.```  ```.,+.,: `,,.`++,.```  ```.,``...`,.```  ```.,...```,.```  ```.,+`..,: ,,..``'+,.```  ```.,``````,.```  ```.,``````,.```  ```.,+```.,: :,.```.,+,.```  ```.,``````,.```  ```.,``````,.```  ```.,'.```..,` :,.`````.,,.```  ```.,``````,.```  ```.,``````,.```  ```.,.``````., ,,.```````.,.```  ```.,``````,.```  ```.,``````,.```  ```.,```````..: ,.`````````,.```  ```.,``````,.```  ```.,``````,.```  ```.,````````.,: :,.```````` ,.```  ```.,``````,.```  ```.,``````,.```  ```., ````````., ,.```````.''+'```  ```., `````,.```  ```.,``````,.```  ``,''+'```````.,. ,.```````+'''';``  ```., `````,.```  ``..,``````,.```  ``+'''';```````,: ,.``````'+''''+``` ```.,``````,.``` ```..,``````,.``` ``'+''''+```````.: ,.``````+'''''':`````.., `````,..`````..,,``````,..`````+'''''',``````,: ,.``````+'''''+'.```..,````````,...``..,,````````,...``.+'''''+'`````.,, :.``````+'''''+'......````   ```.......```   `````......+'''''+'`````., :.`````.+++++'+:.....````.''+' ```....```.''+' ````.....+++++'+:`````., ,,.````.:+++++'``````````+'''';``````````+'''';`````````,+++++'..````., .,.````..,;';,.`````````'+''''+ ````````'+''''+ `````````.:';:..`````.: ,.``````....```````````+'''''', `````` +'''''',```````````...```````.: ,.`````````````````````+'''''+'``````` +'''''+'````````````````````.,, ,.`````````````````````+'''''+'````````+'''''+'````````````````````.,. :.`````````````````````+++++'+:``` ````+++++'+:````````````````````.,` :..````````````````````,+++++'```` ````,+++++'`````````````````````., ,,.`````````````````````.:';,.```   ````.:';,.`````````````````````., .,.```````````````````````````````   `````````````  ```````````````.: `,.```````````````````` ```````       `````` `    ````````````````..: ,..```````````````````                       ````````````````````.,: ,...`````````````````````` ```        ```````````````````````````.,, :....````````````````````````````````````````````````````````````.,. :,.....`````````````````````````````````````````````````````````.., :,......`````````````````````````````````````````````````````.....: ,,........```````````````````````````````````````````````````.....: .,........```````````````````````````````````````````````````....,: ,..........```````````````````````````````````````````````......,: :...........`````````````````````````````````````````````.......,: :,...........````````````````````````````````````````````.......,, :,..........``````````````````````````````````````````..........,` :,............````````````````````````````````````````..........: :,............````````````````````````````````````````.........,: .,..............```````````````````````````````````............,: `,,..............``````````````````````````````````............,: :,...........`..````````````````````````````````..............,: :,..............````````````````````````````````..............:. ,,,.............```````````````````````````````..............,: :,.............````````````````````````````````............,:, `:,.............````````````````````````````..............,,: .:,............```````````````````````````..............,:: .:,,..........````````````````````````````............,:: :,,..........````````````````````````.............,,:, ,:,,.........``````````````````````............,,:; ::,,........``````````````````.............,,::` ,::,,........``````.```.``............,,,:;` :::,,,........`.```............,,,:::. ,:::,,,,..............,,,,,::::` `.::::::,,,,,,,::::::,`</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It's hard to believe it's been 2 years already! Thanks so much to Sebastian for creating this amazing project!</p><p>We've grown a lot:</p><ul><li>200+ contributors</li><li>There's been ~113 releases since 6.0.0 and 512 release total.</li><li>~4.5 million downloads of <code>babel-core</code> in the last month</li><li>1400+ results for <code>babel-plugin</code> <a href="https://www.npmjs.com/search?q=babel-plugin" target="_blank" rel="noopener noreferrer">on npm</a></li><li>700+ results for <code>babel-preset</code> <a href="https://www.npmjs.com/search?q=babel-preset" target="_blank" rel="noopener noreferrer">on npm</a></li><li>4500+ users on our <a href="https://babeljs.slack.com" target="_blank" rel="noopener noreferrer">slack</a></li></ul><p>Thanks so much for using and contributing to our community!</p><p>If you haven't checked recently, we've moved back to <a href="https://github.com/babel/babel/issues" target="_blank" rel="noopener noreferrer">Github Issues</a>! This is all thanks to <a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a></p><p>Like most open source projects, Babel is maintained be just a few people working in their free time. We'll be working on making it easier to contribute in various ways (not just to the main codebase).</p><p>What Evan Czaplicki says in <a href="https://www.youtube.com/watch?list=PLglJM3BYAMPH2zuz1nbKHQyeawE4SN0Cd&amp;v=DSjbTC-hvqQ" target="_blank" rel="noopener noreferrer">Code is the Easy Part</a> is really relevant to any project, big or small. A big part of contributing is just talking, using, writing about the project.</p><p>To that point, we should setup a curated, up-to-date <a href="https://github.com/babel/babel.github.io/issues/27" target="_blank" rel="noopener noreferrer">Resources Page</a> and maybe a newsletter to talk about the awesome stuff people are making with Babel (a new plugin, a new tool, or just an idea).</p><p>Hopefully, we can work more with TC-39 like we do with t<a href="https://github.com/tc39/ecma262#current-proposals" target="_blank" rel="noopener noreferrer">tc39/ecma262#current-proposals</a> and our stage-x presets and plugins. We should look to run <a href="https://github.com/tc39/test262" target="_blank" rel="noopener noreferrer">test262</a> with Babel.</p><p>We've also released <a href="https://github.com/babel/babili" target="_blank" rel="noopener noreferrer">Babili, our minifier</a> and started work on <a href="https://github.com/babel/babel-preset-env" target="_blank" rel="noopener noreferrer">babel-preset-env, "autoprefixer" for Babel</a>.</p><p>The future of Babel is bright!</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-spec-compliancy">👓 Spec Compliancy<a href="#-spec-compliancy" class="hash-link" aria-label="Direct link to 👓 Spec Compliancy" title="Direct link to 👓 Spec Compliancy">​</a></h2><p><a href="https://github.com/babel/babel/pull/3473" target="_blank" rel="noopener noreferrer">#3473</a> via <a href="https://github.com/babel/babel/pull/4576" target="_blank" rel="noopener noreferrer">#4576</a> Implement support for async generator functions and for-await statements. (<a href="https://github.com/zenparsing" target="_blank" rel="noopener noreferrer">@zenparsing</a>)</p><p>This change implements the <a href="https://github.com/tc39/proposal-async-iteration" target="_blank" rel="noopener noreferrer">async iteration proposal</a>, currently at stage 2 (and is planned to be pushed to stage 3 at the current TC-39 meeting). It includes the following features:</p><ul><li>Transforms async generator functions (<code>async function* g() { }</code>) to wrapped generator functions, similar to the current async-to-generator transform.</li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">async</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token operator">*</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">agf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>Transforms <code>for-await</code> statements into for loops containing yield expressions.</li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">async</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> x </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> y</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">g</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Example Usage</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">async</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token operator">*</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">genAnswers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> stream </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">12</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> total </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">for</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> val </span><span class="token keyword" style="color:#8959a8">of</span><span class="token plain"> stream</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    total </span><span class="token operator">+=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#8959a8">await</span><span class="token plain"> val</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">yield</span><span class="token plain"> total</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">forEach</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">ai</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> fn</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> ai</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">r</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token plain">r</span><span class="token punctuation">.</span><span class="token property-access">done</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token function" style="color:#4271ae">fn</span><span class="token punctuation">(</span><span class="token plain">r</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">forEach</span><span class="token punctuation">(</span><span class="token plain">ai</span><span class="token punctuation">,</span><span class="token plain"> fn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> output </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">forEach</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">genAnswers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">val</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> output </span><span class="token operator">+=</span><span class="token plain"> val</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  assert</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">equal</span><span class="token punctuation">(</span><span class="token plain">output</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4500" target="_blank" rel="noopener noreferrer">#4500</a> Support computed class properties. (<a href="https://github.com/motiz88" target="_blank" rel="noopener noreferrer">@motiz88</a>)</p><p>Parser support was added in <a href="https://github.com/babel/babylon/releases/tag/v6.11.0" target="_blank" rel="noopener noreferrer">babylon@6.11.0</a> with <a href="https://github.com/babel/babylon/pull/121" target="_blank" rel="noopener noreferrer">babel/babylon#121</a></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Example</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain">x</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'y'</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bar</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain">p</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain">m</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/3702" target="_blank" rel="noopener noreferrer">#3702</a> Flow: generate exact object type annotations. (<a href="https://github.com/bhosmer" target="_blank" rel="noopener noreferrer">@bhosmer</a>)</p><p>Parser support was added in <a href="https://github.com/babel/babylon/releases/tag/v6.10.0" target="_blank" rel="noopener noreferrer">babylon@6.10.0</a> with <a href="https://github.com/babel/babylon/pull/104" target="_blank" rel="noopener noreferrer">babel/babylon#104</a></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Example</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token literal-property property">a</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token operator">|</span><span class="token plain"> x</span><span class="token operator">:</span><span class="token plain"> number</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token plain"> string </span><span class="token operator">|</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'foo'</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-new-feature">🚀 New Feature<a href="#-new-feature" class="hash-link" aria-label="Direct link to 🚀 New Feature" title="Direct link to 🚀 New Feature">​</a></h2><p><a href="https://github.com/babel/babel/pull/3561" target="_blank" rel="noopener noreferrer">#3561</a> <code>babel-core</code>: add options for a different parser or generator. (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>)</p><p>Babel will now also take the options: <code>parserOpts</code> and <code>generatorOpts</code> (as objects).</p><p><code>parserOpts</code> will pass all properties down to the default <code>babylon</code> parser. You can also pass a <code>parser</code> option to substitute for a different parser.</p><p>This will allow passing down any of <code>babylon's</code> <a href="https://github.com/babel/babylon#options" target="_blank" rel="noopener noreferrer">options</a>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"parserOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"allowImportExportEverywhere"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"allowReturnOutsideFunction"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"sourceType"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"module"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"flow"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can also pass down <code>parserOpts.parser</code> and <code>generatorOpts.generator</code>. This will enable the use of <a href="https://github.com/benjamn/recast" target="_blank" rel="noopener noreferrer">recast</a> with Babel.</p><p>Recast is used in <a href="https://github.com/facebook/jscodeshift" target="_blank" rel="noopener noreferrer">jscodeshift</a> which is a tool to create <a href="https://medium.com/@cpojer/effective-javascript-codemods-5a6686bb46fb#.kef4rnxpd" target="_blank" rel="noopener noreferrer">codemods</a>. You might know of these since the React team also <a href="https://github.com/reactjs/react-codemod/" target="_blank" rel="noopener noreferrer">publishes them</a> to help convert between React releases.</p><p><img loading="lazy" src="https://cloud.githubusercontent.com/assets/588473/16584612/04a82078-428b-11e6-9f79-a665eef848ea.gif" alt="recast" class="img_SS3x"></p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSON</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"parserOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token property">"parser"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"recast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"generatorOpts"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token property">"generator"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"recast"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babel as a compiler has 3 steps: parsing, transforming, and generation.</p><p>At a high level, the process is:</p><ul><li>parsing: take a string (input code) and turn it into JSON.</li><li>transforming (plugins): take JSON and make a different JSON structure)</li><li>code generation: turn the JSON back into a string (output code).</li></ul><p>The last step of babel is the code generator. Traditionally, the code generator doesn't really need to care about the format of your code (spaces, quotes, etc). This is because the output code is your "compiled" code and will probably go in the dist directory, you will eventually minify it, etc.</p><p>But what if you want to write a babel plugin that runs on your source code and outputs to source (<code>babel src -d src</code> rather than <code>babel src -d lib</code>)? You would want your diff to be readable and for the plugin to only modify what is necessary by conforming to your style guide.</p><p>This is because you want to write a plugin that transforms the source itself. One use case is a project called <a href="https://github.com/mohebifar/lebab" target="_blank" rel="noopener noreferrer">lebab</a> which is actually just the opposite of babel (used to be called 5to6). Currently, <a href="https://github.com/mohebifar/lebab/issues/138" target="_blank" rel="noopener noreferrer">it isn't a babel plugin</a> so we wanted to help support that usecase.</p><p>Once <a href="https://github.com/benjamn/recast/pull/299" target="_blank" rel="noopener noreferrer">benjamn/recast#299</a> and <a href="https://github.com/benjamn/ast-types/pull/162" target="_blank" rel="noopener noreferrer">benjamn/ast-types#162</a> are merged you should be able to make your own codemods with Babel as well!</p><p><a href="https://github.com/babel/babel/pull/4542" target="_blank" rel="noopener noreferrer">#4542</a> Add support for preset organization shortcuts. (<a href="https://github.com/nkt" target="_blank" rel="noopener noreferrer">@nkt</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@org/babel-preset-name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// actual package</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"@org/name"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// shorthand name</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4491" target="_blank" rel="noopener noreferrer">#4491</a> Add object rest spread <code>useBuiltIns</code> option. (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>)</p><p><code>useBuiltIns</code> - Do not use Babel's helper's and just transform to use the built-in method (Disabled by default).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-object-rest-spread"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"useBuiltIns"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// source</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">z </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> x</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain">y </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// compiled</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">z </span><span class="token operator">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"> x </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4561" target="_blank" rel="noopener noreferrer">#4561</a> <code>babel-code-frame</code>: add options for <code>linesBefore</code>, <code>linesAfter</code>. (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>)</p><p><code>babel-code-frame</code> is a standalone package that we use in Babel when reporting errors.</p><p>Now there is an <a href="https://github.com/babel/babel/blob/main/packages/babel-code-frame/README.md#options" target="_blank" rel="noopener noreferrer">option</a> to specify the number of lines above and below the error</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token number" style="color:#f5871f">1</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain">   </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token operator">|</span><span class="token plain">                </span><span class="token operator">^</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token number" style="color:#f5871f">3</span><span class="token plain"> </span><span class="token operator">|</span><span class="token plain"> </span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/#3695" target="_blank" rel="noopener noreferrer">#3695</a> via <a href="https://github.com/babel/babel/pull/4566" target="_blank" rel="noopener noreferrer">#4566</a> Allow presets to be ES6 default exports (<a href="https://github.com/johanssj" target="_blank" rel="noopener noreferrer">@johanssj</a>)</p><p>We previously made presets with commonjs exports</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">babel.config.js</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel-plugin-syntax-trailing-function-commas"</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now you can use export default as well</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">syntaxTrailingCommas</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"..."</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    syntaxTrailingCommas</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-polish">💅 Polish<a href="#-polish" class="hash-link" aria-label="Direct link to 💅 Polish" title="Direct link to 💅 Polish">​</a></h2><p><a href="https://github.com/babel/babel/pull/4572" target="_blank" rel="noopener noreferrer">#4572</a>, <a href="https://github.com/babel/babel/pull/4579" target="_blank" rel="noopener noreferrer">#4579</a> Improve syntax highlighting colors. (<a href="https://github.com/lydell" target="_blank" rel="noopener noreferrer">@lydell</a>)</p><p>Before</p><img loading="lazy" width="611" alt="screen shot 2016-09-27 at 11 12 47 am" src="https://cloud.githubusercontent.com/assets/588473/18879735/6ba2820a-84a3-11e6-9e3f-fa8612620867.png" class="img_SS3x"><p>After</p><img loading="lazy" width="611" alt="screen shot 2016-09-27 at 3 50 02 pm" src="https://cloud.githubusercontent.com/assets/588473/18889266/38829f96-84ca-11e6-8a19-0a39e440a0d3.png" class="img_SS3x"><h2 class="anchor anchorWithStickyNavbar_JmGV" id="-notable-bug-fixes">🐛 Notable Bug Fixes<a href="#-notable-bug-fixes" class="hash-link" aria-label="Direct link to 🐛 Notable Bug Fixes" title="Direct link to 🐛 Notable Bug Fixes">​</a></h2><p><a href="https://github.com/babel/babel/pull/3686" target="_blank" rel="noopener noreferrer">#3686</a> Fix <code>typeof Symbol.prototype</code>. (<a href="https://github.com/brainlock" target="_blank" rel="noopener noreferrer">@brainlock</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// `typeof Symbol.prototype` should be 'object'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">typeof</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Symbol</span><span class="token punctuation">.</span><span class="token property-access">prototype</span><span class="token plain"> </span><span class="token operator">===</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'object'</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4507" target="_blank" rel="noopener noreferrer">#4507</a> Only set options in <code>babel-cli</code> if different from default. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><p>Fix an issue with defaults not being overridden. This was causing options like <code>comments: false</code> not to work correctly.</p><p><a href="https://github.com/babel/babel/pull/4524" target="_blank" rel="noopener noreferrer">#4524</a> Fix default export with arrows and function naming. (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>)</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">// this wasn't exporting correctly before</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">export default ({ onClick }) =&gt; {</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  return &lt;div onClick={() =&gt; onClick()}&gt;&lt;/div&gt;;</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4518" target="_blank" rel="noopener noreferrer">#4518</a> Fix default exported classes without a name. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// wasn't correctly transforming to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">exports</span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"default"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// with the es3-transforms</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4521" target="_blank" rel="noopener noreferrer">#4521</a> Fix striping of <code>typeParameters</code> from arrow functions. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// &lt;X&gt; wasn't stripped out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> find </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token constant" style="color:#f5871f">X</span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token function-variable function" style="color:#4271ae">f</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter literal-property property" style="color:#f5871f">x</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter constant" style="color:#f5871f">X</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token constant" style="color:#f5871f">X</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">xs</span><span class="token operator">:</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:#eab700">Array</span><span class="token operator">&lt;</span><span class="token constant" style="color:#f5871f">X</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token plain"> </span><span class="token operator">?</span><span class="token parameter constant" style="color:#f5871f">X</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  xs</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">b</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> b </span><span class="token operator">?</span><span class="token plain"> b </span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">f</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">?</span><span class="token plain"> x </span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">)</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4552" target="_blank" rel="noopener noreferrer">#4552</a> Fix destructuring evaluation with call expressions. (<a href="https://github.com/danez" target="_blank" rel="noopener noreferrer">@danez</a>)</p><p>We noticed that we can not make this optimizations if there are function calls or member expressions on the right hand side of the assignment since the function call or the member expression (which might be a getter with side-effect) could potentially change the variables we are assigning to.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">[</span><span class="token plain">x</span><span class="token punctuation">,</span><span class="token plain"> y</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// was transforming to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">x </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">y </span><span class="token operator">=</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// now transforms to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> obj</span><span class="token punctuation">.</span><span class="token property-access">x</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">x </span><span class="token operator">=</span><span class="token plain"> _ref</span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">y </span><span class="token operator">=</span><span class="token plain"> _ref</span><span class="token punctuation">[</span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/4587" target="_blank" rel="noopener noreferrer">#4587</a> Prevent flow-strip-types/flow-comments from removing entire ClassProperty. (<a href="https://github.com/danharper" target="_blank" rel="noopener noreferrer">@danharper</a>)</p><hr><p>Check out <a href="https://github.com/babel/babel/releases/tag/v6.16.0" target="_blank" rel="noopener noreferrer">Github</a> for the rest of the changelog!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babili (babel-minify)]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/08/26/babili</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/08/26/babili</guid>
            <pubDate>Tue, 30 Aug 2016 10:50:00 GMT</pubDate>
            <description><![CDATA[We released Babili as beta (0.0.1) a few days ago under an MIT license!]]></description>
            <content:encoded><![CDATA[<p>We released <a href="https://github.com/babel/babili" target="_blank" rel="noopener noreferrer">Babili</a> as beta (0.0.1) a few days ago under an MIT license!</p><blockquote><p>Try it out in the Babel <a href="http://babeljs.io/repl/#?babili=true&amp;evaluate=false" target="_blank" rel="noopener noreferrer">REPL</a> and report any bugs or potential optimizations we can make! There's also a <a href="https://babeljs.slack.com/messages/minify/" target="_blank" rel="noopener noreferrer">#minify</a> slack room!</p></blockquote><p>There are a lot of (valid) questions about why a new minifier is a good idea, so this post should help with that.</p><p>TL;DR: Babili can accept ES2015+ input, while current minifiers are mostly limited to ES5, requiring code to be transpiled before minification. This is becoming unnecessary as people begin to ship ES2015 to clients. Babili is also modular/flexible (being a <a href="http://babeljs.io/docs/plugins/#presets" target="_blank" rel="noopener noreferrer">Babel preset</a> means it supports user plugins) and can be used as a preset or CLI tool. Babili will also be able to make ES2015+ specific optimizations.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="pronunciation">Pronunciation<a href="#pronunciation" class="hash-link" aria-label="Direct link to Pronunciation" title="Direct link to Pronunciation">​</a></h2><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c"># sounds like "bah billy" or "Babadi" (from DBZ)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">say Babili</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Babili is Babylon in Akkadian.</p><blockquote><p>If you can't remember the name, babel-minify works too (made <a href="https://github.com/babel/babili/issues/124" target="_blank" rel="noopener noreferrer">an issue</a> for the name).</p></blockquote><h2 class="anchor anchorWithStickyNavbar_JmGV" id="why-minify">Why minify?<a href="#why-minify" class="hash-link" aria-label="Direct link to Why minify?" title="Direct link to Why minify?">​</a></h2><p>At a basic level, <a href="https://en.wikipedia.org/wiki/Minification_(programming)" target="_blank" rel="noopener noreferrer">minification</a> removes unnecessary characters from a program without changing its functionality -- things like comments, whitespace, newlines, and extra parentheses. Advanced minification may transform programs into smaller equivalents and remove redundant/unreachable code.</p><p>Minification is primarily useful for decreasing the size of the JavaScript payload sent from the server to the client: users will download less code to use your website. Advanced minification can also result in shorter parse time (less code to parse) and in some cases faster runtime (e.g. advanced optimizations like function inlining).</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="current-minifiers">Current minifiers<a href="#current-minifiers" class="hash-link" aria-label="Direct link to Current minifiers" title="Direct link to Current minifiers">​</a></h2><p>Tools such as <a href="https://github.com/mishoo/UglifyJS2" target="_blank" rel="noopener noreferrer">Uglify</a> don't currently support targeting the latest version of ECMAScript (<a href="https://github.com/mishoo/UglifyJS2/issues/448" target="_blank" rel="noopener noreferrer">not yet</a>: <a href="https://github.com/mishoo/UglifyJS2/tree/harmony" target="_blank" rel="noopener noreferrer">harmony branch</a>).</p><p>We currently use tools like Babel to compile ES2015 code down to ES5 code to support older browsers. Then we use something like Uglify to cut down on the bundle size.</p><p>As browsers implement more ES2015 features and we drop support for older browser versions, there is a sliding window of the version of ECMAScript you write in and the target ECMAScript version you minify to. However since Uglify cannot parse ES2015+, you would still have to compile down to ES5 anyway.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babili">Babili<a href="#babili" class="hash-link" aria-label="Direct link to Babili" title="Direct link to Babili">​</a></h2><p>That's where Babili comes in.</p><p>Babili is ES2015+ aware because it is built using the Babel toolchain.
It is written as a set of Babel plugins, consumable with the <a href="https://github.com/babel/babili/tree/master/packages/babel-preset-babili" target="_blank" rel="noopener noreferrer"><code>babili</code> preset</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="example">Example<a href="#example" class="hash-link" aria-label="Direct link to Example" title="Direct link to Example">​</a></h2><p>Say we're targeting the latest versions of Chrome, Firefox, Edge, and Safari -- all of which support <a href="http://babeljs.io/learn-es2015/#classes" target="_blank" rel="noopener noreferrer">ES2015 classes</a>. Then, compiling ES2015 classes to a constructor function and prototype methods (ES5) results in more code (and potentially loses any optimizations browsers might have for classes).</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Mangler</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">program</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">program</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> program</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// need this since otherwise Mangler isn't used</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Mangler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Before, we might run Babel to transpile <a href="http://babeljs.io/docs/plugins/transform-es2015-classes" target="_blank" rel="noopener noreferrer">the class into a function</a> and run Uglify on the compiled code to send to the browser.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// ES2015 code -&gt; Babel -&gt; Uglify/Babili -&gt; Minified ES5 Code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token function-variable function" style="color:#4271ae">a</span><span class="token operator">=</span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">b</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function" style="color:#4271ae">_classCallCheck</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">program</span><span class="token operator">=</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function" style="color:#4271ae">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>With Babili, you can just run the minifier which works on ES2015 code.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// ES2015 code -&gt; Babili -&gt; Minified ES2015 Code</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">a</span><span class="token punctuation">{</span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">b</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">program</span><span class="token operator">=</span><span class="token plain">b</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">a</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Also it's important to note that this isn't specific to ES2015. Because Babel updates as ECMAScript updates (with <a href="http://babeljs.io/docs/plugins/#official-presets" target="_blank" rel="noopener noreferrer">ES2015, ES2016, and now ES2017</a>) and follows the proposal process for experimental features (with our <a href="http://babeljs.io/docs/plugins/#stage-x-experimental-presets" target="_blank" rel="noopener noreferrer">stage-x presets</a>), the minifier should be able to output whatever version of ECMAScript that is supported.</p><p>In the future, we might make use of the ES2015+ syntax information we have at compile time (e.g. we know that given function is an arrow function or that a given binding is block-scoped etc) to do advanced optimizations. And we can make use of the knowledge that we're targeting an ES2015+ environment in creative ways.</p><p>We're just getting started so let us know if you have any ideas!</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="some-of-the-plugins"><a href="https://github.com/babel/babili#plugins-in-babel-preset-babili" target="_blank" rel="noopener noreferrer">Some of the Plugins</a><a href="#some-of-the-plugins" class="hash-link" aria-label="Direct link to some-of-the-plugins" title="Direct link to some-of-the-plugins">​</a></h3><p>To give an idea of some of the transforms:</p><p><a href="https://github.com/babel/babili/tree/master/packages/babel-plugin-minify-constant-folding" target="_blank" rel="noopener noreferrer">babel-plugin-minify-constant-folding</a>:</p><p>Tries to evaluate expressions and inline the result. For now only deals with numbers and strings.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">2</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">3</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token string" style="color:#718c00">"b"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"c"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"d"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> g </span><span class="token operator">+</span><span class="token plain"> z </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"f"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"h"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"z"</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token number" style="color:#f5871f">6</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token string" style="color:#718c00">"b"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> a </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"cd"</span><span class="token plain"> </span><span class="token operator">+</span><span class="token plain"> g </span><span class="token operator">+</span><span class="token plain"> z </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"fhz"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babili/tree/master/packages/babel-plugin-minify-mangle-names" target="_blank" rel="noopener noreferrer">babel-plugin-minify-mangle-names</a>:</p><p>Context- and scope- aware variable renaming.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> globalVariableName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> longLocalVariableName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">longLocalVariableName</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">longLocalVariableName</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> globalVariableName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">42</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="usage">Usage<a href="#usage" class="hash-link" aria-label="Direct link to Usage" title="Direct link to Usage">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babel-preset">Babel Preset<a href="#babel-preset" class="hash-link" aria-label="Direct link to Babel Preset" title="Direct link to Babel Preset">​</a></h3><p>If you already use Babel, you can just add the <a href="https://github.com/babel/babili#babel-preset" target="_blank" rel="noopener noreferrer"><code>babili</code></a> preset (<code>babel-preset-babili</code>) to your config.</p><p>You will want to enable this only in production, so use the <a href="http://babeljs.io/docs/usage/babelrc/#env-option" target="_blank" rel="noopener noreferrer">env option</a> which uses either <code>process.env.BABEL_ENV</code> or <code>process.env.NODE_ENV</code></p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ </span><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> babel-preset-babili --save-dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// previous .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2015"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2015"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"env"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"production"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"babili"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>One issue with using Babili as a preset is that then Babili would only run per-file rather than on the whole bundle. Minification usually happens after bundling as with the "UglifyJsPlugin" in webpack. However, running it after bundling
would lose the speed benefits (needs to be measured) of doing the transpiling/minification in the same step. Again, this is something we need to think about: how to integrate or pass more information to the bundler.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="babili-cli">Babili CLI<a href="#babili-cli" class="hash-link" aria-label="Direct link to Babili CLI" title="Direct link to Babili CLI">​</a></h3><p>If you don't use Babel, you can use our standalone CLI tool <a href="https://github.com/babel/babili#cli" target="_blank" rel="noopener noreferrer"><code>babili</code></a>. (Currently it's just a wrapper for <code>babel-cli</code> + the preset). You could run this after transpiling (or not) in place of Uglify.</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ </span><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> babili --save-dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babili src -d lib</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c"># equivalent to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c"># babel src -d lib --presets=babili --no-babelrc</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="webpack">Webpack<a href="#webpack" class="hash-link" aria-label="Direct link to Webpack" title="Direct link to Webpack">​</a></h3><p>You can just use the preset with <a href="https://github.com/babel/babel-loader" target="_blank" rel="noopener noreferrer"><code>babel-loader</code></a>.</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ </span><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> babel-core babel-loader babel-preset-babili</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">module</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">loaders</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">\.js$</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">loader</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'babel'</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">query</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">'babili'</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Or use it separately with the <a href="https://github.com/boopathi/babili-webpack-plugin" target="_blank" rel="noopener noreferrer">babili-webpack-plugin</a> (made by <a href="https://github.com/boopathi/" target="_blank" rel="noopener noreferrer">@boopathi</a>, who also works on Babili).</p><div class="language-shell codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-shell codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ </span><span class="token function" style="color:#4271ae">npm</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">install</span><span class="token plain"> babili-webpack-plugin --save-dev</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// webpack.config.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token maybe-class-name">BabiliPlugin</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babili-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">//...,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">output</span><span class="token operator">:</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">//...,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">BabiliPlugin</span><span class="token punctuation">(</span><span class="token plain">options</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We want to have a better story with integration with Webpack/bundlers in the near future! Also check out <a href="https://github.com/babel/babili/issues/100" target="_blank" rel="noopener noreferrer">#100</a>.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="proscons">Pros/Cons<a href="#proscons" class="hash-link" aria-label="Direct link to Pros/Cons" title="Direct link to Pros/Cons">​</a></h2><p><strong>Uglify Pros</strong></p><ul><li><p>No change to existing tooling if you are already minifying.</p></li><li><p>Battle-tested/production ready (it's been around for years and has wide adoption (we are all using it)!</p></li><li><p>It's super fast and outputs small code already.</p></li></ul><p><strong>Uglify Cons</strong></p><ul><li><p>Custom parser/tooling, so it's difficult to output/minify ES2015+ and make changes.</p></li><li><p>Not modular, and currently no way to create own plugins/minification strategies outside of core.</p></li></ul><p><strong>Babili Pros:</strong></p><ul><li><p>ES2015+ aware (nothing special needs to be done because we can use the babylon parser) and Babel will update as standards/browsers update.</p></li><li><p>Uses the existing Babel toolchain, can consume as a Babel preset or standalone.</p></li><li><p>Potential for custom smart transforms for React/Flow, etc.</p></li><li><p>Could use Flow/Typescript annotations to enable advanced minification.</p></li><li><p>Each minification step can be split into its own plugin, and there’s plenty of options for customization. This makes it easier to contribute and to find/submit issues for specific problems. It also means that people can independently create their own experimental plugins before upstreaming them into core.</p><ul><li>For example: <a href="https://github.com/babel/babili/tree/master/packages/babel-plugin-transform-minify-booleans" target="_blank" rel="noopener noreferrer">this</a> just turns <code>true</code> into <code>!0</code> which is straightforward to write.</li></ul></li><li><p>Should be an easy transition if people are familiar with transpiling with Babel already.</p></li></ul><p><strong>Babili Cons:</strong></p><ul><li><p>We released it early, so there aren't many users yet. Early adopters will have to deal with a tool that isn't as battle-tested as Uglify at first.</p></li><li><p>Right now, the performance is worse/size is worse than Uglify on our benchmark tests. However, this is something we'll be focusing on improving.</p></li></ul><p>TL;DR: Babili should be able to keep up with the ECMAScript standard as new features get added as well as target the environments you need to support. It has a lot of potential: it may not be as production-ready as Uglify at the moment since it was just released but as we continue to optimize with more users it should be more than capable.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="how-to-help">How to Help<a href="#how-to-help" class="hash-link" aria-label="Direct link to How to Help" title="Direct link to How to Help">​</a></h2><p><a href="https://twitter.com/amasad" target="_blank" rel="noopener noreferrer">Amjad</a> had been working on this project for a while but we decided to release it earlier as a beta to allow the community to test it out and both contribute through reporting bugs and patches.</p><p>It's still early days for this project so there's a lot to help out with! Our next priority is to make Babili more stable/robust for a 1.0.0 release.</p><p>We will be working to get it as fast and produce code sizes as small as Uglify/<a href="https://github.com/google/closure-compiler" target="_blank" rel="noopener noreferrer">Closure Compiler</a> in simple mode.</p><ul><li><strong>Testing on more codebases</strong>: This will help everyone greatly. Because a minifier runs on all code it has potential for a lot of edge cases/bugs not covered in our basic unit tests. Hopefully we can setup a way to report issues easily; now that the <a href="https://babeljs.io/repl/" target="_blank" rel="noopener noreferrer">repl</a> supports the minifier it should be easier to reproduce/link bugs. In the future we want options to enable specific plugins so we can pinpoint minimal reproduction steps.</li><li><strong>Project infrastructure/maintenance</strong>: We want to create more robust benchmarking, setup integration tests on popular open source projects (run the minifier, and then run all the project's unit tests).</li><li><strong>Check the output</strong>: If something can be more simplified, it should be straightforward to create an issue and suggest a new transformation to an existing plugin or create a new one. We have the benefit of being modular so anyone can also make their own plugins and then we can figure out whether to include them in the core preset.</li></ul><p>Huge thanks to <a href="https://github.com/amasad" target="_blank" rel="noopener noreferrer">Amjad (@amasad)</a> for starting this project and Facebook for allowing us to release this under the Babel organization as an MIT licensed project! <a href="https://github.com/kittens" target="_blank" rel="noopener noreferrer">Sebastian (@kittens)</a> was obviously a big part of this given this wouldn't have been possible without Babel. Also thanks to <a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">James (@thejameskyle)</a>, <a href="https://github.com/kangax" target="_blank" rel="noopener noreferrer">Juriy (@kangax)</a> for helping see this through to release! Also want to give a shoutout to <a href="https://github.com/boopathi" target="_blank" rel="noopener noreferrer">Boopathi (@boopathi)</a> who we invited to help us out after seeing the work on his own <a href="https://github.com/boopathi/babel-minify" target="_blank" rel="noopener noreferrer">babel-minify</a> project!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.14.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2016/08/24/6.14.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2016/08/24/6.14.0</guid>
            <pubDate>Wed, 24 Aug 2016 09:30:00 GMT</pubDate>
            <description><![CDATA[A new es2017, latest preset, and lots of fixes in this release.]]></description>
            <content:encoded><![CDATA[<p>A new <code>es2017</code>, <code>latest</code> preset, and lots of fixes in this release.</p><p>It's been a while since the last post! If you haven't seen it, we started posting some notes at <a href="https://github.com/babel/notes" target="_blank" rel="noopener noreferrer">babel/notes</a>.</p><p>And... we usually post <a href="https://github.com/babel/babel/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">the changelog</a> in <a href="https://github.com/babel/babel/releases" target="_blank" rel="noopener noreferrer">Releases</a>, but I figured it could go as a post as well for minor versions.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="take-me-to-flavor-town">TAKE ME TO FLAVOR TOWN<a href="#take-me-to-flavor-town" class="hash-link" aria-label="Direct link to TAKE ME TO FLAVOR TOWN" title="Direct link to TAKE ME TO FLAVOR TOWN">​</a></h2><p><a href="https://github.com/babel/babel/pull/3624" target="_blank" rel="noopener noreferrer">#3624</a> A new preset for <code>es2017</code>: it includes the 2 previous stage-3 plugins:</p><ul><li>async/await (via <a href="http://babeljs.io/docs/plugins/transform-async-to-generator" target="_blank" rel="noopener noreferrer">transform-async-to-generator</a>)</li><li><a href="http://babeljs.io/docs/plugins/syntax-trailing-function-commas" target="_blank" rel="noopener noreferrer">trailing commas in functions</a>.</li><li>Thanks to <a href="https://github.com/bettiolo" target="_blank" rel="noopener noreferrer">@bettiolo</a> for transferring the npm package</li></ul><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2017"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/3625" target="_blank" rel="noopener noreferrer">#3625</a>, <a href="https://github.com/babel/babel/pull/3673" target="_blank" rel="noopener noreferrer">#3673</a> A new preset called <code>latest</code> to include at transforms ES2015+ (currently ES2015, ES2016, ES2017). You can also pass options down to the <code>es2015</code> preset.</p><blockquote><p>We also will be working on getting a target/env (autoprefixer) preset soon.</p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"latest"</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// with options</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"latest"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string-property property">"es2015"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token string-property property">"modules"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/3671" target="_blank" rel="noopener noreferrer">#3671</a> We also are including a <code>spec</code> option for the <code>es2015</code> preset since the <a href="http://babeljs.io/docs/plugins/transform-es2015-arrow-functions/" target="_blank" rel="noopener noreferrer">arrow function</a>/<a href="http://babeljs.io/docs/plugins/transform-es2015-template-literals/" target="_blank" rel="noopener noreferrer">template string</a> plugins support this option.</p><blockquote><p><code>spec</code> for arrow functions adds a runtime check to make sure arrow functions are not instantiated (since they transform into normal functions).
<code>spec</code> for template literals wraps all expressions in <code>String</code> rather than simple string concatenation.</p></blockquote><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// .babelrc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2015"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token string-property property">"spec"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://github.com/babel/babel/pull/3659" target="_blank" rel="noopener noreferrer">#3659</a> @kittens added an optional <code>wrapPluginVisitorMethod</code> callback to transform to allow for performance tracking/introspection of plugins. More docs will be added on the <a href="http://babeljs.io/" target="_blank" rel="noopener noreferrer">website</a> soon.</p><p><a href="https://github.com/babel/babel/pull/3658" target="_blank" rel="noopener noreferrer">#3658</a> sourcemaps will also now have a <code>names</code> field for identifiers to allow debuggers to do re-aliasing of mangled identifiers.</p><p><a href="https://github.com/babel/babel/pull/3518" target="_blank" rel="noopener noreferrer">#3518</a> For spec compliancy, we now will throw on a file with multiple export default.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="notable-bug-fixes">Notable Bug Fixes<a href="#notable-bug-fixes" class="hash-link" aria-label="Direct link to Notable Bug Fixes" title="Direct link to Notable Bug Fixes">​</a></h3><p><a href="https://github.com/babel/babel/pull/3527" target="_blank" rel="noopener noreferrer">#3527</a> Fix class inheritance in IE &lt;=10 without <code>loose</code> mode.</p><p><a href="https://github.com/babel/babel/pull/3644" target="_blank" rel="noopener noreferrer">#3644</a> Support the <code>ignore</code> config option in <code>.babelrc</code>.</p><p><a href="https://github.com/babel/babel/pull/3655" target="_blank" rel="noopener noreferrer">#3655</a> Flow-only class props were not be stripped without <code>transform-class-properties</code>.</p><h4 class="anchor anchorWithStickyNavbar_JmGV" id="guy-fieri">Guy Fieri<a href="#guy-fieri" class="hash-link" aria-label="Direct link to Guy Fieri" title="Direct link to Guy Fieri">​</a></h4><p><a href="https://github.com/babel/babel/pull/3641" target="_blank" rel="noopener noreferrer">#3641</a> Fix exports of babel-core. (<a href="https://github.com/thejameskyle" target="_blank" rel="noopener noreferrer">@thejameskyle</a>)</p><p><a href="https://github.com/babel/babel/pull/3646" target="_blank" rel="noopener noreferrer">#3646</a> Remove Guy Fieri from Babel's source code. (<a href="https://github.com/jdan" target="_blank" rel="noopener noreferrer">@jdan</a>)</p><p>Thanks!</p><blockquote><p>And check out <a href="https://github.com/babel/babel/releases/tag/v6.14.0" target="_blank" rel="noopener noreferrer">babel/babel#v6.14.0</a> for the rest of the changelog.</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel Doctor]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/11/03/babel-doctor</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/11/03/babel-doctor</guid>
            <pubDate>Tue, 03 Nov 2015 10:30:00 GMT</pubDate>
            <description><![CDATA[Babel Doctor is heavily inspired ripped from the awesome]]></description>
            <content:encoded><![CDATA[<blockquote><p>Babel Doctor is <s>heavily inspired</s> ripped from the awesome
<a href="https://github.com/yeoman/doctor" target="_blank" rel="noopener noreferrer">Yeoman Doctor</a> by
<a href="https://github.com/sindresorhus" target="_blank" rel="noopener noreferrer">Sindre Sorhus</a>.</p></blockquote><hr><blockquote><p>babel-doctor has been removed as of v6.18.0 of <code>babel-cli</code>. If anyone needs it we will bring it back as a standalone npm module called <code>babel-doctor</code>.</p></blockquote><p>We launched <a href="https://babeljs.io/blog/2015/10/29/6.0.0/" target="_blank" rel="noopener noreferrer">Babel 6</a> last week. This was a
pretty big change from the previous batteries included Babel and with it came a host of
potential environment issues.</p><p>In order to combat this we now include a <code>babel-doctor</code> command with the <code>babel-cli</code> that
detects common problems with your Babel installation such as:</p><ul><li>Missing <code>.babelrc</code>.</li><li>Duplicate Babel core modules</li><li>Outdated Babel core modules</li></ul><h2 class="anchor anchorWithStickyNavbar_JmGV" id="usage">Usage<a href="#usage" class="hash-link" aria-label="Direct link to Usage" title="Direct link to Usage">​</a></h2><p>First, make sure you have the Babel CLI installed.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install -g babel-cli@^6.1.0</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then simply <code>cd</code> into your project directory and run:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel-doctor</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">Babel Doctor</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">Running sanity checks on your system. This may take a few minutes...</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">✔ Found config at /Users/sebastian/.babelrc</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">✔ All babel packages appear to be up to date</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">✔ No duplicate babel packages found</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">Everything looks all right!</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>We hope this makes it easier to setup and use Babel in your project.</p><p>Happy hacking!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Setting up Babel 6]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/10/31/setting-up-babel-6</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/10/31/setting-up-babel-6</guid>
            <pubDate>Sat, 31 Oct 2015 17:30:00 GMT</pubDate>
            <description><![CDATA[Babel 6 is fresh off the press and we’re still getting a lot sorted out. In the past two days we've seen more activity on GitHub and Slack than ever before. Everyone who has been helping out has been doing a great job.]]></description>
            <content:encoded><![CDATA[<p>Babel 6 is fresh off the press and we’re still getting a lot sorted out. In the past two days we've seen more activity on GitHub and Slack than ever before. Everyone who has been helping out has been doing a great job.</p><p>However, the documentation is still lacking at this point, I’m currently going through and creating an entirely new “Getting Started” section of the site.</p><p>This blog post will cover most of the basics until that’s completed.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="installing-babel">Installing Babel<a href="#installing-babel" class="hash-link" aria-label="Direct link to Installing Babel" title="Direct link to Installing Babel">​</a></h2><p>The <code>babel</code> package is no more. Previously, it was the entire compiler and all the transforms plus a bunch of CLI tools, but this lead to unnecessarily large downloads and was a bit confusing. Now we’ve split it up into two separate packages: <code>babel-cli</code> and <code>babel-core</code>.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --global babel-cli</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"># or</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-core</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If you want to use Babel from the CLI you can install <code>babel-cli</code> or if you want to use the Node API you can install <code>babel-core</code>.</p><p>Right now, most integrations haven’t been updated for Babel 6, but that will be changing over the coming days.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="adding-plugins-and-presets">Adding Plugins and Presets<a href="#adding-plugins-and-presets" class="hash-link" aria-label="Direct link to Adding Plugins and Presets" title="Direct link to Adding Plugins and Presets">​</a></h2><p>Babel 6 ships without any default transforms, so when you run Babel on a file it will just print it back out to you without changing anything.</p><p>In order to start compiling various features you need to install plugins. For example if you want to use arrow functions:</p><p>First install the arrow functions plugin:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-plugin-transform-es2015-arrow-functions</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then add it to your <code>.babelrc</code> file like this:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"transform-es2015-arrow-functions"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now if you run Babel on a file with arrow functions they will be compiled. Easy right? Not so fast.</p><p>Babel plugins are designed to compile down incrementally. Say if you wanted to use an ES2019 feature, it would be compiled down to ES2018 then ES2017 and so on. This ensures that people can use native implementation if they want to.</p><p>This even happens within a single specification, for example ES2015 constants will be compiled to ES2015 <code>let</code> variables. So if you want it to go all the way down to ES5 you need to compile that as well.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-plugin-check-es2015-constants</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-plugin-transform-es2015-block-scoping</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"plugins"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"check-es2015-constants"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"transform-es2015-block-scoping"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>These dependencies aren’t easy to keep track and if you don’t want to manually specify them all you may install a preset instead.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-preset-es2015</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es2015"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>To Include all JavaScript versions:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-preset-env</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"env"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>React also has it’s own preset:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-preset-react</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"react"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This is also what the <code>stage</code> option has been replaced with:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-preset-stage-2</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token string-property property">"presets"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"stage-2"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>Note: Stage presets include all the stages above them automatically (ie. stage 1 includes 2 and 3)</p></blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6.0.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/10/29/6.0.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/10/29/6.0.0</guid>
            <pubDate>Thu, 29 Oct 2015 17:00:00 GMT</pubDate>
            <description><![CDATA[NOTE: Not all integrations have been updated yet. This is a very disruptive major]]></description>
            <content:encoded><![CDATA[<blockquote><p><strong>NOTE:</strong> Not all integrations have been updated yet. This is a very disruptive major
so please bear with us as we smooth out the edges.</p></blockquote><p>It’s hard to believe it’s been a year since the Babel project started, but there was a birthday cake, so it must be real!</p><blockquote class="twitter-tweet" lang="en"><p lang="en" dir="ltr">I work with some super awesome people. Thank you <a href="https://twitter.com/cpojer" target="_blank" rel="noopener noreferrer">@cpojer</a> and Ovidiu! <a href="https://t.co/l1NzyobiBz" target="_blank" rel="noopener noreferrer">pic.twitter.com/l1NzyobiBz</a></p>— Sebastian McKenzie (@sebmck) <a href="https://twitter.com/sebmck/status/648495457623252992" target="_blank" rel="noopener noreferrer">September 28, 2015</a></blockquote><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><p>A whole lot has happened over the last year. We’ve travelled all over the world talking about Babel, and we’ve met some really awesome people along the way.</p><p>Babel has spent the last year finding its place in the JavaScript community. In February we decided that Babel wasn’t just going to be a ES6 transpiler. Instead, it needed to become a platform. A suite of tools designed to create the next generation of JavaScript tooling.</p><p>When we released Babel 5, it came with a new plugin API that allowed anyone to use the full power of Babel to create tools that plug directly into the transform process. In just a few short months this has blown up into an <a href="https://www.npmjs.com/search?q=babel-plugin" target="_blank" rel="noopener noreferrer">entire ecosystem of tools</a>.</p><p>Developers have built everything from debugging tools, framework optimizations, and minifiers to experimental new syntaxes and systems to enforce complex rules on their codebases. These extensions have proven to be both creative and extremely useful.</p><p>People have also built complex tooling on top of Babel internals, like <a href="http://documentation.js.org" target="_blank" rel="noopener noreferrer">documentationjs</a> which uses Babel’s Babylon parser to replace an existing tool with a much more intelligent version.</p><p>But we think we can go even further. Babel should be able to power minifiers, linters, formatters, syntax highlighters, code completion tools, type checkers, codemod tools, and every other tool to be using the same foundation to do their job better than ever before.</p><p>So today we’re releasing Babel 6.</p><p>This is the most significant update we’ve ever made and enables the project to truly become a platform for the community to build upon.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="modularization">Modularization<a href="#modularization" class="hash-link" aria-label="Direct link to Modularization" title="Direct link to Modularization">​</a></h3><p>The biggest change you’ll notice is that Babel has been completely restructured to be as modular as possible, and all of the transformers have been rewritten as plugins using the same API that is exposed to everyone.</p><p>All of the internals have been pulled out into separate packages as well, each defining a lightweight public API that can be used independently of everything else.</p><p>If there’s something you want to build with some Babel internals, you can now just install the package and have full access to them. Inside the <a href="https://github.com/babel/babel/tree/development/packages" target="_blank" rel="noopener noreferrer">packages directory</a> you’ll find all existing packages and plugins.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="opt-in-plugins">Opt-in Plugins<a href="#opt-in-plugins" class="hash-link" aria-label="Direct link to Opt-in Plugins" title="Direct link to Opt-in Plugins">​</a></h3><p>Since Babel is focusing on being a platform for JavaScript tooling and not an ES2015 transpiler, we’ve decided to make all of the plugins opt-in. This means when you install Babel it will no longer transpile your ES2015 code by default.</p><p>In order to drastically simplify the public API of Babel, each transformer is now completely independent. This means the ‘blacklist’, ‘whitelist’, ‘optional’, ‘nonStandard’, and ‘modules’ options have all been removed, but that doesn’t mean you need to do more work to get Babel to transform your codebase.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-presets">Plugin Presets<a href="#plugin-presets" class="hash-link" aria-label="Direct link to Plugin Presets" title="Direct link to Plugin Presets">​</a></h3><p>Since specifying and maintaining dozens of transformers in a config file would be a lot of work, Babel 6 is introducing the concept of Plugin Presets which group together similar plugins for easy consumption.</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ npm install --save-dev babel-preset-es2015</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">“presets”</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain">“es2015”</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The official presets included today are <code>babel-preset-es2015</code> and <code>babel-preset-react</code>, but we expect there will be many more in the future.</p><p>We also added presets for stages such as <code>babel-preset-stage-0</code> (used to be <code>stage: 0</code> in <code>.babelrc</code> in babel 5.x).</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="performance-improvements">Performance Improvements<a href="#performance-improvements" class="hash-link" aria-label="Direct link to Performance Improvements" title="Direct link to Performance Improvements">​</a></h3><p>Performance continues to be one of the top priorities of Babel. Babel 5 changed the transformation and traversal pipeline dramatically to make way for some major performance improvements that have been implemented in Babel 6.</p><p>The traversal process is one of biggest chunks of time spent in the Babel pipeline. With any AST-based tool you want to make sure that you traverse the tree as little as possible to keep it fast. Plugins were designed around this so that they could be lightning fast while working with everything else.</p><p>Babel 6 implements a new optimization which merges all plugins together into a single traversal. It then manages the traversal process completely so plugins don’t ever have to worry about doing so manually. As a developer you can simply focus on writing your transform, and Babel will handle the rest.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-api">Plugin API<a href="#plugin-api" class="hash-link" aria-label="Direct link to Plugin API" title="Direct link to Plugin API">​</a></h3><p>We received a lot of feedback that the plugin API was confusing, so in Babel 6, it’s a bit simpler. Note that this is a breaking change, but it should reduce confusion quite a bit.</p><p><strong>Babel 5</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter maybe-class-name" style="color:#f5871f">Plugin</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter literal-property property" style="color:#f5871f">types</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> t </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Plugin</span><span class="token punctuation">(</span><span class="token plain">‘ast</span><span class="token operator">-</span><span class="token plain">transform’</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">visitor</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Babel 6</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">default</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter punctuation" style="color:#f5871f">{</span><span class="token parameter" style="color:#f5871f"> </span><span class="token parameter literal-property property" style="color:#f5871f">types</span><span class="token parameter operator" style="color:#f5871f">:</span><span class="token parameter" style="color:#f5871f"> t </span><span class="token parameter punctuation" style="color:#f5871f">}</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">visitor</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>Plugin Authors</strong>: When updating your plugins, please remember to bump your major versions since this makes Babel 5 and 6 incompatible. Semver is important!</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="newupdated-proposals">New/Updated Proposals<a href="#newupdated-proposals" class="hash-link" aria-label="Direct link to New/Updated Proposals" title="Direct link to New/Updated Proposals">​</a></h3><p>There are a couple of updated TC39 proposals that have come out. Babel 6 updates to the latest revisions of decorators, class properties, and others.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="in-closing">In Closing<a href="#in-closing" class="hash-link" aria-label="Direct link to In Closing" title="Direct link to In Closing">​</a></h3><p>This is a really exciting release for us.</p><p>Anyone who's ever been involved with an open source project knows that it's a ton of work, but at the end of the day it's incredibly gratifying to be able to contribute even the tiniest bit back to the community.</p><p>Sebastian has been up literally all night to finish all the last minute things needed to launch Babel 6 during his EmberCamp keynote. It's currently 1am for me in San Francisco and I'm writing this blog post as quickly as possible, listening to EDM music to stay awake.</p><p>I want to thank everyone who has ever helped out even the littlest bit with Babel. A huge shoutout to Logan Smyth (<a href="https://github.com/loganfsmyth" target="_blank" rel="noopener noreferrer">@loganfsmyth</a>), Henry Zhu (<a href="https://github.com/hzoo" target="_blank" rel="noopener noreferrer">@hzoo</a>), Jesse McCarthy (<a href="https://github.com/jmm" target="_blank" rel="noopener noreferrer">@jmm</a>), and Denis Pushkarev (<a href="https://github.com/zloirock" target="_blank" rel="noopener noreferrer">@zloirock</a>) for all their hard work managing issues and contributing to Babel.</p><p>We’re excited to finally release Babel 6 to the world. As always, we’re committed to pushing Babel to be the best tool it can be, so please keep the GitHub issues and pull requests coming!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[React on ES6+]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/07/07/react-on-es6-plus</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/07/07/react-on-es6-plus</guid>
            <pubDate>Sun, 07 Jun 2015 17:00:00 GMT</pubDate>
            <description><![CDATA[While redesigning Instagram Web from the inside out this year, we enjoyed using a number of ES6+ features to write our React components. Allow me to highlight some of the ways that these new language features can change the way you write a React app, making it easier and more fun than ever.]]></description>
            <content:encoded><![CDATA[<p>While redesigning <a href="https://instagram.com/instagram/" target="_blank" rel="noopener noreferrer">Instagram Web</a> from the inside out this year, we enjoyed using a number of ES6+ features to write our React components. Allow me to highlight some of the ways that these new language features can change the way you write a React app, making it easier and more fun than ever.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="classes">Classes<a href="#classes" class="hash-link" aria-label="Direct link to Classes" title="Direct link to Classes">​</a></h2><p>By far the most outwardly visible change to how we write React components using ES6+ comes about when we choose to use the <strong><a href="https://babeljs.io/docs/learn-es2015/#classes" target="_blank" rel="noopener noreferrer">class definition syntax</a></strong>. Instead of using the <code>React.createClass</code> method to define a component, we can define a bonafide ES6 class that extends <code>React.Component</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Photo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">img alt</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">caption</span><span class="token punctuation">}</span><span class="token plain"> src</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">src</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Right away, you'll notice a subtle difference – a more terse syntax is available to you when defining classes:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES5 way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">Photo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">handleDoubleTap</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">render</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES6+ way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Photo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">handleDoubleTap</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Notably, we've dropped two parentheses and a trailing semicolon, and for each method declared we omit a colon, a <code>function</code> keyword, and a comma.</p><p>All of the lifecycle methods but one can be defined as you would expect when using the new class syntax. The class' <code>constructor</code> now assumes the role previously filled by <code>componentWillMount</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES5 way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">EmbedModal</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">componentWillMount</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> … </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES6+ way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">EmbedModal</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">props</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">(</span><span class="token plain">props</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// Operations usually carried out in componentWillMount go here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="property-initializers">Property initializers<a href="#property-initializers" class="hash-link" aria-label="Direct link to Property initializers" title="Direct link to Property initializers">​</a></h2><p>In the ES6+ class world, prop types and defaults live as static properties on the class itself. These, as well as the component's initial state, can be defined using ES7 <strong><a href="https://gist.github.com/jeffmo/054df782c05639da2adb" target="_blank" rel="noopener noreferrer">property initializers</a></strong>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES5 way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">Video</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">getDefaultProps</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">autoPlay</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">maxLoops</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">10</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">getInitialState</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">loopsRemaining</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">maxLoops</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">propTypes</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">autoPlay</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">bool</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">maxLoops</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">number</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">posterFrameSrc</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">string</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">videoSrc</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">string</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// The ES6+ way</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Video</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> defaultProps </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">autoPlay</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">false</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">maxLoops</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">10</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> propTypes </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">autoPlay</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">bool</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">maxLoops</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">number</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">posterFrameSrc</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">string</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">videoSrc</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token property-access maybe-class-name">PropTypes</span><span class="token punctuation">.</span><span class="token property-access">string</span><span class="token punctuation">.</span><span class="token property-access">isRequired</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  state </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token literal-property property">loopsRemaining</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">.</span><span class="token property-access">maxLoops</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ES7 property initializers operate inside the class' constructor, where <code>this</code> refers to the instance of the class under construction, so the initial state can still be made to depend on <code>this.props</code>. Notably, we no longer have to define prop defaults and the initial state object in terms of a getter function.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="arrow-functions">Arrow functions<a href="#arrow-functions" class="hash-link" aria-label="Direct link to Arrow functions" title="Direct link to Arrow functions">​</a></h2><p>The <code>React.createClass</code> method used to perform some extra binding work on your component's instance methods to make sure that, inside them, the <code>this</code> keyword would refer to the instance of the component in question.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Autobinding, brought to you by React.createClass</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">PostInfo</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">handleOptionsButtonClick</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// Here, 'this' refers to the component instance.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">showOptionsModal</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Since we don't involve the <code>React.createClass</code> method when we define components using the ES6+ class syntax, it would seem that we need to manually bind instance methods wherever we want this behavior:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">// Manually bind, wherever you need to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">PostInfo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">props</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">(</span><span class="token plain">props</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// Manually bind this method to the component instance...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">handleOptionsButtonClick</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">handleOptionsButtonClick</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">bind</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">handleOptionsButtonClick</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// ...to ensure that 'this' refers to the component instance here.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">showOptionsModal</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Luckily, by combining two ES6+ features – <strong><a href="https://babeljs.io/docs/learn-es2015/#arrows" target="_blank" rel="noopener noreferrer">arrow functions</a></strong> and property initializers – opt-in binding to the component instance becomes a breeze:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">PostInfo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">handleOptionsButtonClick</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">showOptionsModal</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The body of ES6 arrow functions share the same lexical <code>this</code> as the code that surrounds them, which gets us the desired result because of the way that ES7 property initializers are scoped. <a href="https://babeljs.io/repl/#?experimental=true&amp;evaluate=true&amp;loose=false&amp;spec=false&amp;code=class%20PostInfo%20extends%20React.Component%20%7B%0A%09handleOptionsButtonClick%20%3D%20(e)%20%3D%3E%20%7B%0A%20%20%20%20this.setState(%7BshowOptionsModal%3A%20true%7D)%3B%0A%20%20%7D%0A%7D" target="_blank" rel="noopener noreferrer">Peek under the hood</a> to see why this works.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="dynamic-property-names--template-strings">Dynamic property names &amp; template strings<a href="#dynamic-property-names--template-strings" class="hash-link" aria-label="Direct link to Dynamic property names &amp; template strings" title="Direct link to Dynamic property names &amp; template strings">​</a></h2><p>One of the <strong><a href="https://babeljs.io/docs/learn-es2015/#enhanced-object-literals" target="_blank" rel="noopener noreferrer">enhancements to object literals</a></strong> includes the ability to assign to a derived property name. We might have originally done something like this to set a piece of state:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> </span><span class="token maybe-class-name">Form</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">createClass</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function-variable function" style="color:#4271ae">onChange</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">inputName</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> stateToSet </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    stateToSet</span><span class="token punctuation">[</span><span class="token plain">inputName </span><span class="token operator">+</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'Value'</span><span class="token punctuation">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> e</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">setState</span><span class="token punctuation">(</span><span class="token plain">stateToSet</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Now, we have the ability to construct objects whose property names are determined by a JavaScript expression at runtime. Here, we use a <strong><a href="https://babeljs.io/docs/learn-es2015/#template-strings" target="_blank" rel="noopener noreferrer">template string</a></strong> to determine which property to set on state:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Form</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">onChange</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">inputName</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> e</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token punctuation">[</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation">inputName</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00">Value</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token plain"> e</span><span class="token punctuation">.</span><span class="token property-access">target</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="destructuring--spread-attributes">Destructuring &amp; spread attributes<a href="#destructuring--spread-attributes" class="hash-link" aria-label="Direct link to Destructuring &amp; spread attributes" title="Direct link to Destructuring &amp; spread attributes">​</a></h2><p>Often when composing components, we might want to pass down <em>most</em> of a parent component's props to a child component, but not all of them. In combining ES6+ <strong><a href="https://babeljs.io/docs/learn-es2015/#destructuring" target="_blank" rel="noopener noreferrer">destructuring</a></strong> with JSX <strong><a href="https://facebook.github.io/react/docs/jsx-spread.html" target="_blank" rel="noopener noreferrer">spread attributes</a></strong>, this becomes possible without ceremony:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">AutoloadingPostsGrid</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">React</span><span class="token class-name punctuation" style="color:#eab700">.</span><span class="token class-name" style="color:#eab700">Component</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">const</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      className</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token spread operator">...</span><span class="token plain">others  </span><span class="token comment" style="color:#8e908c">// contains all properties of this.props except for className</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token plain">className</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token maybe-class-name">PostsGrid</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token plain">others</span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token plain">button onClick</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">handleLoadMoreClick</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token maybe-class-name">Load</span><span class="token plain"> more</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">button</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can combine JSX spread attributes with regular attributes too, taking advantage of a simple precedence rule to implement overrides and defaults. This element will acquire the <code>className</code> “override” even if there exists a <code>className</code> property in <code>this.props</code>:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">&lt;</span><span class="token plain">div </span><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">}</span><span class="token plain"> className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"override"</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  …</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This element will regularly have the <code>className</code> “base” unless there exists a <code>className</code> property in <code>this.props</code> to override it:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"base"</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token spread operator">...</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">props</span><span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  …</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="thanks-for-reading">Thanks for reading<a href="#thanks-for-reading" class="hash-link" aria-label="Direct link to Thanks for reading" title="Direct link to Thanks for reading">​</a></h2><p>I hope that you enjoy using ES6+ language features to write React code as much as we do. Thanks to my colleagues for their contributions to this post, and thanks especially to the Babel team for making the future available to all of us, today.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Function Bind Syntax]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/05/14/function-bind</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/05/14/function-bind</guid>
            <pubDate>Thu, 14 May 2015 19:30:00 GMT</pubDate>
            <description><![CDATA[Babel 5.4 was just released and with it comes support for a new]]></description>
            <content:encoded><![CDATA[<p>Babel 5.4 was just released and with it comes support for a new
<a href="https://github.com/zenparsing/es-function-bind" target="_blank" rel="noopener noreferrer">experimental ES7 syntax</a>
proposed by Kevin Smith (<a href="https://github.com/zenparsing" target="_blank" rel="noopener noreferrer">@zenparsing</a>) and
implemented in Babel by Ingvar Stepanyan
(<a href="https://github.com/RReverser" target="_blank" rel="noopener noreferrer">@RReverser</a>).</p><blockquote><p><strong><em>Warning: This syntax is highly experimental and you should not use
it for anything serious (yet).</em></strong> If you do use this syntax, please
provide feedback on <a href="https://github.com/zenparsing/es-function-bind" target="_blank" rel="noopener noreferrer">GitHub</a>.</p></blockquote><p>The function bind syntax introduces a new operator <code>::</code> which performs function
binding and method extraction.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="virtual-methods">Virtual Methods<a href="#virtual-methods" class="hash-link" aria-label="Direct link to Virtual Methods" title="Direct link to Virtual Methods">​</a></h3><p>Using an iterator library implemented as a module of "virtual methods":</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES7 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> map</span><span class="token imports punctuation">,</span><span class="token imports"> takeWhile</span><span class="token imports punctuation">,</span><span class="token imports"> forEach </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"iterlib"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">getPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">:</span><span class="token operator">:</span><span class="token function" style="color:#4271ae">map</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> x</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">character</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">:</span><span class="token operator">:</span><span class="token function" style="color:#4271ae">takeWhile</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> x</span><span class="token punctuation">.</span><span class="token property-access">strength</span><span class="token plain"> </span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token operator">:</span><span class="token operator">:</span><span class="token function" style="color:#4271ae">forEach</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES6 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports punctuation">{</span><span class="token imports"> map</span><span class="token imports punctuation">,</span><span class="token imports"> takeWhile</span><span class="token imports punctuation">,</span><span class="token imports"> forEach </span><span class="token imports punctuation">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"iterlib"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> _val</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">getPlayers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> map</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">_val</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> x</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">character</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> takeWhile</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">_val</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> x</span><span class="token punctuation">.</span><span class="token property-access">strength</span><span class="token plain"> </span><span class="token operator">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> forEach</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">_val</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token parameter" style="color:#f5871f">x</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">(</span><span class="token plain">x</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>Note:</strong> Babel's <a href="/babel-website/repl/#?experimental=true&amp;evaluate=false&amp;loose=false&amp;spec=false&amp;playground=false&amp;code=import%20%7B%20map%2C%20takeWhile%2C%20forEach%20%7D%20from%20%22iterlib%22%3B%0A%0AgetPlayers()%0A%3A%3Amap(x%20%3D%3E%20x.character())%0A%3A%3AtakeWhile(x%20%3D%3E%20x.strength%20%3E%20100)%0A%3A%3AforEach(x%20%3D%3E%20console.log(x))%3B">output</a>
looks different than this in order to be more concise.</p></blockquote><p>Using a jquery-like library of virtual methods:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES7 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Create bindings for just the methods that we need</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> find</span><span class="token punctuation">,</span><span class="token plain"> html </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> jake</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Find all the divs with class="myClass", then get all of the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// "p"s and replace their content.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token dom variable" style="color:#c82829">document</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">querySelectorAll</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"div.myClass"</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function" style="color:#4271ae">find</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"p"</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function" style="color:#4271ae">html</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"hahaha"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES6 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> _val</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> </span><span class="token dom variable" style="color:#c82829">document</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">querySelectorAll</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"div.myClass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> find</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">_val</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">_val </span><span class="token operator">=</span><span class="token plain"> html</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token plain">_val</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"hahaha"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="method-extraction">Method Extraction<a href="#method-extraction" class="hash-link" aria-label="Direct link to Method Extraction" title="Direct link to Method Extraction">​</a></h3><p>Using method extraction to print the eventual value of a promise to the console:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES7 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token operator">:</span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token property-access">log</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES6 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// Which could be written in ES6 as:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token known-class-name class-name" style="color:#eab700">Promise</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">resolve</span><span class="token punctuation">(</span><span class="token number" style="color:#f5871f">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">then</span><span class="token punctuation">(</span><span class="token console class-name" style="color:#eab700">console</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">log</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">bind</span><span class="token punctuation">(</span><span class="token plain">console</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Using method extraction to call an object method when a DOM event occurs:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES7 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">$</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">".some-link"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">on</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"click"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token operator">:</span><span class="token operator">:</span><span class="token plain">view</span><span class="token punctuation">.</span><span class="token property-access">reset</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token comment" style="color:#8e908c">/* ES6 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">$</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">".some-link"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">on</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"click"</span><span class="token punctuation">,</span><span class="token plain"> view</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">reset</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">bind</span><span class="token punctuation">(</span><span class="token plain">view</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p><strong>Note:</strong> You can read more about this syntax in the
<a href="https://github.com/zenparsing/es-function-bind" target="_blank" rel="noopener noreferrer">Function Bind Syntax proposal</a>.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="usage">Usage<a href="#usage" class="hash-link" aria-label="Direct link to Usage" title="Direct link to Usage">​</a></h3><p>Enable by stage:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --stage 0</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Enable by transformer:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional es7.functionBind</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>The function bind syntax will only make it into ES7 if there is enough interest.
If you would like to see this syntax make it in, please give it a star on
<a href="https://github.com/zenparsing/es-function-bind" target="_blank" rel="noopener noreferrer">GitHub</a> and provide any
feedback you have on <a href="https://github.com/zenparsing/es-function-bind/issues" target="_blank" rel="noopener noreferrer">GitHub issues</a>.</p><p>Special thanks to Ingvar Stepanyan (<a href="https://github.com/RReverser" target="_blank" rel="noopener noreferrer">@RReverser</a>)
for the <a href="https://github.com/babel/babel/pull/1518" target="_blank" rel="noopener noreferrer">implementation</a> in Babel.</p><p class="text-right">— The Babel team</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[5.0.0 Released]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/03/31/5.0.0</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/03/31/5.0.0</guid>
            <pubDate>Tue, 31 Mar 2015 10:00:00 GMT</pubDate>
            <description><![CDATA[In the past few months Babel has been welcomed into several major communities]]></description>
            <content:encoded><![CDATA[<p>In the past few months Babel has been welcomed into several major communities
such as Node, React, Ember, Backbone, Angular, Rails, and many others. We
launched the <a href="/babel-website/users">Users page</a> only a few weeks ago and it's really cool to
see everyone that is using it. Companies like CloudFlare, Netflix, Mozilla, and
Yahoo!. Projects like Ghost, Atom, Mapbox, and so many more.</p><p>We've seen tons of blog posts, talks, events, courses all about ES6+ using
Babel, and official Babel tools have been downloaded nearly 2 million times.</p><p>Today we are making by far the largest release of Babel ever.</p><p><strong>If you're upgrading from Babel 4.x please see the
<a href="#breaking-changes">breaking changes</a></strong>.</p><p>This release includes the new ES7 proposals:</p><ul><li><a href="https://github.com/wycats/javascript-decorators" target="_blank" rel="noopener noreferrer">Decorators</a></li><li><a href="https://gist.github.com/jeffmo/054df782c05639da2adb" target="_blank" rel="noopener noreferrer">Class properties</a></li><li><a href="https://github.com/leebyron/ecmascript-more-export-from" target="_blank" rel="noopener noreferrer">Export extensions</a></li></ul><p>The entire internal traversal and transformation pipeline has undergone a
rewrite that substantially increases flexibility and will allow many future
pipeline performance optimisations.</p><p>This release also brings a plugin API, this allows consumers to plug in their
own custom transformers to utilise the powerful transformation mechanisms that
Babel has to offer.</p><p>You can view the complete CHANGELOG
<a href="https://github.com/babel/babel/blob/main/.github/CHANGELOG-v5.md#500" target="_blank" rel="noopener noreferrer">here</a>.</p><p>And as usual <strong>if you run into any regressions please report them immediately</strong>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="tc39-process">TC39 Process<a href="#tc39-process" class="hash-link" aria-label="Direct link to TC39 Process" title="Direct link to TC39 Process">​</a></h3><p>In this release you'll start to see us aligned with the
<a href="https://docs.google.com/document/d/1QbEE0BsO4lvl7NFTn5WXWeiEIBfaVUF7Dk0hpPpPDzU" target="_blank" rel="noopener noreferrer">TC39 process</a>.
The TC39 is the technical committee from ECMA that writes the ECMAScript
standard. Their process is categorised into 5 stages:</p><ul><li>Stage 0 - Strawman</li><li>Stage 1 - Proposal</li><li>Stage 2 - Draft</li><li>Stage 3 - Candidate</li><li>Stage 4 - Finished</li></ul><p>Proposals that are <strong>stage 2 or above</strong> are enabled in Babel by default. Now
this does not mean that they're guaranteed to be included in future ECMAScript
specifications or even Babel itself. Stage 2 is considered a good point for
inclusion by default in Babel due to their relative maturity and need for
critical proposal feedback.</p><p>Now let's dive into the changes we made to 5.0.</p><hr><p><strong>Contents:</strong></p><ul><li><a href="#new-features">New Features</a><ul><li><a href="#new-proposals">New Proposals</a><ul><li><a href="#stage-0:-class-properties">Stage 0: Class Properties</a></li><li><a href="#stage-1:-decorators">Stage 1: Decorators</a></li><li><a href="#stage-1:-export-extensions">Stage 1: Export Extensions</a></li></ul></li><li><a href="#react-optimisations">React Optimisations</a><ul><li><a href="#constant-elements">Constant Elements</a></li><li><a href="#inline-elements">Inline Elements</a></li></ul></li><li><a href="#babelrc">.babelrc</a></li><li><a href="#plugin-api">Plugin API</a></li></ul></li><li><a href="#breaking-changes">Breaking Changes</a><ul><li><a href="#experimental-option">Experimental Option</a></li><li><a href="#class-changes">Class Changes</a></li><li><a href="#removed-features">Removed Features</a></li><li><a href="#imports-are-now-hoisted">imports are now hoisted</a></li></ul></li></ul><h1 class="babel-blog-section-title">New Features</h1><h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-proposals">New Proposals<a href="#new-proposals" class="hash-link" aria-label="Direct link to New Proposals" title="Direct link to New Proposals">​</a></h2><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-0-class-properties">Stage 0: Class Properties<a href="#stage-0-class-properties" class="hash-link" aria-label="Direct link to Stage 0: Class Properties" title="Direct link to Stage 0: Class Properties">​</a></h3><p><a href="https://github.com/jeffmo" target="_blank" rel="noopener noreferrer">Jeff Morrison's</a> stage 0
<a href="https://gist.github.com/jeffmo/054df782c05639da2adb" target="_blank" rel="noopener noreferrer">class property initializers proposal</a>
fills the void of property composition on classes. These are analogous with the
class properties example listed in the
<a href="https://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html#es7-property-initializers" target="_blank" rel="noopener noreferrer">React 0.13 beta announcement</a>.</p><p><strong>Example:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  firstName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Sebastian"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">static</span><span class="token plain"> lastName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"McKenzie"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">firstName</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Sebastian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token maybe-class-name">Person</span><span class="token punctuation">.</span><span class="token property-access">lastName</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"McKenzie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Usage:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">optional</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es7.classProperties"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">stage</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">0</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional es7.classProperties script.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"># or</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --stage 0 script.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-1-decorators">Stage 1: Decorators<a href="#stage-1-decorators" class="hash-link" aria-label="Direct link to Stage 1: Decorators" title="Direct link to Stage 1: Decorators">​</a></h3><p><a href="https://github.com/wycats" target="_blank" rel="noopener noreferrer">Yehuda Katz'</a> stage 1
<a href="https://github.com/wycats/javascript-decorators" target="_blank" rel="noopener noreferrer">decorators proposal</a> allows
you to elegantly compose property descriptors and metadata decoration. In the
future this will allow the powerful
<a href="http://guides.emberjs.com/v1.10.0/object-model/classes-and-instances/" target="_blank" rel="noopener noreferrer">Ember Object Model</a>
to easily be represented with native classes.</p><p><strong>Example:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">concat</span><span class="token punctuation">(</span><span class="token parameter spread operator" style="color:#f5871f">...</span><span class="token parameter" style="color:#f5871f">args</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">let</span><span class="token plain"> sep </span><span class="token operator">=</span><span class="token plain"> args</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">target</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> key</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> descriptor</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    descriptor</span><span class="token punctuation">.</span><span class="token method-variable function-variable method function property-access" style="color:#4271ae">initializer</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> args</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">map</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">arg</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">[</span><span class="token plain">arg</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">join</span><span class="token punctuation">(</span><span class="token plain">sep</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">autobind</span><span class="token punctuation">(</span><span class="token parameter" style="color:#f5871f">target</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> key</span><span class="token parameter punctuation" style="color:#f5871f">,</span><span class="token parameter" style="color:#f5871f"> descriptor</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> fn </span><span class="token operator">=</span><span class="token plain"> descriptor</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">delete</span><span class="token plain"> descriptor</span><span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword" style="color:#8959a8">delete</span><span class="token plain"> descriptor</span><span class="token punctuation">.</span><span class="token property-access">writable</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  descriptor</span><span class="token punctuation">.</span><span class="token method-variable function-variable method function property-access" style="color:#4271ae">get</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> bound </span><span class="token operator">=</span><span class="token plain"> fn</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">bind</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">defineProperty</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">,</span><span class="token plain"> key</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">configurable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">writable</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean" style="color:#f5871f">true</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">      </span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token plain"> bound</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> bound</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  firstName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Sebastian"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  lastName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"McKenzie"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">concat</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"firstName"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"lastName"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">" "</span><span class="token punctuation">)</span><span class="token plain"> fullName</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @</span><span class="token function" style="color:#4271ae">concat</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"lastName"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"firstName"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">", "</span><span class="token punctuation">)</span><span class="token plain"> formalName</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  @autobind</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">getFullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation keyword" style="color:#8959a8">this</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">firstName</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string string" style="color:#718c00"> </span><span class="token template-string interpolation interpolation-punctuation punctuation">${</span><span class="token template-string interpolation keyword" style="color:#8959a8">this</span><span class="token template-string interpolation punctuation">.</span><span class="token template-string interpolation property-access">lastName</span><span class="token template-string interpolation interpolation-punctuation punctuation">}</span><span class="token template-string template-punctuation string" style="color:#718c00">`</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">fullName</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Sebastian McKenzie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">formalName</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"McKenzie, Sebastian"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">assert</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">new</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getFullName</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"Sebastian McKenzie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Usage:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">optional</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es7.decorators"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">stage</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional es7.decorators script.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"># or</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --stage 1 script.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="stage-1-export-extensions">Stage 1: Export Extensions<a href="#stage-1-export-extensions" class="hash-link" aria-label="Direct link to Stage 1: Export Extensions" title="Direct link to Stage 1: Export Extensions">​</a></h3><p><a href="https://github.com/leebyron" target="_blank" rel="noopener noreferrer">Lee Byron's</a> stage 1
<a href="https://github.com/leebyron/ecmascript-more-export-from" target="_blank" rel="noopener noreferrer">additional export-from statements proposal</a>
completes the symmetry between import and export statement, allowing you to
easily export namespaces and defaults from external modules without
modifying the local scope.</p><p><strong>Exporting a default</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> foo </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>equivalent to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports">_foo</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"bar"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports"> _foo </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> foo </span><span class="token exports punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Exporting a namespace</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports operator">*</span><span class="token exports"> </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> ns</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>equivalent to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports operator">*</span><span class="token imports"> </span><span class="token imports keyword module" style="color:#8959a8">as</span><span class="token imports"> _ns</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"mod"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword module" style="color:#8959a8">export</span><span class="token plain"> </span><span class="token exports punctuation">{</span><span class="token exports"> _ns </span><span class="token exports keyword module" style="color:#8959a8">as</span><span class="token exports"> ns </span><span class="token exports punctuation">}</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Usage:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">optional</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"es7.exportExtensions"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token comment" style="color:#8e908c">// or</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">stage</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional es7.exportExtensions script.js</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"># or</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --stage 1 script.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="react-optimisations">React Optimisations<a href="#react-optimisations" class="hash-link" aria-label="Direct link to React Optimisations" title="Direct link to React Optimisations">​</a></h2><p>In preparation for React 0.14, Babel supports some optimisation transformers for
JSX.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="constant-elements"><a href="https://github.com/facebook/react/issues/3226" target="_blank" rel="noopener noreferrer">Constant Elements</a><a href="#constant-elements" class="hash-link" aria-label="Direct link to constant-elements" title="Direct link to constant-elements">​</a></h3><p>Starting with 0.14 ReactElements and their props objects can be treated as
value types. i.e. any instance is conceptually equivalent if all their values
are the same.</p><p>Take this function for example:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"react"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"foo"</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This can be optimized by moving the JSX out of the function body so that each
time it is called the same instance is returned:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword module" style="color:#8959a8">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#8959a8">from</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"react"</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">var</span><span class="token plain"> _ref </span><span class="token operator">=</span><span class="token plain"> </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"foo"</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function" style="color:#4271ae">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#8959a8">return</span><span class="token plain"> _ref</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Not only does it allow us to reuse the same objects, React will automatically
bail out any reconciliation of constant components - without a manual
<code>shouldComponentUpdate</code>.</p><p><strong>Usage:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">optional</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"optimisation.react.constantElements"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional optimisation.react.constantElements script.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_JmGV" id="inline-elements"><a href="https://github.com/facebook/react/issues/3228" target="_blank" rel="noopener noreferrer">Inline Elements</a><a href="#inline-elements" class="hash-link" aria-label="Direct link to inline-elements" title="Direct link to inline-elements">​</a></h3><blockquote class="alert alert--warning"><h4>Production only</h4><p>Inline Elements should <strong>only</strong> be enabled in production as multiple React warning messages are suppressed which is extremely risky in development.</p></blockquote><p>Starting with React 0.14 ReactElements can be inlined:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"foo"</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token plain">bar</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token maybe-class-name">Baz</span><span class="token plain"> key</span><span class="token operator">=</span><span class="token string" style="color:#718c00">"baz"</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>as objects:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'div'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">className</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'foo'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">children</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">[</span><span class="token plain"> bar</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token maybe-class-name">Baz</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">props</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'baz'</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">ref</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token plain"> </span><span class="token punctuation">}</span><span class="token plain"> </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">key</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">ref</span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword null nil" style="color:#8959a8">null</span><span class="token plain"> </span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This improves performance over the existing <code>React.createElement</code> call by
inlining the result of it.</p><p><strong>Usage:</strong></p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"babel"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">transform</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">"code"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token literal-property property">optional</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string" style="color:#718c00">"optimisation.react.inlineElements"</span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ babel --optional optimisation.react.inlineElements script.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="babelrc">.babelrc<a href="#babelrc" class="hash-link" aria-label="Direct link to .babelrc" title="Direct link to .babelrc">​</a></h2><p>Babel 5.0.0 has support for <code>.babelrc</code> out of the box across its <strong>entire</strong>
range of integrations. This means that it will work across
<a href="/babel-website/docs/babel-register"><code>babel/register</code></a>,
<a href="/babel-website/docs/babel-node"><code>babel-node</code></a> as well as across the entire range
of build system plugins and module loaders such as
<a href="https://github.com/babel/babel-loader" target="_blank" rel="noopener noreferrer"><code>babel-loader</code></a>,
<a href="https://github.com/babel/babelify" target="_blank" rel="noopener noreferrer"><code>babelify</code></a>, and others.</p><p><code>.babelrc</code> is equivalent to JSHint's <a href="http://jshint.com/docs/" target="_blank" rel="noopener noreferrer"><code>.jshintrc</code></a> and
JSCS' <a href="http://jscs.info/overview.html" target="_blank" rel="noopener noreferrer"><code>.jscsrc</code></a>.</p><div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JSON</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"stage"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number" style="color:#f5871f">1</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token property">"ignore"</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"foo.js"</span><span class="token punctuation">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token string" style="color:#718c00">"bar/**/*.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>See the <a href="/babel-website/docs/options">docs</a> for more info.</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="plugin-api">Plugin API<a href="#plugin-api" class="hash-link" aria-label="Direct link to Plugin API" title="Direct link to Plugin API">​</a></h2><p>5.0.0 also introduces the long anticipated plugin API. This allows you to hook
into the powerful traversal and transformation internals of Babel. See the
<a href="/babel-website/docs/plugins">docs</a> for more info.</p><h1 class="babel-blog-section-title">Breaking Changes</h1><h3 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-option">Experimental Option<a href="#experimental-option" class="hash-link" aria-label="Direct link to Experimental Option" title="Direct link to Experimental Option">​</a></h3><p>The <code>experimental</code> option has been <strong>removed</strong>. Fear not though, there is a
replacement. Babel now categories the ES7 transformers by
<a href="#tc39-changes">TC39 stages</a>.</p><p>tl;dr If you're using the <code>experimental</code> option, simply change it to
<code>$ babel --stage 0</code> or <code>{ stage: 0 }</code>.</p><blockquote><p><strong>Reminder:</strong> Proposals that are <strong>stage 2 or above</strong> are enabled by default.</p></blockquote><p><strong>Stage 0</strong></p><ul><li><code>es7.classProperties</code></li><li><code>es7.comprehensions</code></li></ul><p><strong>Stage 1</strong></p><ul><li><code>es7.asyncFunctions</code></li><li><code>es7.decorators</code></li><li><code>es7.exportExtensions</code></li><li><code>es7.objectRestSpread</code></li></ul><p><strong>Stage 2</strong> (Stage 2 and above are enabled by default)</p><ul><li><code>es7.exponentiationOperator</code></li></ul><p>For a list of all current ES7 proposals please see the
<a href="https://github.com/tc39/ecma262" target="_blank" rel="noopener noreferrer">tc39/ecma262 repo</a>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="returnusedhelpers-option"><code>returnUsedHelpers</code> option<a href="#returnusedhelpers-option" class="hash-link" aria-label="Direct link to returnusedhelpers-option" title="Direct link to returnusedhelpers-option">​</a></h3><p>The <code>returnUsedHelpers</code> option has been renamed to <code>metadataUsedHelpers</code> and the returning result
object has been changed from <code>usedHelpers</code> to <code>metadata.usedHelpers</code>.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="class-changes">Class Changes<a href="#class-changes" class="hash-link" aria-label="Direct link to Class Changes" title="Direct link to Class Changes">​</a></h3><p>5.0.0 introduces some updated derived class semantics that are long overdue.</p><p><code>super()</code> <strong>must</strong> be called in a derived class constructor.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bar</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token comment" style="color:#8e908c">// no `super();`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Access to <code>this</code> before <code>super()</code> in a derived class constructor is <strong>not</strong>
allowed.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">extends</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Bar</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">.</span><span class="token property-access">foo</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// `this` access before `super();`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>super()</code> is <strong>only</strong> allowed in derived class constructors.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">class</span><span class="token plain"> </span><span class="token class-name" style="color:#eab700">Foo</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token keyword" style="color:#8959a8">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"> </span><span class="token comment" style="color:#8e908c">// not in a derived constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_JmGV" id="removed-features">Removed Features<a href="#removed-features" class="hash-link" aria-label="Direct link to Removed Features" title="Direct link to Removed Features">​</a></h2><ul><li>The playground has been removed so development can be focussed on mainstream
ES features and proposals. This also reduces the risk of syntactic conflicts
preventing certain official features from being implemented.</li><li><a href="https://github.com/zenparsing/es-abstract-refs" target="_blank" rel="noopener noreferrer">Abstract references</a> have
been removed as the proposal has been superseded. Support for one or more of the
superseding proposals may be implemented in the future.</li></ul><hr><p>In closing, we hope that you are now as excited about this release as we are.
There's a lot that went into it, and we believe this will set us up for a long
time into the future.</p><p class="text-right">— The Babel team</p><h2 class="anchor anchorWithStickyNavbar_JmGV" id="imports-are-now-hoisted">Imports are now hoisted<a href="#imports-are-now-hoisted" class="hash-link" aria-label="Direct link to Imports are now hoisted" title="Direct link to Imports are now hoisted">​</a></h2><p>In <code>4.x</code>, imports were inlined as where they appeared in the code. Which means that this code:</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">global.test = 'test'</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">import './test'</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>would compile to:</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">'use strict';</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">global.test = 'test';</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">require('./test');</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, from <code>5.x</code> on, this behaviour has been changed in order to comply with the ES6 spec and <em><a href="https://gitter.im/babel/babel?at=5525474d80f7bb0315a369ce" target="_blank" rel="noopener noreferrer">imports will</a> <a href="https://stackoverflow.com/questions/29329662/are-es6-module-imports-hoisted" target="_blank" rel="noopener noreferrer">now be hoisted</a></em>. What this means in practical code is that the snippet above will get converted to something like:</p><div class="codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-text codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">'use strict';</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">require('./test');</span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">global.test = 'test';</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If your code required certain bits and pieces to be executed in between a specific module being imported -which might be the case while testing code and you need to fake some <code>window</code> properties :)- you may want to extract that away into its own file and import it before the code that needs it.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Babel <3 React]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/02/23/babel-loves-react</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/02/23/babel-loves-react</guid>
            <pubDate>Mon, 23 Feb 2015 10:00:00 GMT</pubDate>
            <description><![CDATA[One of the things that surprises people quite often is that Babel supports JSX]]></description>
            <content:encoded><![CDATA[<p>One of the things that surprises people quite often is that Babel supports JSX
out of the box.</p><p>Let me show you just how easy it is to switch:</p><blockquote><p><strong>Note:</strong> There are <em>tons</em> of ways to use Babel, I'll only list a few of them
here. If you'd like to see a more complete list check out our
<a href="/babel-website/setup">Using Babel</a> page.</p></blockquote><p><strong>In the Browser</strong> (<a href="/babel-website/setup#browser/">docs</a>)</p><p>Before:</p><div class="language-html codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-html codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">script</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#f5871f">=</span><span class="token tag attr-value punctuation" style="color:#f5871f">'</span><span class="token tag attr-value" style="color:#f5871f">text/jsx</span><span class="token tag attr-value punctuation" style="color:#f5871f">'</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#c82829">&lt;/</span><span class="token tag" style="color:#c82829">script</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After:</p><div class="language-html codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-html codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token tag punctuation" style="color:#c82829">&lt;</span><span class="token tag" style="color:#c82829">script</span><span class="token tag" style="color:#c82829"> </span><span class="token tag attr-name" style="color:#4271ae">type</span><span class="token tag attr-value punctuation attr-equals" style="color:#f5871f">=</span><span class="token tag attr-value punctuation" style="color:#f5871f">'</span><span class="token tag attr-value" style="color:#f5871f">text/babel</span><span class="token tag attr-value punctuation" style="color:#f5871f">'</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#c82829">&lt;/</span><span class="token tag" style="color:#c82829">script</span><span class="token tag punctuation" style="color:#c82829">&gt;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In Browserify</strong> (<a href="/babel-website/setup#browserify">docs</a>)</p><p>Before:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ browserify -t reactify main.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ browserify -t babelify main.js</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In Node</strong> (<a href="/babel-website/setup#require/">docs</a>)</p><p>Before:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'node-jsx'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">install</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token function" style="color:#4271ae">require</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'babel/register'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In Webpack</strong> (<a href="/babel-website/setup#webpack">docs</a>)</p><p>Before:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">loaders</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">\.js$</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">exclude</span><span class="token operator">:</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">node_modules</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">loader</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'jsx-loader'</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token literal-property property">loaders</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token punctuation">{</span><span class="token plain"> </span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">\.js$</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">exclude</span><span class="token operator">:</span><span class="token plain"> </span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token regex regex-source language-regex" style="color:#3e999f">node_modules</span><span class="token regex regex-delimiter" style="color:#3e999f">/</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token literal-property property">loader</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:#718c00">'babel-loader'</span><span class="token punctuation">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>In Gulp</strong> (<a href="/babel-website/setup#gulp">docs</a>)</p><p>Before:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">gulp</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">src</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'views/**/*.js'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">pipe</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">jsx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">pipe</span><span class="token punctuation">(</span><span class="token plain">gulp</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">dest</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">gulp</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">src</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'views/**/*.js'</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">pipe</span><span class="token punctuation">(</span><span class="token function" style="color:#4271ae">babel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">    </span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">pipe</span><span class="token punctuation">(</span><span class="token plain">gulp</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">dest</span><span class="token punctuation">(</span><span class="token string" style="color:#718c00">'dist'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><hr><p>The list goes on, but you probably get how simple it is by now. If you didn't
see the tool you are looking for don't worry we have a full list of them on our
<a href="/babel-website/setup">Using Babel</a> page.</p><p>If you need more help getting setup be sure to read our <a href="/babel-website/setup#jsx/">JSX</a>
docs or come ask other Babel users in our
<a href="https://gitter.im/babel/babel" target="_blank" rel="noopener noreferrer">support chat</a>.</p><p class="text-right">— The Babel team</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Not Born to Die]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/02/15/not-born-to-die</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/02/15/not-born-to-die</guid>
            <pubDate>Sun, 15 Feb 2015 09:18:00 GMT</pubDate>
            <description><![CDATA[I like to start off our blog posts with the latest big thing 6to5 has achieved. We haven’t reached it quite yet, but in a few days 6to5 and 6to5-core will have been downloaded half a million times, and in a month or so it will be over a million times.]]></description>
            <content:encoded><![CDATA[<p>I like to start off our blog posts with the latest big thing 6to5 has achieved. We haven’t reached it quite yet, but in a few days 6to5 and 6to5-core will have been downloaded <strong>half a million times</strong>, and in a month or so it will be over a <strong>million</strong> times.</p><p>There has been a bit of confusion in the past as to 6to5’s role in the JavaScript community, which can largely be attributed to its name.</p><p>6to5 was not born to die.</p><p>Even when the next edition of JavaScript is supported across all environments, the work that has gone into 6to5 will continue to serve an important role in the community.</p><p>From minifiers to beautifiers, from linters to code coverage instrumentors, compile-to-javascript languages and syntax extensions, code highlighters and on and on. There are two things that almost any tooling of any programming language depends on really heavily: parsers and transpilers.</p><p>The history of these tools in JavaScript has been long and sad. Everyone is constantly reimplementing the same things and it’s created an absolute mess. It’s also the number one reason new language features take a long time to roll out (i.e. “I love using Arrow Functions, but it breaks our code coverage”).</p><p>Luckily a lot of work is happening to improve this.</p><p>Recently a number of people from Mozilla, Esprima, The jQuery Foundation, Acorn, 6to5, ESLint, and others have come together to create <a href="https://github.com/estree/estree" target="_blank" rel="noopener noreferrer">ESTree</a>, a standard upon which all parser and transpiler tooling will be based on.</p><p>We want for 6to5 to solve the transpiler story. If the community could rally around a tool that provides a solid foundation for dealing with a lot of shared issues then we’ll all be much better off.</p><p>That might sound a bit absurd and like a fairly lofty goal. Many will think it’s <em>out of scope</em> for something named “6to5”.</p><p>I guess it’d be a good idea to rename the project then!</p><p>6to5 is now Babel.</p><p>Babel will continue to serve as a JavaScript transpiler for using the very latest standards, but will also begin to open up its API for other tools. Anyone who has worked on the project internally knows that Babel is incredibly easy to work with.</p><p>We’re incredibly excited for the future and we hope that we can make an even bigger impact on the JavaScript community.</p><p>Always bet on JavaScript.</p><p class="text-right">— The recently Babel team</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2to3]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/01/27/2to3</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/01/27/2to3</guid>
            <pubDate>Tue, 27 Jan 2015 11:40:00 GMT</pubDate>
            <description><![CDATA[These past few weeks we’ve seen lots of activity on 6to5; thousands are downloading it every day from all corners of the world. In the past month, over 200 issues have been closed. Since the 2.0 release, there have been 867 commits and 60 minor and patch releases. It’s now among the top 1% of most downloaded packages on npm, with nearly 100k downloads in the last month alone.]]></description>
            <content:encoded><![CDATA[<p>These past few weeks we’ve seen lots of activity on 6to5; thousands are downloading it every day from all corners of the world.&nbsp;In the past month, over 200 issues have been closed. Since the 2.0 release, there have been 867 commits and 60 minor and patch releases. It’s now among the top 1% of most downloaded packages on npm, with nearly 100k downloads in the last month alone.</p><p>Today we are releasing 3.0.</p><blockquote><p><strong>Note:</strong> 6to5 doesn't hold onto bug fixes or new backwards compatible features for major releases. Some of the features listed are from later 2.x releases.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_JmGV" id="loose-mode">Loose Mode<a href="#loose-mode" class="hash-link" aria-label="Direct link to Loose Mode" title="Direct link to Loose Mode">​</a></h3><p>6to5 is very focused on spec-compliancy in everything that it does. Sometimes the spec requires a lot of complexity around edgecases that don't affect most code.</p><p>We’ve added Loose Mode for ignoring some of these edgecases in order to create cleaner, smaller, and faster executing output.</p><p>For example, calling <code>super()</code> inside a constructor would normally be compiled to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token function" style="color:#4271ae">_get</span><span class="token punctuation">(</span><span class="token known-class-name class-name" style="color:#eab700">Object</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">getPrototypeOf</span><span class="token punctuation">(</span><span class="token class-name" style="color:#eab700">Foo</span><span class="token punctuation">.</span><span class="token property-access">prototype</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token string" style="color:#718c00">"constructor"</span><span class="token punctuation">,</span><span class="token plain"> </span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, with Loose Mode it is compiled to:</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword" style="color:#8959a8">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#4271ae">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain">  </span><span class="token maybe-class-name">Bar</span><span class="token punctuation">.</span><span class="token method function property-access" style="color:#4271ae">call</span><span class="token punctuation">(</span><span class="token keyword" style="color:#8959a8">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#4d4d4c"><span class="token plain"></span><span class="token punctuation">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Before you use Loose Mode, you should be aware that it doesn't line up with the spec completely, it may lead to incompatible code if you aren't aware of these inconsistencies. Check out the <a href="https://hzoo.github.io/babel.github.io/docs/usage/loose/" target="_blank" rel="noopener noreferrer">docs</a> for more info.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="performance-improvements">Performance Improvements<a href="#performance-improvements" class="hash-link" aria-label="Direct link to Performance Improvements" title="Direct link to Performance Improvements">​</a></h3><p>In the past few weeks <a href="https://github.com/gaearon" target="_blank" rel="noopener noreferrer">@gaearon</a> has done some amazing work to improve 6to5 compilation time by over 200%. These kinds of improvements are extremely important to us and we’re happy to see such great contributions from community members.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="playground-mallet-operator">Playground: Mallet Operator<a href="#playground-mallet-operator" class="hash-link" aria-label="Direct link to Playground: Mallet Operator" title="Direct link to Playground: Mallet Operator">​</a></h3><p>As seen in Ruby and CoffeeScript, the Mallet operator allows you to conditionally assign values based on their falsy-ness.</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">a </span><span class="token operator">||=</span><span class="token plain"> b</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>will behave like</p><div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">JavaScript</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token keyword control-flow" style="color:#8959a8">if</span><span class="token plain"> </span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token plain">a</span><span class="token punctuation">)</span><span class="token plain"> a </span><span class="token operator">=</span><span class="token plain"> b</span><span class="token punctuation">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This one comes to you from <a href="https://github.com/jridgewell" target="_blank" rel="noopener noreferrer">@jridgewell</a>. We encourage proposal authors to come forward in order to get their ideas implemented alongside all of the latest language and API features.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="selfcontained">selfContained<a href="#selfcontained" class="hash-link" aria-label="Direct link to selfContained" title="Direct link to selfContained">​</a></h3><p>We’ve also introduced a new optional transformer that negates the need for a polyfill and bypasses all 6to5 <a href="https://hzoo.github.io/babel.github.io/docs/usage/caveats/" target="_blank" rel="noopener noreferrer">caveats</a>. It will automatically alias ES6 static methods and built-ins as well as include <code>regenerator</code> whenever you use async functions or generators. This is great for libraries that don't want to pollute the global scope.</p><p>This replaces the <code>coreAliasing</code> transform and the <code>includeRegenerator</code> option. Check out the <a href="https://hzoo.github.io/babel.github.io/docs/usage/transformers#selfContained" target="_blank" rel="noopener noreferrer">docs</a> for more info.</p><h3 class="anchor anchorWithStickyNavbar_JmGV" id="namespaced-transformers">Namespaced Transformers<a href="#namespaced-transformers" class="hash-link" aria-label="Direct link to Namespaced Transformers" title="Direct link to Namespaced Transformers">​</a></h3><p>In 3.0, we’ve renamed all of the transformers, not just for consistency but in order to namespace them.</p><p>For example, we’ve renamed all of the es7 transformers to be things like <code>es7.comprehensions</code> or <code>es7.objectSpread</code> so if you would like to blacklist all of the es7 transformers you can simply:</p><div class="language-sh codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#4d4d4c;--prism-background-color:#fdfaeb"><div class="codeBlockTitle_x_ju">Shell</div><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-sh codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#4d4d4c"><span class="token plain">$ 6to5 --blacklist es7</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg class="copyButtonIcon_FoOz" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_L0B6" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For a full list of the renamed transformers see the <a href="https://github.com/6to5/6to5/blob/master/CHANGELOG.md#300" target="_blank" rel="noopener noreferrer">Changelog</a>.</p><hr><p>There are many new features and bug fixes that makes v3 an excellent release. Be sure to review them all in the <a href="https://github.com/6to5/6to5/blob/master/CHANGELOG.md#300" target="_blank" rel="noopener noreferrer">Changelog</a>.</p><p>We’d like to thank everyone who has been involved in the 6to5 community and especially those who have contributed to making 3.0 happen.</p><p>The future is looking bright.</p><p class="text-right">— The 6to5 team</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[6to5 + esnext]]></title>
            <link>https://paion-data.github.io/babel-website/blog/2015/01/12/6to5-esnext</link>
            <guid>https://paion-data.github.io/babel-website/blog/2015/01/12/6to5-esnext</guid>
            <pubDate>Mon, 12 Jan 2015 10:40:00 GMT</pubDate>
            <description><![CDATA[The past few months have been exciting for 6to5. We’ve gone from being an educational project to having 100k downloads on npm, there’s been 1,800 commits and 155 releases, we now support every major JavaScript build system, and recently we became a Sprockets 4.0 default. To top it off, our new website and documentation received tens of thousands of pageviews, and has been featured by several publications including JavaScript Weekly.]]></description>
            <content:encoded><![CDATA[<p>The past few months have been exciting for 6to5. We’ve gone from being an educational project to having 100k downloads on npm, there’s been 1,800 commits and 155 releases, we now support every major JavaScript build system, and recently we became a Sprockets 4.0 default. To top it off, our new website and documentation received tens of thousands of pageviews, and has been featured by several publications including JavaScript Weekly.</p><img loading="lazy" class="img-responsive" alt="npm downloads of 6to5, traceur, and esnext" src="/assets/2015-01-12-6to5-esnext/chart-1.png"><p class="text-center small text-muted">(Source: npm, includes 5-day moving point average)</p><p>And we’re just getting started...</p><p>6to5’s mission is to take future versions of JavaScript and compile them into spec compliant, performant, and readable JavaScript files you can run today. With built-in support for JSX and Flow Types, 6to5 provides a lot more than other transpilers.</p><p>Our top priority is eliminating any barriers to ES6+ adoption, and while 6to5 may be the most feature-ready ES6 transpiler out there right now, there are other great projects attempting to do the same. Traceur Compiler is the most common alternative to our compiler, but it’s also the most different since it relies heavily on a runtime. Other alternatives with similar approach to 6to5 include: es6-transpiler, es6now, jstransform, and esnext.</p><p>esnext is the closest 6to5 in it’s aim. With a focus on creating a smarter transpiler that can create higher quality ES5-compatible output, both projects are easy to get started with, and both care deeply about creating the best tool for developers.</p><p>A few weeks back, Stefan Penner reached out to us hoping that, because we share the same mission, we might be able to unite our efforts. Excited by the idea, we quickly scheduled a meeting to discuss what that might mean.</p><p>The meeting went well:</p><blockquote class="twitter-tweet center-block" lang="en"><p><a href="https://twitter.com/hashtag/6to5?src=hash" target="_blank" rel="noopener noreferrer">#6to5</a> + <a href="https://twitter.com/hashtag/esnext?src=hash" target="_blank" rel="noopener noreferrer">#esnext</a> I'm looking forward to our future together! Thanks guys <a href="https://twitter.com/sebmck" target="_blank" rel="noopener noreferrer">@sebmck</a> <a href="https://twitter.com/stefanpenner" target="_blank" rel="noopener noreferrer">@stefanpenner</a> <a href="https://twitter.com/eventualbuddha" target="_blank" rel="noopener noreferrer">@eventualbuddha</a> <a href="https://twitter.com/Rich_Harris" target="_blank" rel="noopener noreferrer">@Rich_Harris</a></p>— James Kyle (@thejameskyle) <a href="https://twitter.com/thejameskyle/status/551474226708766720" target="_blank" rel="noopener noreferrer">January 3, 2015</a></blockquote><script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script><p>We’ve decided that because of our shared goals and philosophy it makes sense to merge the two projects in an effort to build a better transpiler.</p><p>So what will this mean for both projects?</p><p>The esnext team will start work on 6to5 bringing their skillset and experience to make it faster and more spec-compliant. On our end, we will be migrating people from esnext to 6to5—we’ve already ported all of the esnext tests to 6to5 to ensure nothing will break.</p><blockquote><p>Ember CLI users (currently using esnext) can expect 6to5 to become installed by default replacing esnext.</p></blockquote><p>You can expect continued work on 6to5; we’re always finding ways to grow and refine. We hope others will join our efforts so our energy can be spent improving rather the competing.</p><p class="text-right">— The 6to5 team</p>]]></content:encoded>
        </item>
    </channel>
</rss>